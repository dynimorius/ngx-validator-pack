{"modules":[{"ast":{"type":"Program","start":0,"end":5206,"body":[{"type":"ExportNamedDeclaration","start":0,"end":406,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7,"end":406,"kind":"const","declarations":[{"type":"VariableDeclarator","start":13,"end":405,"id":{"type":"Identifier","start":13,"end":29,"name":"prepareToCompare"},"init":{"type":"ArrowFunctionExpression","start":32,"end":405,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":33,"end":37,"name":"date"},{"type":"Identifier","start":39,"end":50,"name":"bufferYears"}],"body":{"type":"BlockStatement","start":55,"end":405,"body":[{"type":"IfStatement","start":61,"end":403,"test":{"type":"Identifier","start":65,"end":69,"name":"date"},"consequent":{"type":"BlockStatement","start":71,"end":368,"body":[{"type":"VariableDeclaration","start":81,"end":134,"kind":"const","declarations":[{"type":"VariableDeclarator","start":87,"end":133,"id":{"type":"Identifier","start":87,"end":91,"name":"year"},"init":{"type":"BinaryExpression","start":94,"end":133,"operator":"+","left":{"type":"CallExpression","start":94,"end":112,"optional":false,"callee":{"type":"MemberExpression","start":94,"end":110,"computed":false,"optional":false,"object":{"type":"Identifier","start":94,"end":98,"name":"date"},"property":{"type":"Identifier","start":99,"end":110,"name":"getFullYear"}},"arguments":[]},"right":{"type":"LogicalExpression","start":116,"end":132,"operator":"||","left":{"type":"Identifier","start":116,"end":127,"name":"bufferYears"},"right":{"type":"Literal","start":131,"end":132,"raw":"0","value":0}}}}]},{"type":"VariableDeclaration","start":143,"end":177,"kind":"const","declarations":[{"type":"VariableDeclarator","start":149,"end":176,"id":{"type":"Identifier","start":149,"end":154,"name":"month"},"init":{"type":"BinaryExpression","start":157,"end":176,"operator":"+","left":{"type":"CallExpression","start":157,"end":172,"optional":false,"callee":{"type":"MemberExpression","start":157,"end":170,"computed":false,"optional":false,"object":{"type":"Identifier","start":157,"end":161,"name":"date"},"property":{"type":"Identifier","start":162,"end":170,"name":"getMonth"}},"arguments":[]},"right":{"type":"Literal","start":175,"end":176,"raw":"1","value":1}}}]},{"type":"VariableDeclaration","start":186,"end":213,"kind":"const","declarations":[{"type":"VariableDeclarator","start":192,"end":212,"id":{"type":"Identifier","start":192,"end":195,"name":"day"},"init":{"type":"CallExpression","start":198,"end":212,"optional":false,"callee":{"type":"MemberExpression","start":198,"end":210,"computed":false,"optional":false,"object":{"type":"Identifier","start":198,"end":202,"name":"date"},"property":{"type":"Identifier","start":203,"end":210,"name":"getDate"}},"arguments":[]}}]},{"type":"ReturnStatement","start":222,"end":362,"argument":{"type":"CallExpression","start":229,"end":361,"optional":false,"callee":{"type":"MemberExpression","start":229,"end":244,"computed":false,"optional":false,"object":{"type":"Identifier","start":229,"end":235,"name":"Number"},"property":{"type":"Identifier","start":236,"end":244,"name":"parseInt"}},"arguments":[{"type":"TemplateLiteral","start":245,"end":360,"quasis":[{"type":"TemplateElement","start":246,"end":246,"tail":false,"value":{"cooked":"","raw":""}},{"type":"TemplateElement","start":253,"end":253,"tail":false,"value":{"cooked":"","raw":""}},{"type":"TemplateElement","start":313,"end":313,"tail":false,"value":{"cooked":"","raw":""}},{"type":"TemplateElement","start":359,"end":359,"tail":true,"value":{"cooked":"","raw":""}}],"expressions":[{"type":"Identifier","start":248,"end":252,"name":"year"},{"type":"ConditionalExpression","start":255,"end":312,"test":{"type":"BinaryExpression","start":255,"end":290,"operator":">","left":{"type":"MemberExpression","start":255,"end":286,"computed":false,"optional":false,"object":{"type":"MemberExpression","start":255,"end":279,"computed":false,"optional":false,"object":{"type":"CallExpression","start":255,"end":271,"optional":false,"callee":{"type":"MemberExpression","start":255,"end":269,"computed":false,"optional":false,"object":{"type":"Identifier","start":255,"end":260,"name":"month"},"property":{"type":"Identifier","start":261,"end":269,"name":"toString"}},"arguments":[]},"property":{"type":"Identifier","start":272,"end":279,"name":"replace"}},"property":{"type":"Identifier","start":280,"end":286,"name":"length"}},"right":{"type":"Literal","start":289,"end":290,"raw":"1","value":1}},"consequent":{"type":"Identifier","start":293,"end":298,"name":"month"},"alternate":{"type":"BinaryExpression","start":301,"end":312,"operator":"+","left":{"type":"Literal","start":301,"end":304,"value":"0","raw":"'0'"},"right":{"type":"Identifier","start":307,"end":312,"name":"month"}}},{"type":"ConditionalExpression","start":315,"end":358,"test":{"type":"BinaryExpression","start":315,"end":340,"operator":">","left":{"type":"MemberExpression","start":315,"end":336,"computed":false,"optional":false,"object":{"type":"CallExpression","start":315,"end":329,"optional":false,"callee":{"type":"MemberExpression","start":315,"end":327,"computed":false,"optional":false,"object":{"type":"Identifier","start":315,"end":318,"name":"day"},"property":{"type":"Identifier","start":319,"end":327,"name":"toString"}},"arguments":[]},"property":{"type":"Identifier","start":330,"end":336,"name":"length"}},"right":{"type":"Literal","start":339,"end":340,"raw":"1","value":1}},"consequent":{"type":"Identifier","start":343,"end":346,"name":"day"},"alternate":{"type":"BinaryExpression","start":349,"end":358,"operator":"+","left":{"type":"Literal","start":349,"end":352,"value":"0","raw":"'0'"},"right":{"type":"Identifier","start":355,"end":358,"name":"day"}}}]}]}}]},"alternate":{"type":"BlockStatement","start":378,"end":403,"body":[{"type":"ReturnStatement","start":388,"end":397,"argument":{"type":"Literal","start":395,"end":396,"raw":"0","value":0}}]}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":407,"end":521,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":414,"end":521,"kind":"const","declarations":[{"type":"VariableDeclarator","start":420,"end":520,"id":{"type":"Identifier","start":420,"end":432,"name":"compareDates"},"init":{"type":"ArrowFunctionExpression","start":435,"end":520,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":436,"end":441,"name":"date1"},{"type":"Identifier","start":443,"end":448,"name":"date2"},{"type":"AssignmentPattern","start":450,"end":467,"left":{"type":"Identifier","start":450,"end":459,"name":"operation"},"right":{"type":"Literal","start":462,"end":467,"value":"===","raw":"'==='"}}],"body":{"type":"BlockStatement","start":472,"end":520,"body":[{"type":"ReturnStatement","start":478,"end":518,"argument":{"type":"CallExpression","start":485,"end":517,"optional":false,"callee":{"type":"Identifier","start":485,"end":492,"name":"compare"},"arguments":[{"type":"Identifier","start":493,"end":498,"name":"date1"},{"type":"Identifier","start":500,"end":505,"name":"date2"},{"type":"Identifier","start":507,"end":516,"name":"operation"}]}}]},"id":null}}]}},{"type":"VariableDeclaration","start":522,"end":1059,"kind":"const","declarations":[{"type":"VariableDeclarator","start":528,"end":1058,"id":{"type":"Identifier","start":528,"end":535,"name":"compare"},"init":{"type":"ArrowFunctionExpression","start":538,"end":1058,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":539,"end":544,"name":"date1"},{"type":"Identifier","start":546,"end":551,"name":"date2"},{"type":"Identifier","start":553,"end":563,"name":"comparison"}],"body":{"type":"BlockStatement","start":568,"end":1058,"body":[{"type":"VariableDeclaration","start":574,"end":1007,"kind":"const","declarations":[{"type":"VariableDeclarator","start":580,"end":1006,"id":{"type":"Identifier","start":580,"end":590,"name":"operations"},"init":{"type":"ObjectExpression","start":593,"end":1006,"properties":[{"type":"Property","start":603,"end":659,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":603,"end":606,"value":"<","raw":"'<'"},"value":{"type":"ArrowFunctionExpression","start":608,"end":659,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":609,"end":610,"name":"a"},{"type":"Identifier","start":612,"end":613,"name":"b"}],"body":{"type":"BinaryExpression","start":618,"end":659,"operator":"<","left":{"type":"CallExpression","start":618,"end":637,"optional":false,"callee":{"type":"Identifier","start":618,"end":634,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":635,"end":636,"name":"a"}]},"right":{"type":"CallExpression","start":640,"end":659,"optional":false,"callee":{"type":"Identifier","start":640,"end":656,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":657,"end":658,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":669,"end":725,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":669,"end":672,"value":">","raw":"'>'"},"value":{"type":"ArrowFunctionExpression","start":674,"end":725,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":675,"end":676,"name":"a"},{"type":"Identifier","start":678,"end":679,"name":"b"}],"body":{"type":"BinaryExpression","start":684,"end":725,"operator":">","left":{"type":"CallExpression","start":684,"end":703,"optional":false,"callee":{"type":"Identifier","start":684,"end":700,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":701,"end":702,"name":"a"}]},"right":{"type":"CallExpression","start":706,"end":725,"optional":false,"callee":{"type":"Identifier","start":706,"end":722,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":723,"end":724,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":735,"end":793,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":735,"end":739,"value":"==","raw":"'=='"},"value":{"type":"ArrowFunctionExpression","start":741,"end":793,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":742,"end":743,"name":"a"},{"type":"Identifier","start":745,"end":746,"name":"b"}],"body":{"type":"BinaryExpression","start":751,"end":793,"operator":"==","left":{"type":"CallExpression","start":751,"end":770,"optional":false,"callee":{"type":"Identifier","start":751,"end":767,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":768,"end":769,"name":"a"}]},"right":{"type":"CallExpression","start":774,"end":793,"optional":false,"callee":{"type":"Identifier","start":774,"end":790,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":791,"end":792,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":803,"end":863,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":803,"end":808,"value":"===","raw":"'==='"},"value":{"type":"ArrowFunctionExpression","start":810,"end":863,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":811,"end":812,"name":"a"},{"type":"Identifier","start":814,"end":815,"name":"b"}],"body":{"type":"BinaryExpression","start":820,"end":863,"operator":"===","left":{"type":"CallExpression","start":820,"end":839,"optional":false,"callee":{"type":"Identifier","start":820,"end":836,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":837,"end":838,"name":"a"}]},"right":{"type":"CallExpression","start":844,"end":863,"optional":false,"callee":{"type":"Identifier","start":844,"end":860,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":861,"end":862,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":873,"end":931,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":873,"end":877,"value":"<=","raw":"'<='"},"value":{"type":"ArrowFunctionExpression","start":879,"end":931,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":880,"end":881,"name":"a"},{"type":"Identifier","start":883,"end":884,"name":"b"}],"body":{"type":"BinaryExpression","start":889,"end":931,"operator":"<=","left":{"type":"CallExpression","start":889,"end":908,"optional":false,"callee":{"type":"Identifier","start":889,"end":905,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":906,"end":907,"name":"a"}]},"right":{"type":"CallExpression","start":912,"end":931,"optional":false,"callee":{"type":"Identifier","start":912,"end":928,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":929,"end":930,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":941,"end":999,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":941,"end":945,"value":">=","raw":"'>='"},"value":{"type":"ArrowFunctionExpression","start":947,"end":999,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":948,"end":949,"name":"a"},{"type":"Identifier","start":951,"end":952,"name":"b"}],"body":{"type":"BinaryExpression","start":957,"end":999,"operator":">=","left":{"type":"CallExpression","start":957,"end":976,"optional":false,"callee":{"type":"Identifier","start":957,"end":973,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":974,"end":975,"name":"a"}]},"right":{"type":"CallExpression","start":980,"end":999,"optional":false,"callee":{"type":"Identifier","start":980,"end":996,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":997,"end":998,"name":"b"}]}},"id":null},"kind":"init"}]}}]},{"type":"ReturnStatement","start":1012,"end":1056,"argument":{"type":"CallExpression","start":1019,"end":1055,"optional":false,"callee":{"type":"MemberExpression","start":1019,"end":1041,"computed":true,"optional":false,"object":{"type":"Identifier","start":1019,"end":1029,"name":"operations"},"property":{"type":"Identifier","start":1030,"end":1040,"name":"comparison"}},"arguments":[{"type":"Identifier","start":1042,"end":1047,"name":"date1"},{"type":"Identifier","start":1049,"end":1054,"name":"date2"}]}}]},"id":null}}]}],"_rollupRemoved":[{"end":5206,"start":1060,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"export const prepareToCompare = (date, bufferYears) => {\n    if (date) {\n        const year = date.getFullYear() + (bufferYears || 0);\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return Number.parseInt(`${year}${month.toString().replace.length > 1 ? month : '0' + month}${day.toString().length > 1 ? day : '0' + day}`);\n    }\n    else {\n        return 0;\n    }\n};\nexport const compareDates = (date1, date2, operation = '===') => {\n    return compare(date1, date2, operation);\n};\nconst compare = (date1, date2, comparison) => {\n    const operations = {\n        '<': (a, b) => prepareToCompare(a) < prepareToCompare(b),\n        '>': (a, b) => prepareToCompare(a) > prepareToCompare(b),\n        '==': (a, b) => prepareToCompare(a) == prepareToCompare(b),\n        '===': (a, b) => prepareToCompare(a) === prepareToCompare(b),\n        '<=': (a, b) => prepareToCompare(a) <= prepareToCompare(b),\n        '>=': (a, b) => prepareToCompare(a) >= prepareToCompare(b),\n    };\n    return operations[comparison](date1, date2);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL2hlbHBlcnMvZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxDQUM1QixJQUFzQixFQUN0QixXQUFvQixFQUNkLEVBQUU7SUFDUixJQUFHLElBQUksRUFBRSxDQUFDO1FBQ04sTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3JELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDbEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzNCLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FDbEIsR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLEdBQUcsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUN0SCxDQUFDO0lBQ04sQ0FBQztTQUNJLENBQUM7UUFDRixPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7QUFDTCxDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFlBQWtDLEtBQUssRUFBVyxFQUFFO0lBQ3ZHLE9BQU8sT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDNUMsQ0FBQyxDQUFBO0FBRUQsTUFBTSxPQUFPLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFVBQWdDLEVBQVcsRUFBRTtJQUNwRixNQUFNLFVBQVUsR0FBRztRQUNmLEdBQUcsRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUNwRSxHQUFHLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDcEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQ3RFLEtBQUssRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxLQUFLLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUN4RSxJQUFJLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDdEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0tBQ3pFLENBQUE7SUFDRCxPQUFPLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDaEQsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgQ29tcGFyaXNvbk9wZXJhdGlvbnMgPSAnPCcgfCAnPicgfCAnPT0nIHwgJz09PScgfCAnPD0nIHwgJz49JztcblxuZXhwb3J0IGNvbnN0IHByZXBhcmVUb0NvbXBhcmUgPSAoXG4gICAgZGF0ZTogRGF0ZSB8IHVuZGVmaW5lZCxcbiAgICBidWZmZXJZZWFycz86IG51bWJlclxuKTogbnVtYmVyID0+IHtcbiAgICBpZihkYXRlKSB7XG4gICAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCkgKyAoYnVmZmVyWWVhcnMgfHwgMCk7XG4gICAgICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTtcbiAgICAgICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICBgJHt5ZWFyfSR7bW9udGgudG9TdHJpbmcoKS5yZXBsYWNlLmxlbmd0aCA+IDEgPyBtb250aCA6ICcwJyArIG1vbnRofSR7ZGF5LnRvU3RyaW5nKCkubGVuZ3RoID4gMSA/IGRheSA6ICcwJyArIGRheX1gXG4gICAgICAgICk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG59IFxuXG5leHBvcnQgY29uc3QgY29tcGFyZURhdGVzID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgb3BlcmF0aW9uOiBDb21wYXJpc29uT3BlcmF0aW9ucyA9ICc9PT0nKTogYm9vbGVhbiA9PiB7XG4gICAgcmV0dXJuIGNvbXBhcmUoZGF0ZTEsIGRhdGUyLCBvcGVyYXRpb24pO1xufVxuXG5jb25zdCBjb21wYXJlID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgY29tcGFyaXNvbjogQ29tcGFyaXNvbk9wZXJhdGlvbnMpOiBib29sZWFuID0+IHtcbiAgICBjb25zdCBvcGVyYXRpb25zID0ge1xuICAgICAgICAnPCc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpIDwgcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz4nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA+IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PSc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpID09IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PT0nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA9PT0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJzw9JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPD0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz49JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPj0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICB9XG4gICAgcmV0dXJuIG9wZXJhdGlvbnNbY29tcGFyaXNvbl0oZGF0ZTEsIGRhdGUyKTtcbn0iXX0=","customTransformCache":false,"dependencies":[],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/date.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export const prepareToCompare = (date, bufferYears) => {\n    if (date) {\n        const year = date.getFullYear() + (bufferYears || 0);\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return Number.parseInt(`${year}${month.toString().replace.length > 1 ? month : '0' + month}${day.toString().length > 1 ? day : '0' + day}`);\n    }\n    else {\n        return 0;\n    }\n};\nexport const compareDates = (date1, date2, operation = '===') => {\n    return compare(date1, date2, operation);\n};\nconst compare = (date1, date2, comparison) => {\n    const operations = {\n        '<': (a, b) => prepareToCompare(a) < prepareToCompare(b),\n        '>': (a, b) => prepareToCompare(a) > prepareToCompare(b),\n        '==': (a, b) => prepareToCompare(a) == prepareToCompare(b),\n        '===': (a, b) => prepareToCompare(a) === prepareToCompare(b),\n        '<=': (a, b) => prepareToCompare(a) <= prepareToCompare(b),\n        '>=': (a, b) => prepareToCompare(a) >= prepareToCompare(b),\n    };\n    return operations[comparison](date1, date2);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL2hlbHBlcnMvZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxDQUM1QixJQUFzQixFQUN0QixXQUFvQixFQUNkLEVBQUU7SUFDUixJQUFHLElBQUksRUFBRSxDQUFDO1FBQ04sTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3JELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDbEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzNCLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FDbEIsR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLEdBQUcsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUN0SCxDQUFDO0lBQ04sQ0FBQztTQUNJLENBQUM7UUFDRixPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7QUFDTCxDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFlBQWtDLEtBQUssRUFBVyxFQUFFO0lBQ3ZHLE9BQU8sT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDNUMsQ0FBQyxDQUFBO0FBRUQsTUFBTSxPQUFPLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFVBQWdDLEVBQVcsRUFBRTtJQUNwRixNQUFNLFVBQVUsR0FBRztRQUNmLEdBQUcsRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUNwRSxHQUFHLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDcEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQ3RFLEtBQUssRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxLQUFLLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUN4RSxJQUFJLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDdEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0tBQ3pFLENBQUE7SUFDRCxPQUFPLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDaEQsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgQ29tcGFyaXNvbk9wZXJhdGlvbnMgPSAnPCcgfCAnPicgfCAnPT0nIHwgJz09PScgfCAnPD0nIHwgJz49JztcblxuZXhwb3J0IGNvbnN0IHByZXBhcmVUb0NvbXBhcmUgPSAoXG4gICAgZGF0ZTogRGF0ZSB8IHVuZGVmaW5lZCxcbiAgICBidWZmZXJZZWFycz86IG51bWJlclxuKTogbnVtYmVyID0+IHtcbiAgICBpZihkYXRlKSB7XG4gICAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCkgKyAoYnVmZmVyWWVhcnMgfHwgMCk7XG4gICAgICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTtcbiAgICAgICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICBgJHt5ZWFyfSR7bW9udGgudG9TdHJpbmcoKS5yZXBsYWNlLmxlbmd0aCA+IDEgPyBtb250aCA6ICcwJyArIG1vbnRofSR7ZGF5LnRvU3RyaW5nKCkubGVuZ3RoID4gMSA/IGRheSA6ICcwJyArIGRheX1gXG4gICAgICAgICk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG59IFxuXG5leHBvcnQgY29uc3QgY29tcGFyZURhdGVzID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgb3BlcmF0aW9uOiBDb21wYXJpc29uT3BlcmF0aW9ucyA9ICc9PT0nKTogYm9vbGVhbiA9PiB7XG4gICAgcmV0dXJuIGNvbXBhcmUoZGF0ZTEsIGRhdGUyLCBvcGVyYXRpb24pO1xufVxuXG5jb25zdCBjb21wYXJlID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgY29tcGFyaXNvbjogQ29tcGFyaXNvbk9wZXJhdGlvbnMpOiBib29sZWFuID0+IHtcbiAgICBjb25zdCBvcGVyYXRpb25zID0ge1xuICAgICAgICAnPCc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpIDwgcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz4nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA+IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PSc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpID09IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PT0nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA9PT0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJzw9JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPD0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz49JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPj0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICB9XG4gICAgcmV0dXJuIG9wZXJhdGlvbnNbY29tcGFyaXNvbl0oZGF0ZTEsIGRhdGUyKTtcbn0iXX0=","originalSourcemap":{"version":3,"file":"date.js","sourceRoot":"","sources":["../../../../../projects/ngx-validator-pack/src/lib/helpers/date.ts"],"names":[],"mappings":[[[0,0,2,0],[6,0,2,6],[7,0,2,7],[13,0,2,13],[29,0,2,29],[32,0,2,32],[33,0,3,4],[37,0,3,26],[39,0,4,4],[50,0,4,24],[52,0,5,10],[54,0,5,12]],[[4,0,6,4],[8,0,6,7],[12,0,6,11],[14,0,6,13],[15,0,6,14]],[[8,0,7,8],[14,0,7,14],[18,0,7,18],[21,0,7,21],[25,0,7,25],[26,0,7,26],[37,0,7,37],[39,0,7,39],[42,0,7,42],[43,0,7,43],[54,0,7,54],[58,0,7,58],[59,0,7,59],[60,0,7,60],[61,0,7,61]],[[8,0,8,8],[14,0,8,14],[19,0,8,19],[22,0,8,22],[26,0,8,26],[27,0,8,27],[35,0,8,35],[37,0,8,37],[40,0,8,40],[41,0,8,41],[42,0,8,42]],[[8,0,9,8],[14,0,9,14],[17,0,9,17],[20,0,9,20],[24,0,9,24],[25,0,9,25],[32,0,9,32],[34,0,9,34],[35,0,9,35]],[[8,0,10,8],[15,0,10,15],[21,0,10,21],[22,0,10,22],[30,0,10,30],[31,0,11,12],[34,0,11,15],[38,0,11,19],[41,0,11,22],[46,0,11,27],[47,0,11,28],[55,0,11,36],[57,0,11,38],[58,0,11,39],[65,0,11,46],[66,0,11,47],[72,0,11,53],[75,0,11,56],[76,0,11,57],[77,0,11,58],[78,0,11,59],[79,0,11,60],[84,0,11,65],[85,0,11,66],[86,0,11,67],[87,0,11,68],[90,0,11,71],[93,0,11,74],[98,0,11,79],[101,0,11,82],[104,0,11,85],[105,0,11,86],[113,0,11,94],[115,0,11,96],[116,0,11,97],[122,0,11,103],[125,0,11,106],[126,0,11,107],[127,0,11,108],[128,0,11,109],[129,0,11,110],[132,0,11,113],[133,0,11,114],[134,0,11,115],[135,0,11,116],[138,0,11,119],[141,0,11,122],[144,0,11,125],[146,0,11,127],[147,0,12,9],[148,0,12,10]],[[4,0,13,4],[5,0,13,5]],[[9,0,14,9],[10,0,14,10]],[[8,0,15,8],[15,0,15,15],[16,0,15,16],[17,0,15,17]],[[4,0,16,4],[5,0,16,5]],[[0,0,17,0],[1,0,17,1],[2,0,17,1]],[[0,0,19,0],[6,0,19,6],[7,0,19,7],[13,0,19,13],[25,0,19,25],[28,0,19,28],[29,0,19,29],[34,0,19,40],[36,0,19,42],[41,0,19,53],[43,0,19,55],[55,0,19,89],[60,0,19,94],[62,0,19,105],[64,0,19,107]],[[4,0,20,4],[11,0,20,11],[18,0,20,18],[19,0,20,19],[24,0,20,24],[26,0,20,26],[31,0,20,31],[33,0,20,33],[42,0,20,42],[43,0,20,43],[44,0,20,44]],[[0,0,21,0],[1,0,21,1],[2,0,21,1]],[[0,0,23,0],[6,0,23,6],[13,0,23,13],[16,0,23,16],[17,0,23,17],[22,0,23,28],[24,0,23,30],[29,0,23,41],[31,0,23,43],[41,0,23,75],[43,0,23,86],[45,0,23,88]],[[4,0,24,4],[10,0,24,10],[20,0,24,20],[23,0,24,23]],[[8,0,25,8],[11,0,25,11],[13,0,25,13],[14,0,25,14],[15,0,25,21],[17,0,25,23],[18,0,25,30],[20,0,25,32],[22,0,25,34],[23,0,25,35],[39,0,25,51],[40,0,25,52],[41,0,25,53],[42,0,25,54],[45,0,25,57],[61,0,25,73],[62,0,25,74],[63,0,25,75],[64,0,25,76]],[[8,0,26,8],[11,0,26,11],[13,0,26,13],[14,0,26,14],[15,0,26,21],[17,0,26,23],[18,0,26,30],[20,0,26,32],[22,0,26,34],[23,0,26,35],[39,0,26,51],[40,0,26,52],[41,0,26,53],[42,0,26,54],[45,0,26,57],[61,0,26,73],[62,0,26,74],[63,0,26,75],[64,0,26,76]],[[8,0,27,8],[12,0,27,12],[14,0,27,14],[15,0,27,15],[16,0,27,22],[18,0,27,24],[19,0,27,31],[21,0,27,33],[23,0,27,35],[24,0,27,36],[40,0,27,52],[41,0,27,53],[42,0,27,54],[43,0,27,55],[47,0,27,59],[63,0,27,75],[64,0,27,76],[65,0,27,77],[66,0,27,78]],[[8,0,28,8],[13,0,28,13],[15,0,28,15],[16,0,28,16],[17,0,28,23],[19,0,28,25],[20,0,28,32],[22,0,28,34],[24,0,28,36],[25,0,28,37],[41,0,28,53],[42,0,28,54],[43,0,28,55],[44,0,28,56],[49,0,28,61],[65,0,28,77],[66,0,28,78],[67,0,28,79],[68,0,28,80]],[[8,0,29,8],[12,0,29,12],[14,0,29,14],[15,0,29,15],[16,0,29,22],[18,0,29,24],[19,0,29,31],[21,0,29,33],[23,0,29,35],[24,0,29,36],[40,0,29,52],[41,0,29,53],[42,0,29,54],[43,0,29,55],[47,0,29,59],[63,0,29,75],[64,0,29,76],[65,0,29,77],[66,0,29,78]],[[8,0,30,8],[12,0,30,12],[14,0,30,14],[15,0,30,15],[16,0,30,22],[18,0,30,24],[19,0,30,31],[21,0,30,33],[23,0,30,35],[24,0,30,36],[40,0,30,52],[41,0,30,53],[42,0,30,54],[43,0,30,55],[47,0,30,59],[63,0,30,75],[64,0,30,76],[65,0,30,77],[66,0,30,78]],[[5,0,31,5],[6,0,31,5]],[[4,0,32,4],[11,0,32,11],[21,0,32,21],[22,0,32,22],[32,0,32,32],[33,0,32,33],[34,0,32,34],[39,0,32,39],[41,0,32,41],[46,0,32,46],[47,0,32,47],[48,0,32,48]],[[0,0,33,0],[1,0,33,1],[2,0,33,1]]],"sourcesContent":["export type ComparisonOperations = '<' | '>' | '==' | '===' | '<=' | '>=';\n\nexport const prepareToCompare = (\n    date: Date | undefined,\n    bufferYears?: number\n): number => {\n    if(date) {\n        const year = date.getFullYear() + (bufferYears || 0);\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return Number.parseInt(\n            `${year}${month.toString().replace.length > 1 ? month : '0' + month}${day.toString().length > 1 ? day : '0' + day}`\n        );\n    }\n    else {\n        return 0;\n    }\n} \n\nexport const compareDates = (date1: Date, date2: Date, operation: ComparisonOperations = '==='): boolean => {\n    return compare(date1, date2, operation);\n}\n\nconst compare = (date1: Date, date2: Date, comparison: ComparisonOperations): boolean => {\n    const operations = {\n        '<': (a: Date, b: Date) => prepareToCompare(a) < prepareToCompare(b),\n        '>': (a: Date, b: Date) => prepareToCompare(a) > prepareToCompare(b),\n        '==': (a: Date, b: Date) => prepareToCompare(a) == prepareToCompare(b),\n        '===': (a: Date, b: Date) => prepareToCompare(a) === prepareToCompare(b),\n        '<=': (a: Date, b: Date) => prepareToCompare(a) <= prepareToCompare(b),\n        '>=': (a: Date, b: Date) => prepareToCompare(a) >= prepareToCompare(b),\n    }\n    return operations[comparison](date1, date2);\n}"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":26338,"body":[{"type":"ImportDeclaration","start":192,"end":256,"specifiers":[{"type":"ImportSpecifier","start":201,"end":213,"imported":{"type":"Identifier","start":201,"end":213,"name":"compareDates"},"local":{"type":"Identifier","start":201,"end":213,"name":"compareDates"}},{"type":"ImportSpecifier","start":215,"end":231,"imported":{"type":"Identifier","start":215,"end":231,"name":"prepareToCompare"},"local":{"type":"Identifier","start":215,"end":231,"name":"prepareToCompare"}}],"source":{"type":"Literal","start":239,"end":255,"value":"./helpers/date","raw":"'./helpers/date'"},"attributes":[]},{"type":"ExportNamedDeclaration","start":638,"end":967,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":645,"end":967,"kind":"const","declarations":[{"type":"VariableDeclarator","start":651,"end":966,"id":{"type":"Identifier","start":651,"end":671,"name":"regexpMatchValidator"},"init":{"type":"ArrowFunctionExpression","start":674,"end":966,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":675,"end":681,"name":"regexp"},{"type":"Identifier","start":683,"end":692,"name":"errorName"},{"type":"Identifier","start":694,"end":699,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":704,"end":966,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":705,"end":712,"name":"control"}],"body":{"type":"BlockStatement","start":717,"end":966,"body":[{"type":"ExpressionStatement","start":723,"end":791,"expression":{"type":"AssignmentExpression","start":723,"end":790,"operator":"=","left":{"type":"Identifier","start":723,"end":728,"name":"error"},"right":{"type":"LogicalExpression","start":731,"end":790,"operator":"||","left":{"type":"Identifier","start":731,"end":736,"name":"error"},"right":{"type":"Literal","start":740,"end":790,"value":"This control matched a given regular expression.","raw":"'This control matched a given regular expression.'"}}}},{"type":"VariableDeclaration","start":796,"end":891,"kind":"const","declarations":[{"type":"VariableDeclarator","start":802,"end":890,"id":{"type":"Identifier","start":802,"end":808,"name":"errors"},"init":{"type":"ConditionalExpression","start":811,"end":890,"test":{"type":"BinaryExpression","start":811,"end":836,"operator":"===","left":{"type":"UnaryExpression","start":811,"end":823,"operator":"typeof","argument":{"type":"Identifier","start":818,"end":823,"name":"error"},"prefix":true},"right":{"type":"Literal","start":828,"end":836,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":839,"end":882,"properties":[{"type":"Property","start":841,"end":880,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":842,"end":872,"operator":"||","left":{"type":"Identifier","start":842,"end":851,"name":"errorName"},"right":{"type":"Literal","start":855,"end":872,"value":"regexpValidator","raw":"'regexpValidator'"}},"value":{"type":"Identifier","start":875,"end":880,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":885,"end":890,"name":"error"}}}]},{"type":"ReturnStatement","start":896,"end":964,"argument":{"type":"ConditionalExpression","start":903,"end":963,"test":{"type":"LogicalExpression","start":903,"end":947,"operator":"||","left":{"type":"UnaryExpression","start":903,"end":917,"operator":"!","argument":{"type":"MemberExpression","start":904,"end":917,"computed":false,"optional":false,"object":{"type":"Identifier","start":904,"end":911,"name":"control"},"property":{"type":"Identifier","start":912,"end":917,"name":"value"}},"prefix":true},"right":{"type":"CallExpression","start":921,"end":947,"optional":false,"callee":{"type":"MemberExpression","start":921,"end":932,"computed":false,"optional":false,"object":{"type":"Identifier","start":921,"end":927,"name":"regexp"},"property":{"type":"Identifier","start":928,"end":932,"name":"test"}},"arguments":[{"type":"MemberExpression","start":933,"end":946,"computed":false,"optional":false,"object":{"type":"Identifier","start":933,"end":940,"name":"control"},"property":{"type":"Identifier","start":941,"end":946,"name":"value"}}]}},"consequent":{"type":"Literal","start":950,"end":954,"raw":"null","value":null},"alternate":{"type":"Identifier","start":957,"end":963,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":1349,"end":1683,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1356,"end":1683,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1362,"end":1682,"id":{"type":"Identifier","start":1362,"end":1386,"name":"regexpNotAMatchValidator"},"init":{"type":"ArrowFunctionExpression","start":1389,"end":1682,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":1390,"end":1396,"name":"regexp"},{"type":"Identifier","start":1398,"end":1407,"name":"errorName"},{"type":"Identifier","start":1409,"end":1414,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":1419,"end":1682,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":1420,"end":1427,"name":"control"}],"body":{"type":"BlockStatement","start":1432,"end":1682,"body":[{"type":"ExpressionStatement","start":1438,"end":1506,"expression":{"type":"AssignmentExpression","start":1438,"end":1505,"operator":"=","left":{"type":"Identifier","start":1438,"end":1443,"name":"error"},"right":{"type":"LogicalExpression","start":1446,"end":1505,"operator":"||","left":{"type":"Identifier","start":1446,"end":1451,"name":"error"},"right":{"type":"Literal","start":1455,"end":1505,"value":"This control matched a given regular expression.","raw":"'This control matched a given regular expression.'"}}}},{"type":"VariableDeclaration","start":1511,"end":1606,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1517,"end":1605,"id":{"type":"Identifier","start":1517,"end":1523,"name":"errors"},"init":{"type":"ConditionalExpression","start":1526,"end":1605,"test":{"type":"BinaryExpression","start":1526,"end":1551,"operator":"===","left":{"type":"UnaryExpression","start":1526,"end":1538,"operator":"typeof","argument":{"type":"Identifier","start":1533,"end":1538,"name":"error"},"prefix":true},"right":{"type":"Literal","start":1543,"end":1551,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":1554,"end":1597,"properties":[{"type":"Property","start":1556,"end":1595,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":1557,"end":1587,"operator":"||","left":{"type":"Identifier","start":1557,"end":1566,"name":"errorName"},"right":{"type":"Literal","start":1570,"end":1587,"value":"regexpValidator","raw":"'regexpValidator'"}},"value":{"type":"Identifier","start":1590,"end":1595,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":1600,"end":1605,"name":"error"}}}]},{"type":"ReturnStatement","start":1611,"end":1680,"argument":{"type":"ConditionalExpression","start":1618,"end":1679,"test":{"type":"LogicalExpression","start":1618,"end":1663,"operator":"||","left":{"type":"UnaryExpression","start":1618,"end":1632,"operator":"!","argument":{"type":"MemberExpression","start":1619,"end":1632,"computed":false,"optional":false,"object":{"type":"Identifier","start":1619,"end":1626,"name":"control"},"property":{"type":"Identifier","start":1627,"end":1632,"name":"value"}},"prefix":true},"right":{"type":"UnaryExpression","start":1636,"end":1663,"operator":"!","argument":{"type":"CallExpression","start":1637,"end":1663,"optional":false,"callee":{"type":"MemberExpression","start":1637,"end":1648,"computed":false,"optional":false,"object":{"type":"Identifier","start":1637,"end":1643,"name":"regexp"},"property":{"type":"Identifier","start":1644,"end":1648,"name":"test"}},"arguments":[{"type":"MemberExpression","start":1649,"end":1662,"computed":false,"optional":false,"object":{"type":"Identifier","start":1649,"end":1656,"name":"control"},"property":{"type":"Identifier","start":1657,"end":1662,"name":"value"}}]},"prefix":true}},"consequent":{"type":"Literal","start":1666,"end":1670,"raw":"null","value":null},"alternate":{"type":"Identifier","start":1673,"end":1679,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":2145,"end":2499,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":2152,"end":2499,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2158,"end":2498,"id":{"type":"Identifier","start":2158,"end":2178,"name":"earlierThenValidator"},"init":{"type":"ArrowFunctionExpression","start":2181,"end":2498,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":2182,"end":2186,"name":"date"},{"type":"Identifier","start":2188,"end":2197,"name":"errorName"},{"type":"Identifier","start":2199,"end":2204,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":2209,"end":2498,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":2210,"end":2217,"name":"control"}],"body":{"type":"BlockStatement","start":2222,"end":2498,"body":[{"type":"ExpressionStatement","start":2228,"end":2307,"expression":{"type":"AssignmentExpression","start":2228,"end":2306,"operator":"=","left":{"type":"Identifier","start":2228,"end":2233,"name":"error"},"right":{"type":"LogicalExpression","start":2236,"end":2306,"operator":"||","left":{"type":"Identifier","start":2236,"end":2241,"name":"error"},"right":{"type":"TemplateLiteral","start":2245,"end":2306,"quasis":[{"type":"TemplateElement","start":2246,"end":2290,"tail":false,"value":{"cooked":"This control must have a value earlier then ","raw":"This control must have a value earlier then "}},{"type":"TemplateElement","start":2304,"end":2305,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"ChainExpression","start":2292,"end":2303,"expression":{"type":"MemberExpression","start":2292,"end":2303,"computed":false,"optional":true,"object":{"type":"Identifier","start":2292,"end":2296,"name":"date"},"property":{"type":"Identifier","start":2298,"end":2303,"name":"value"}}}]}}}},{"type":"VariableDeclaration","start":2312,"end":2403,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2318,"end":2402,"id":{"type":"Identifier","start":2318,"end":2324,"name":"errors"},"init":{"type":"ConditionalExpression","start":2327,"end":2402,"test":{"type":"BinaryExpression","start":2327,"end":2352,"operator":"===","left":{"type":"UnaryExpression","start":2327,"end":2339,"operator":"typeof","argument":{"type":"Identifier","start":2334,"end":2339,"name":"error"},"prefix":true},"right":{"type":"Literal","start":2344,"end":2352,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":2355,"end":2394,"properties":[{"type":"Property","start":2357,"end":2392,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":2358,"end":2384,"operator":"||","left":{"type":"Identifier","start":2358,"end":2367,"name":"errorName"},"right":{"type":"Literal","start":2371,"end":2384,"value":"earlierThen","raw":"'earlierThen'"}},"value":{"type":"Identifier","start":2387,"end":2392,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":2397,"end":2402,"name":"error"}}}]},{"type":"ReturnStatement","start":2408,"end":2496,"argument":{"type":"ConditionalExpression","start":2415,"end":2495,"test":{"type":"BinaryExpression","start":2415,"end":2479,"operator":"<","left":{"type":"CallExpression","start":2415,"end":2447,"optional":false,"callee":{"type":"Identifier","start":2415,"end":2431,"name":"prepareToCompare"},"arguments":[{"type":"ChainExpression","start":2432,"end":2446,"expression":{"type":"MemberExpression","start":2432,"end":2446,"computed":false,"optional":true,"object":{"type":"Identifier","start":2432,"end":2439,"name":"control"},"property":{"type":"Identifier","start":2441,"end":2446,"name":"value"}}}]},"right":{"type":"CallExpression","start":2450,"end":2479,"optional":false,"callee":{"type":"Identifier","start":2450,"end":2466,"name":"prepareToCompare"},"arguments":[{"type":"ChainExpression","start":2467,"end":2478,"expression":{"type":"MemberExpression","start":2467,"end":2478,"computed":false,"optional":true,"object":{"type":"Identifier","start":2467,"end":2471,"name":"date"},"property":{"type":"Identifier","start":2473,"end":2478,"name":"value"}}}]}},"consequent":{"type":"Literal","start":2482,"end":2486,"raw":"null","value":null},"alternate":{"type":"Identifier","start":2489,"end":2495,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":2953,"end":3301,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":2960,"end":3301,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2966,"end":3300,"id":{"type":"Identifier","start":2966,"end":2984,"name":"laterThenValidator"},"init":{"type":"ArrowFunctionExpression","start":2987,"end":3300,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":2988,"end":2992,"name":"date"},{"type":"Identifier","start":2994,"end":3003,"name":"errorName"},{"type":"Identifier","start":3005,"end":3010,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":3015,"end":3300,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":3016,"end":3023,"name":"control"}],"body":{"type":"BlockStatement","start":3028,"end":3300,"body":[{"type":"ExpressionStatement","start":3034,"end":3111,"expression":{"type":"AssignmentExpression","start":3034,"end":3110,"operator":"=","left":{"type":"Identifier","start":3034,"end":3039,"name":"error"},"right":{"type":"LogicalExpression","start":3042,"end":3110,"operator":"||","left":{"type":"Identifier","start":3042,"end":3047,"name":"error"},"right":{"type":"TemplateLiteral","start":3051,"end":3110,"quasis":[{"type":"TemplateElement","start":3052,"end":3094,"tail":false,"value":{"cooked":"This control must have a value later then ","raw":"This control must have a value later then "}},{"type":"TemplateElement","start":3108,"end":3109,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"ChainExpression","start":3096,"end":3107,"expression":{"type":"MemberExpression","start":3096,"end":3107,"computed":false,"optional":true,"object":{"type":"Identifier","start":3096,"end":3100,"name":"date"},"property":{"type":"Identifier","start":3102,"end":3107,"name":"value"}}}]}}}},{"type":"VariableDeclaration","start":3116,"end":3205,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3122,"end":3204,"id":{"type":"Identifier","start":3122,"end":3128,"name":"errors"},"init":{"type":"ConditionalExpression","start":3131,"end":3204,"test":{"type":"BinaryExpression","start":3131,"end":3156,"operator":"===","left":{"type":"UnaryExpression","start":3131,"end":3143,"operator":"typeof","argument":{"type":"Identifier","start":3138,"end":3143,"name":"error"},"prefix":true},"right":{"type":"Literal","start":3148,"end":3156,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":3159,"end":3196,"properties":[{"type":"Property","start":3161,"end":3194,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":3162,"end":3186,"operator":"||","left":{"type":"Identifier","start":3162,"end":3171,"name":"errorName"},"right":{"type":"Literal","start":3175,"end":3186,"value":"laterThen","raw":"'laterThen'"}},"value":{"type":"Identifier","start":3189,"end":3194,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":3199,"end":3204,"name":"error"}}}]},{"type":"ReturnStatement","start":3210,"end":3298,"argument":{"type":"ConditionalExpression","start":3217,"end":3297,"test":{"type":"BinaryExpression","start":3217,"end":3281,"operator":">","left":{"type":"CallExpression","start":3217,"end":3249,"optional":false,"callee":{"type":"Identifier","start":3217,"end":3233,"name":"prepareToCompare"},"arguments":[{"type":"ChainExpression","start":3234,"end":3248,"expression":{"type":"MemberExpression","start":3234,"end":3248,"computed":false,"optional":true,"object":{"type":"Identifier","start":3234,"end":3241,"name":"control"},"property":{"type":"Identifier","start":3243,"end":3248,"name":"value"}}}]},"right":{"type":"CallExpression","start":3252,"end":3281,"optional":false,"callee":{"type":"Identifier","start":3252,"end":3268,"name":"prepareToCompare"},"arguments":[{"type":"ChainExpression","start":3269,"end":3280,"expression":{"type":"MemberExpression","start":3269,"end":3280,"computed":false,"optional":true,"object":{"type":"Identifier","start":3269,"end":3273,"name":"date"},"property":{"type":"Identifier","start":3275,"end":3280,"name":"value"}}}]}},"consequent":{"type":"Literal","start":3284,"end":3288,"raw":"null","value":null},"alternate":{"type":"Identifier","start":3291,"end":3297,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":3785,"end":4204,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3792,"end":4204,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3798,"end":4203,"id":{"type":"Identifier","start":3798,"end":3816,"name":"compareToValidator"},"init":{"type":"ArrowFunctionExpression","start":3819,"end":4203,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":3820,"end":3829,"name":"filedName"},{"type":"Identifier","start":3831,"end":3841,"name":"comparison"},{"type":"Identifier","start":3843,"end":3852,"name":"errorName"},{"type":"Identifier","start":3854,"end":3859,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":3864,"end":4203,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":3865,"end":3872,"name":"control"}],"body":{"type":"BlockStatement","start":3877,"end":4203,"body":[{"type":"VariableDeclaration","start":3883,"end":3934,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3889,"end":3933,"id":{"type":"Identifier","start":3889,"end":3893,"name":"date"},"init":{"type":"ChainExpression","start":3896,"end":3933,"expression":{"type":"MemberExpression","start":3896,"end":3933,"computed":false,"optional":true,"object":{"type":"CallExpression","start":3896,"end":3926,"optional":false,"callee":{"type":"MemberExpression","start":3896,"end":3915,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":3896,"end":3910,"computed":false,"optional":false,"object":{"type":"Identifier","start":3896,"end":3903,"name":"control"},"property":{"type":"Identifier","start":3904,"end":3910,"name":"parent"}},"property":{"type":"Identifier","start":3912,"end":3915,"name":"get"}},"arguments":[{"type":"Identifier","start":3916,"end":3925,"name":"filedName"}]},"property":{"type":"Identifier","start":3928,"end":3933,"name":"value"}}}}]},{"type":"ExpressionStatement","start":3939,"end":4003,"expression":{"type":"AssignmentExpression","start":3939,"end":4002,"operator":"=","left":{"type":"Identifier","start":3939,"end":3944,"name":"error"},"right":{"type":"LogicalExpression","start":3947,"end":4002,"operator":"||","left":{"type":"Identifier","start":3947,"end":3952,"name":"error"},"right":{"type":"TemplateLiteral","start":3956,"end":4002,"quasis":[{"type":"TemplateElement","start":3957,"end":3979,"tail":false,"value":{"cooked":"Value comparison with ","raw":"Value comparison with "}},{"type":"TemplateElement","start":3993,"end":4001,"tail":true,"value":{"cooked":" failed.","raw":" failed."}}],"expressions":[{"type":"ChainExpression","start":3981,"end":3992,"expression":{"type":"MemberExpression","start":3981,"end":3992,"computed":false,"optional":true,"object":{"type":"Identifier","start":3981,"end":3985,"name":"date"},"property":{"type":"Identifier","start":3987,"end":3992,"name":"value"}}}]}}}},{"type":"VariableDeclaration","start":4008,"end":4102,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4014,"end":4101,"id":{"type":"Identifier","start":4014,"end":4020,"name":"errors"},"init":{"type":"ConditionalExpression","start":4023,"end":4101,"test":{"type":"BinaryExpression","start":4023,"end":4048,"operator":"===","left":{"type":"UnaryExpression","start":4023,"end":4035,"operator":"typeof","argument":{"type":"Identifier","start":4030,"end":4035,"name":"error"},"prefix":true},"right":{"type":"Literal","start":4040,"end":4048,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":4051,"end":4093,"properties":[{"type":"Property","start":4053,"end":4091,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":4054,"end":4083,"operator":"||","left":{"type":"Identifier","start":4054,"end":4063,"name":"errorName"},"right":{"type":"Literal","start":4067,"end":4083,"value":"dateComparison","raw":"'dateComparison'"}},"value":{"type":"Identifier","start":4086,"end":4091,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":4096,"end":4101,"name":"error"}}}]},{"type":"ReturnStatement","start":4107,"end":4201,"argument":{"type":"ConditionalExpression","start":4114,"end":4200,"test":{"type":"LogicalExpression","start":4114,"end":4184,"operator":"&&","left":{"type":"LogicalExpression","start":4114,"end":4135,"operator":"&&","left":{"type":"MemberExpression","start":4114,"end":4127,"computed":false,"optional":false,"object":{"type":"Identifier","start":4114,"end":4121,"name":"control"},"property":{"type":"Identifier","start":4122,"end":4127,"name":"value"}},"right":{"type":"Identifier","start":4131,"end":4135,"name":"date"}},"right":{"type":"CallExpression","start":4139,"end":4184,"optional":false,"callee":{"type":"Identifier","start":4139,"end":4151,"name":"compareDates"},"arguments":[{"type":"MemberExpression","start":4152,"end":4165,"computed":false,"optional":false,"object":{"type":"Identifier","start":4152,"end":4159,"name":"control"},"property":{"type":"Identifier","start":4160,"end":4165,"name":"value"}},{"type":"Identifier","start":4167,"end":4171,"name":"date"},{"type":"Identifier","start":4173,"end":4183,"name":"comparison"}]}},"consequent":{"type":"Literal","start":4187,"end":4191,"raw":"null","value":null},"alternate":{"type":"Identifier","start":4194,"end":4200,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":4565,"end":4957,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4572,"end":4957,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4578,"end":4956,"id":{"type":"Identifier","start":4578,"end":4599,"name":"requiredWhenValidator"},"init":{"type":"ArrowFunctionExpression","start":4602,"end":4956,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":4603,"end":4614,"name":"conditional"},{"type":"Identifier","start":4616,"end":4625,"name":"errorName"},{"type":"Identifier","start":4627,"end":4632,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":4637,"end":4956,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":4638,"end":4645,"name":"control"}],"body":{"type":"BlockStatement","start":4650,"end":4956,"body":[{"type":"ExpressionStatement","start":4656,"end":4717,"expression":{"type":"AssignmentExpression","start":4656,"end":4716,"operator":"=","left":{"type":"Identifier","start":4656,"end":4661,"name":"error"},"right":{"type":"LogicalExpression","start":4664,"end":4716,"operator":"||","left":{"type":"Identifier","start":4664,"end":4669,"name":"error"},"right":{"type":"Literal","start":4673,"end":4716,"value":"This control has a conditional set on it.","raw":"'This control has a conditional set on it.'"}}}},{"type":"VariableDeclaration","start":4722,"end":4814,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4728,"end":4813,"id":{"type":"Identifier","start":4728,"end":4734,"name":"errors"},"init":{"type":"ConditionalExpression","start":4737,"end":4813,"test":{"type":"BinaryExpression","start":4737,"end":4762,"operator":"===","left":{"type":"UnaryExpression","start":4737,"end":4749,"operator":"typeof","argument":{"type":"Identifier","start":4744,"end":4749,"name":"error"},"prefix":true},"right":{"type":"Literal","start":4754,"end":4762,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":4765,"end":4805,"properties":[{"type":"Property","start":4767,"end":4803,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":4768,"end":4795,"operator":"||","left":{"type":"Identifier","start":4768,"end":4777,"name":"errorName"},"right":{"type":"Literal","start":4781,"end":4795,"value":"requiredWhen","raw":"'requiredWhen'"}},"value":{"type":"Identifier","start":4798,"end":4803,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":4808,"end":4813,"name":"error"}}}]},{"type":"VariableDeclaration","start":4819,"end":4899,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4825,"end":4898,"id":{"type":"Identifier","start":4825,"end":4832,"name":"outcome"},"init":{"type":"ConditionalExpression","start":4835,"end":4898,"test":{"type":"BinaryExpression","start":4835,"end":4868,"operator":"===","left":{"type":"UnaryExpression","start":4835,"end":4853,"operator":"typeof","argument":{"type":"Identifier","start":4842,"end":4853,"name":"conditional"},"prefix":true},"right":{"type":"Literal","start":4858,"end":4868,"value":"function","raw":"'function'"}},"consequent":{"type":"CallExpression","start":4871,"end":4884,"optional":false,"callee":{"type":"Identifier","start":4871,"end":4882,"name":"conditional"},"arguments":[]},"alternate":{"type":"Identifier","start":4887,"end":4898,"name":"conditional"}}}]},{"type":"ReturnStatement","start":4904,"end":4954,"argument":{"type":"ConditionalExpression","start":4911,"end":4953,"test":{"type":"LogicalExpression","start":4911,"end":4937,"operator":"||","left":{"type":"UnaryExpression","start":4911,"end":4925,"operator":"!","argument":{"type":"MemberExpression","start":4912,"end":4925,"computed":false,"optional":false,"object":{"type":"Identifier","start":4912,"end":4919,"name":"control"},"property":{"type":"Identifier","start":4920,"end":4925,"name":"value"}},"prefix":true},"right":{"type":"UnaryExpression","start":4929,"end":4937,"operator":"!","argument":{"type":"Identifier","start":4930,"end":4937,"name":"outcome"},"prefix":true}},"consequent":{"type":"Literal","start":4940,"end":4944,"raw":"null","value":null},"alternate":{"type":"Identifier","start":4947,"end":4953,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":5416,"end":5762,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":5423,"end":5762,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5429,"end":5761,"id":{"type":"Identifier","start":5429,"end":5444,"name":"linkToValidator"},"init":{"type":"ArrowFunctionExpression","start":5447,"end":5761,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":5448,"end":5454,"name":"linkTo"},{"type":"Identifier","start":5456,"end":5465,"name":"errorName"},{"type":"Identifier","start":5467,"end":5472,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":5477,"end":5761,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":5478,"end":5485,"name":"control"}],"body":{"type":"BlockStatement","start":5490,"end":5761,"body":[{"type":"ExpressionStatement","start":5496,"end":5553,"expression":{"type":"AssignmentExpression","start":5496,"end":5552,"operator":"=","left":{"type":"Identifier","start":5496,"end":5501,"name":"error"},"right":{"type":"LogicalExpression","start":5504,"end":5552,"operator":"||","left":{"type":"Identifier","start":5504,"end":5509,"name":"error"},"right":{"type":"TemplateLiteral","start":5513,"end":5552,"quasis":[{"type":"TemplateElement","start":5514,"end":5541,"tail":false,"value":{"cooked":"This control has a link to ","raw":"This control has a link to "}},{"type":"TemplateElement","start":5550,"end":5551,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":5543,"end":5549,"name":"linkTo"}]}}}},{"type":"VariableDeclaration","start":5558,"end":5644,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5564,"end":5643,"id":{"type":"Identifier","start":5564,"end":5570,"name":"errors"},"init":{"type":"ConditionalExpression","start":5573,"end":5643,"test":{"type":"BinaryExpression","start":5573,"end":5598,"operator":"===","left":{"type":"UnaryExpression","start":5573,"end":5585,"operator":"typeof","argument":{"type":"Identifier","start":5580,"end":5585,"name":"error"},"prefix":true},"right":{"type":"Literal","start":5590,"end":5598,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":5601,"end":5635,"properties":[{"type":"Property","start":5603,"end":5633,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":5604,"end":5625,"operator":"||","left":{"type":"Identifier","start":5604,"end":5613,"name":"errorName"},"right":{"type":"Literal","start":5617,"end":5625,"value":"linkTo","raw":"'linkTo'"}},"value":{"type":"Identifier","start":5628,"end":5633,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":5638,"end":5643,"name":"error"}}}]},{"type":"VariableDeclaration","start":5649,"end":5694,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5655,"end":5693,"id":{"type":"Identifier","start":5655,"end":5663,"name":"linkedTo"},"init":{"type":"ChainExpression","start":5666,"end":5693,"expression":{"type":"CallExpression","start":5666,"end":5693,"optional":false,"callee":{"type":"MemberExpression","start":5666,"end":5685,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":5666,"end":5680,"computed":false,"optional":false,"object":{"type":"Identifier","start":5666,"end":5673,"name":"control"},"property":{"type":"Identifier","start":5674,"end":5680,"name":"parent"}},"property":{"type":"Identifier","start":5682,"end":5685,"name":"get"}},"arguments":[{"type":"Identifier","start":5686,"end":5692,"name":"linkTo"}]}}}]},{"type":"ReturnStatement","start":5699,"end":5759,"argument":{"type":"ConditionalExpression","start":5706,"end":5758,"test":{"type":"LogicalExpression","start":5706,"end":5742,"operator":"&&","left":{"type":"UnaryExpression","start":5706,"end":5721,"operator":"!","argument":{"type":"ChainExpression","start":5707,"end":5721,"expression":{"type":"MemberExpression","start":5707,"end":5721,"computed":false,"optional":true,"object":{"type":"Identifier","start":5707,"end":5714,"name":"control"},"property":{"type":"Identifier","start":5716,"end":5721,"name":"value"}}},"prefix":true},"right":{"type":"UnaryExpression","start":5725,"end":5742,"operator":"!","argument":{"type":"UnaryExpression","start":5726,"end":5742,"operator":"!","argument":{"type":"ChainExpression","start":5727,"end":5742,"expression":{"type":"MemberExpression","start":5727,"end":5742,"computed":false,"optional":true,"object":{"type":"Identifier","start":5727,"end":5735,"name":"linkedTo"},"property":{"type":"Identifier","start":5737,"end":5742,"name":"value"}}},"prefix":true},"prefix":true}},"consequent":{"type":"Identifier","start":5745,"end":5751,"name":"errors"},"alternate":{"type":"Literal","start":5754,"end":5758,"raw":"null","value":null}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":6307,"end":6650,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":6314,"end":6650,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6320,"end":6649,"id":{"type":"Identifier","start":6320,"end":6337,"name":"linkedToValidator"},"init":{"type":"ArrowFunctionExpression","start":6340,"end":6649,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":6341,"end":6349,"name":"linkedTo"},{"type":"Identifier","start":6351,"end":6360,"name":"errorName"},{"type":"Identifier","start":6362,"end":6367,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":6372,"end":6649,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":6373,"end":6380,"name":"control"}],"body":{"type":"BlockStatement","start":6385,"end":6649,"body":[{"type":"ExpressionStatement","start":6391,"end":6449,"expression":{"type":"AssignmentExpression","start":6391,"end":6448,"operator":"=","left":{"type":"Identifier","start":6391,"end":6396,"name":"error"},"right":{"type":"LogicalExpression","start":6399,"end":6448,"operator":"||","left":{"type":"Identifier","start":6399,"end":6404,"name":"error"},"right":{"type":"TemplateLiteral","start":6408,"end":6448,"quasis":[{"type":"TemplateElement","start":6409,"end":6435,"tail":false,"value":{"cooked":"This control is linked to ","raw":"This control is linked to "}},{"type":"TemplateElement","start":6446,"end":6447,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":6437,"end":6445,"name":"linkedTo"}]}}}},{"type":"VariableDeclaration","start":6454,"end":6540,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6460,"end":6539,"id":{"type":"Identifier","start":6460,"end":6466,"name":"errors"},"init":{"type":"ConditionalExpression","start":6469,"end":6539,"test":{"type":"BinaryExpression","start":6469,"end":6494,"operator":"===","left":{"type":"UnaryExpression","start":6469,"end":6481,"operator":"typeof","argument":{"type":"Identifier","start":6476,"end":6481,"name":"error"},"prefix":true},"right":{"type":"Literal","start":6486,"end":6494,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":6497,"end":6531,"properties":[{"type":"Property","start":6499,"end":6529,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":6500,"end":6521,"operator":"||","left":{"type":"Identifier","start":6500,"end":6509,"name":"errorName"},"right":{"type":"Literal","start":6513,"end":6521,"value":"linkTo","raw":"'linkTo'"}},"value":{"type":"Identifier","start":6524,"end":6529,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":6534,"end":6539,"name":"error"}}}]},{"type":"VariableDeclaration","start":6545,"end":6588,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6551,"end":6587,"id":{"type":"Identifier","start":6551,"end":6555,"name":"link"},"init":{"type":"ChainExpression","start":6558,"end":6587,"expression":{"type":"CallExpression","start":6558,"end":6587,"optional":false,"callee":{"type":"MemberExpression","start":6558,"end":6577,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":6558,"end":6572,"computed":false,"optional":false,"object":{"type":"Identifier","start":6558,"end":6565,"name":"control"},"property":{"type":"Identifier","start":6566,"end":6572,"name":"parent"}},"property":{"type":"Identifier","start":6574,"end":6577,"name":"get"}},"arguments":[{"type":"Identifier","start":6578,"end":6586,"name":"linkedTo"}]}}}]},{"type":"ReturnStatement","start":6593,"end":6647,"argument":{"type":"ConditionalExpression","start":6600,"end":6646,"test":{"type":"LogicalExpression","start":6600,"end":6630,"operator":"&&","left":{"type":"ChainExpression","start":6600,"end":6614,"expression":{"type":"MemberExpression","start":6600,"end":6614,"computed":false,"optional":true,"object":{"type":"Identifier","start":6600,"end":6607,"name":"control"},"property":{"type":"Identifier","start":6609,"end":6614,"name":"value"}}},"right":{"type":"UnaryExpression","start":6618,"end":6630,"operator":"!","argument":{"type":"ChainExpression","start":6619,"end":6630,"expression":{"type":"MemberExpression","start":6619,"end":6630,"computed":false,"optional":true,"object":{"type":"Identifier","start":6619,"end":6623,"name":"link"},"property":{"type":"Identifier","start":6625,"end":6630,"name":"value"}}},"prefix":true}},"consequent":{"type":"Identifier","start":6633,"end":6639,"name":"errors"},"alternate":{"type":"Literal","start":6642,"end":6646,"raw":"null","value":null}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":7107,"end":7663,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7114,"end":7663,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7120,"end":7662,"id":{"type":"Identifier","start":7120,"end":7136,"name":"etherOrValidator"},"init":{"type":"ArrowFunctionExpression","start":7139,"end":7662,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":7140,"end":7147,"name":"toCheck"},{"type":"Identifier","start":7149,"end":7158,"name":"errorName"},{"type":"Identifier","start":7160,"end":7165,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":7170,"end":7662,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":7171,"end":7178,"name":"control"}],"body":{"type":"BlockStatement","start":7183,"end":7662,"body":[{"type":"ExpressionStatement","start":7189,"end":7260,"expression":{"type":"AssignmentExpression","start":7189,"end":7259,"operator":"=","left":{"type":"Identifier","start":7189,"end":7194,"name":"error"},"right":{"type":"LogicalExpression","start":7197,"end":7259,"operator":"||","left":{"type":"Identifier","start":7197,"end":7202,"name":"error"},"right":{"type":"TemplateLiteral","start":7206,"end":7259,"quasis":[{"type":"TemplateElement","start":7207,"end":7229,"tail":false,"value":{"cooked":"Ether this control or ","raw":"Ether this control or "}},{"type":"TemplateElement","start":7239,"end":7258,"tail":true,"value":{"cooked":" has to have value.","raw":" has to have value."}}],"expressions":[{"type":"Identifier","start":7231,"end":7238,"name":"toCheck"}]}}}},{"type":"VariableDeclaration","start":7265,"end":7352,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7271,"end":7351,"id":{"type":"Identifier","start":7271,"end":7277,"name":"errors"},"init":{"type":"ConditionalExpression","start":7280,"end":7351,"test":{"type":"BinaryExpression","start":7280,"end":7305,"operator":"===","left":{"type":"UnaryExpression","start":7280,"end":7292,"operator":"typeof","argument":{"type":"Identifier","start":7287,"end":7292,"name":"error"},"prefix":true},"right":{"type":"Literal","start":7297,"end":7305,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":7308,"end":7343,"properties":[{"type":"Property","start":7310,"end":7341,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":7311,"end":7333,"operator":"||","left":{"type":"Identifier","start":7311,"end":7320,"name":"errorName"},"right":{"type":"Literal","start":7324,"end":7333,"value":"etherOr","raw":"'etherOr'"}},"value":{"type":"Identifier","start":7336,"end":7341,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":7346,"end":7351,"name":"error"}}}]},{"type":"VariableDeclaration","start":7357,"end":7400,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7363,"end":7399,"id":{"type":"Identifier","start":7363,"end":7368,"name":"check"},"init":{"type":"ChainExpression","start":7371,"end":7399,"expression":{"type":"CallExpression","start":7371,"end":7399,"optional":false,"callee":{"type":"MemberExpression","start":7371,"end":7390,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":7371,"end":7385,"computed":false,"optional":false,"object":{"type":"Identifier","start":7371,"end":7378,"name":"control"},"property":{"type":"Identifier","start":7379,"end":7385,"name":"parent"}},"property":{"type":"Identifier","start":7387,"end":7390,"name":"get"}},"arguments":[{"type":"Identifier","start":7391,"end":7398,"name":"toCheck"}]}}}]},{"type":"IfStatement","start":7405,"end":7660,"test":{"type":"LogicalExpression","start":7409,"end":7441,"operator":"&&","left":{"type":"UnaryExpression","start":7409,"end":7424,"operator":"!","argument":{"type":"ChainExpression","start":7410,"end":7424,"expression":{"type":"MemberExpression","start":7410,"end":7424,"computed":false,"optional":true,"object":{"type":"Identifier","start":7410,"end":7417,"name":"control"},"property":{"type":"Identifier","start":7419,"end":7424,"name":"value"}}},"prefix":true},"right":{"type":"UnaryExpression","start":7428,"end":7441,"operator":"!","argument":{"type":"ChainExpression","start":7429,"end":7441,"expression":{"type":"MemberExpression","start":7429,"end":7441,"computed":false,"optional":true,"object":{"type":"Identifier","start":7429,"end":7434,"name":"check"},"property":{"type":"Identifier","start":7436,"end":7441,"name":"value"}}},"prefix":true}},"consequent":{"type":"BlockStatement","start":7443,"end":7556,"body":[{"type":"ExpressionStatement","start":7453,"end":7527,"expression":{"type":"CallExpression","start":7453,"end":7526,"optional":false,"callee":{"type":"MemberExpression","start":7453,"end":7468,"computed":false,"optional":false,"object":{"type":"Identifier","start":7453,"end":7458,"name":"check"},"property":{"type":"Identifier","start":7459,"end":7468,"name":"setErrors"}},"arguments":[{"type":"ObjectExpression","start":7469,"end":7525,"properties":[{"type":"Property","start":7483,"end":7514,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":7484,"end":7506,"operator":"||","left":{"type":"Identifier","start":7484,"end":7493,"name":"errorName"},"right":{"type":"Literal","start":7497,"end":7506,"value":"etherOr","raw":"'etherOr'"}},"value":{"type":"Identifier","start":7509,"end":7514,"name":"error"},"kind":"init"}]}]}},{"type":"ReturnStatement","start":7536,"end":7550,"argument":{"type":"Identifier","start":7543,"end":7549,"name":"errors"}}]},"alternate":{"type":"BlockStatement","start":7566,"end":7660,"body":[{"type":"IfStatement","start":7576,"end":7633,"test":{"type":"Identifier","start":7580,"end":7585,"name":"check"},"consequent":{"type":"BlockStatement","start":7587,"end":7633,"body":[{"type":"ExpressionStatement","start":7601,"end":7623,"expression":{"type":"CallExpression","start":7601,"end":7622,"optional":false,"callee":{"type":"MemberExpression","start":7601,"end":7616,"computed":false,"optional":false,"object":{"type":"Identifier","start":7601,"end":7606,"name":"check"},"property":{"type":"Identifier","start":7607,"end":7616,"name":"setErrors"}},"arguments":[{"type":"Literal","start":7617,"end":7621,"raw":"null","value":null}]}}]},"alternate":null},{"type":"ReturnStatement","start":7642,"end":7654,"argument":{"type":"Literal","start":7649,"end":7653,"raw":"null","value":null}}]}}]},"id":null},"id":null}}]}}],"_rollupRemoved":[{"end":26338,"start":7664,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { compareDates, prepareToCompare } from './helpers/date';\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || 'This control matched a given regular expression.';\n    const errors = typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n    return !control.value || regexp.test(control.value) ? null : errors;\n};\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpNotAMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || 'This control matched a given regular expression.';\n    const errors = typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n    return !control.value || !regexp.test(control.value) ? null : errors;\n};\n/**\n * Checks if the date in the given FromControl / AbstractControl is earlier then\n * the value in the specified FromControl / AbstractControl\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const earlierThenValidator = (date, errorName, error) => (control) => {\n    error = error || `This control must have a value earlier then ${date?.value}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'earlierThen']: error } : error;\n    return prepareToCompare(control?.value) < prepareToCompare(date?.value) ? null : errors;\n};\n/**\n* Checks if the date in the given FromControl / AbstractControl is greater then\n* the value in the specified FromControl / AbstractControl\n*\n* @param {AbstractControl}           - AbstractControl to preform the check against\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const laterThenValidator = (date, errorName, error) => (control) => {\n    error = error || `This control must have a value later then ${date?.value}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'laterThen']: error } : error;\n    return prepareToCompare(control?.value) > prepareToCompare(date?.value) ? null : errors;\n};\n/**\n* Compares the date values of the given FromControl / AbstractControl and\n* specified FromControl / AbstractControl\n*\n* @param {string}                    - name of the filed to compare against\n* @param {ComparisonOperations}      - comparison to preform\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const compareToValidator = (filedName, comparison, errorName, error) => (control) => {\n    const date = control.parent?.get(filedName)?.value;\n    error = error || `Value comparison with ${date?.value} failed.`;\n    const errors = typeof error === 'string' ? { [errorName || 'dateComparison']: error } : error;\n    return control.value && date && compareDates(control.value, date, comparison) ? null : errors;\n};\n/**\n* Returns a validation error if a condition is met\n*\n* @param {Function | boolean}        - conditional function or a boolean value\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const requiredWhenValidator = (conditional, errorName, error) => (control) => {\n    error = error || 'This control has a conditional set on it.';\n    const errors = typeof error === 'string' ? { [errorName || 'requiredWhen']: error } : error;\n    const outcome = typeof conditional === 'function' ? conditional() : conditional;\n    return !control.value || !outcome ? null : errors;\n};\n/**\n* Returns a validation error if a given FromControl / AbstractControl has no value\n* and specified FromControl / AbstractControl has it\n*\n* @param {string}                    - name of the FromControl / AbstractControl to link to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkToValidator = (linkTo, errorName, error) => (control) => {\n    error = error || `This control has a link to ${linkTo}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n    const linkedTo = control.parent?.get(linkTo);\n    return !control?.value && !!linkedTo?.value ? errors : null;\n};\n/**\n* Returns a validation error if a given FromControl / AbstractControl has a value\n* and specified FromControl / AbstractControl does not\n*\n* @param {string}                    - name of the FromControl / AbstractControl\n*                                      which a given FromControl / AbstractControl is linked to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkedToValidator = (linkedTo, errorName, error) => (control) => {\n    error = error || `This control is linked to ${linkedTo}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n    const link = control.parent?.get(linkedTo);\n    return control?.value && !link?.value ? errors : null;\n};\n/**\n* Returns a validation error if a nether the given FromControl / AbstractControl nor\n* the specified FromControl / AbstractControl has values\n*\n* @param {AbstractControl}           - AbstractControl to preform the check against\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const etherOrValidator = (toCheck, errorName, error) => (control) => {\n    error = error || `Ether this control or ${toCheck} has to have value.`;\n    const errors = typeof error === 'string' ? { [errorName || 'etherOr']: error } : error;\n    const check = control.parent?.get(toCheck);\n    if (!control?.value && !check?.value) {\n        check.setErrors({\n            [errorName || 'etherOr']: error,\n        });\n        return errors;\n    }\n    else {\n        if (check) {\n            check.setErrors(null);\n        }\n        return null;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/date.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { compareDates, prepareToCompare } from './helpers/date';\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || 'This control matched a given regular expression.';\n    const errors = typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n    return !control.value || regexp.test(control.value) ? null : errors;\n};\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpNotAMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || 'This control matched a given regular expression.';\n    const errors = typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n    return !control.value || !regexp.test(control.value) ? null : errors;\n};\n/**\n * Checks if the date in the given FromControl / AbstractControl is earlier then\n * the value in the specified FromControl / AbstractControl\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const earlierThenValidator = (date, errorName, error) => (control) => {\n    error = error || `This control must have a value earlier then ${date?.value}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'earlierThen']: error } : error;\n    return prepareToCompare(control?.value) < prepareToCompare(date?.value) ? null : errors;\n};\n/**\n* Checks if the date in the given FromControl / AbstractControl is greater then\n* the value in the specified FromControl / AbstractControl\n*\n* @param {AbstractControl}           - AbstractControl to preform the check against\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const laterThenValidator = (date, errorName, error) => (control) => {\n    error = error || `This control must have a value later then ${date?.value}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'laterThen']: error } : error;\n    return prepareToCompare(control?.value) > prepareToCompare(date?.value) ? null : errors;\n};\n/**\n* Compares the date values of the given FromControl / AbstractControl and\n* specified FromControl / AbstractControl\n*\n* @param {string}                    - name of the filed to compare against\n* @param {ComparisonOperations}      - comparison to preform\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const compareToValidator = (filedName, comparison, errorName, error) => (control) => {\n    const date = control.parent?.get(filedName)?.value;\n    error = error || `Value comparison with ${date?.value} failed.`;\n    const errors = typeof error === 'string' ? { [errorName || 'dateComparison']: error } : error;\n    return control.value && date && compareDates(control.value, date, comparison) ? null : errors;\n};\n/**\n* Returns a validation error if a condition is met\n*\n* @param {Function | boolean}        - conditional function or a boolean value\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const requiredWhenValidator = (conditional, errorName, error) => (control) => {\n    error = error || 'This control has a conditional set on it.';\n    const errors = typeof error === 'string' ? { [errorName || 'requiredWhen']: error } : error;\n    const outcome = typeof conditional === 'function' ? conditional() : conditional;\n    return !control.value || !outcome ? null : errors;\n};\n/**\n* Returns a validation error if a given FromControl / AbstractControl has no value\n* and specified FromControl / AbstractControl has it\n*\n* @param {string}                    - name of the FromControl / AbstractControl to link to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkToValidator = (linkTo, errorName, error) => (control) => {\n    error = error || `This control has a link to ${linkTo}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n    const linkedTo = control.parent?.get(linkTo);\n    return !control?.value && !!linkedTo?.value ? errors : null;\n};\n/**\n* Returns a validation error if a given FromControl / AbstractControl has a value\n* and specified FromControl / AbstractControl does not\n*\n* @param {string}                    - name of the FromControl / AbstractControl\n*                                      which a given FromControl / AbstractControl is linked to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkedToValidator = (linkedTo, errorName, error) => (control) => {\n    error = error || `This control is linked to ${linkedTo}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n    const link = control.parent?.get(linkedTo);\n    return control?.value && !link?.value ? errors : null;\n};\n/**\n* Returns a validation error if a nether the given FromControl / AbstractControl nor\n* the specified FromControl / AbstractControl has values\n*\n* @param {AbstractControl}           - AbstractControl to preform the check against\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const etherOrValidator = (toCheck, errorName, error) => (control) => {\n    error = error || `Ether this control or ${toCheck} has to have value.`;\n    const errors = typeof error === 'string' ? { [errorName || 'etherOr']: error } : error;\n    const check = control.parent?.get(toCheck);\n    if (!control?.value && !check?.value) {\n        check.setErrors({\n            [errorName || 'etherOr']: error,\n        });\n        return errors;\n    }\n    else {\n        if (check) {\n            check.setErrors(null);\n        }\n        return null;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"ngx-validators.js","sourceRoot":"","sources":["../../../../projects/ngx-validator-pack/src/lib/ngx-validators.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,9,0],[7,0,9,7],[9,0,9,9],[21,0,9,21],[23,0,9,45],[39,0,9,61],[41,0,9,63],[47,0,9,69],[63,0,9,85],[64,0,9,86]],[[0,0,11,0]],[],[],[],[],[],[],[[3,0,18,3]],[[0,0,19,0],[6,0,19,6],[7,0,19,7],[13,0,19,13],[33,0,19,33],[36,0,20,2],[37,0,20,3],[43,0,20,17],[45,0,20,19],[54,0,20,37],[56,0,20,39],[61,0,20,72],[63,0,20,87],[65,0,20,89],[66,0,21,2],[67,0,21,3],[74,0,21,27],[76,0,21,54],[78,0,21,56]],[[4,0,22,4],[9,0,22,9],[12,0,22,12],[17,0,22,17],[21,0,22,21],[71,0,22,71],[72,0,22,71]],[[4,0,23,4],[10,0,23,10],[16,0,23,16],[19,0,24,8],[26,0,24,15],[31,0,24,20],[36,0,24,25],[44,0,24,33],[45,0,24,34],[46,0,24,35],[47,0,24,36],[49,0,24,38],[50,0,24,39],[59,0,24,48],[63,0,24,52],[80,0,24,69],[81,0,24,70],[83,0,24,72],[88,0,24,77],[90,0,24,79],[91,0,24,80],[92,0,24,81],[93,0,24,82],[98,0,24,87],[99,0,24,88]],[[4,0,26,4],[11,0,26,11],[12,0,26,12],[19,0,26,19],[20,0,26,20],[25,0,26,25],[29,0,26,29],[35,0,26,35],[36,0,26,36],[40,0,26,40],[41,0,26,41],[48,0,26,48],[49,0,26,49],[54,0,26,54],[55,0,26,55],[56,0,26,56],[57,0,26,57],[58,0,26,58],[62,0,26,62],[63,0,26,63],[64,0,26,64],[65,0,26,65],[71,0,26,71],[72,0,26,72]],[[0,0,27,2],[1,0,27,3],[2,0,27,4]],[[0,0,29,0]],[],[],[],[],[],[],[[3,0,36,3]],[[0,0,37,2],[6,0,37,8],[7,0,37,9],[13,0,37,15],[37,0,37,39],[40,0,38,2],[41,0,38,3],[47,0,38,17],[49,0,38,19],[58,0,38,37],[60,0,38,39],[65,0,38,72],[67,0,38,87],[69,0,38,89],[70,0,39,2],[71,0,39,3],[78,0,39,27],[80,0,39,54],[82,0,39,56]],[[4,0,40,4],[9,0,40,9],[12,0,40,12],[17,0,40,17],[21,0,40,21],[71,0,40,71],[72,0,40,71]],[[4,0,41,4],[10,0,41,10],[16,0,41,16],[19,0,42,8],[26,0,42,15],[31,0,42,20],[36,0,42,25],[44,0,42,33],[45,0,42,34],[46,0,42,35],[47,0,42,36],[49,0,42,38],[50,0,42,39],[59,0,42,48],[63,0,42,52],[80,0,42,69],[81,0,42,70],[83,0,42,72],[88,0,42,77],[90,0,42,79],[91,0,42,80],[92,0,42,81],[93,0,42,82],[98,0,42,87],[99,0,42,88]],[[4,0,44,4],[11,0,44,11],[12,0,44,12],[19,0,44,19],[20,0,44,20],[25,0,44,25],[29,0,44,29],[30,0,44,30],[36,0,44,36],[37,0,44,37],[41,0,44,41],[42,0,44,42],[49,0,44,49],[50,0,44,50],[55,0,44,55],[56,0,44,56],[57,0,44,57],[58,0,44,58],[59,0,44,59],[63,0,44,63],[64,0,44,64],[65,0,44,65],[66,0,44,66],[72,0,44,72],[73,0,44,73]],[[0,0,45,2],[1,0,45,3],[2,0,45,4]],[[0,0,47,0]],[],[],[],[],[],[],[],[[3,0,55,3]],[[0,0,56,0],[6,0,56,6],[7,0,56,7],[13,0,56,13],[33,0,56,33],[36,0,57,2],[37,0,57,3],[41,0,57,24],[43,0,57,26],[52,0,57,44],[54,0,57,46],[59,0,57,79],[61,0,57,94],[63,0,57,96],[64,0,58,2],[65,0,58,3],[72,0,58,27],[74,0,58,54],[76,0,58,56]],[[4,0,59,4],[9,0,59,9],[12,0,59,12],[17,0,59,17],[21,0,59,21],[68,0,59,68],[72,0,59,72],[74,0,59,74],[79,0,59,79],[82,0,59,82],[83,0,59,83]],[[4,0,60,4],[10,0,60,10],[16,0,60,16],[19,0,61,8],[26,0,61,15],[31,0,61,20],[36,0,61,25],[44,0,61,33],[45,0,61,34],[46,0,61,35],[47,0,61,36],[49,0,61,38],[50,0,61,39],[59,0,61,48],[63,0,61,52],[76,0,61,65],[77,0,61,66],[79,0,61,68],[84,0,61,73],[86,0,61,75],[87,0,61,76],[88,0,61,77],[89,0,61,78],[94,0,61,83],[95,0,61,84]],[[4,0,63,4],[11,0,63,11],[27,0,63,27],[28,0,63,28],[35,0,63,35],[37,0,63,37],[42,0,63,42],[43,0,63,43],[46,0,63,46],[62,0,63,62],[63,0,63,63],[67,0,63,67],[69,0,63,69],[74,0,63,74],[75,0,63,75],[76,0,63,76],[77,0,63,77],[78,0,63,78],[82,0,63,82],[83,0,63,83],[84,0,63,84],[85,0,63,85],[91,0,63,91],[92,0,63,92]],[[0,0,64,2],[1,0,64,3],[2,0,64,4]],[[0,0,66,0]],[],[],[],[],[],[],[],[[2,0,74,2]],[[0,0,75,0],[6,0,75,6],[7,0,75,7],[13,0,75,13],[31,0,75,31],[34,0,76,2],[35,0,76,3],[39,0,76,24],[41,0,76,26],[50,0,76,44],[52,0,76,46],[57,0,76,79],[59,0,76,94],[61,0,76,96],[62,0,77,2],[63,0,77,3],[70,0,77,27],[72,0,77,54],[74,0,77,56]],[[4,0,78,4],[9,0,78,9],[12,0,78,12],[17,0,78,17],[21,0,78,21],[66,0,78,66],[70,0,78,70],[72,0,78,72],[77,0,78,77],[80,0,78,80],[81,0,78,81]],[[4,0,79,4],[10,0,79,10],[16,0,79,16],[19,0,80,8],[26,0,80,15],[31,0,80,20],[36,0,80,25],[44,0,80,33],[45,0,80,34],[46,0,80,35],[47,0,80,36],[49,0,80,38],[50,0,80,39],[59,0,80,48],[63,0,80,52],[74,0,80,63],[75,0,80,64],[77,0,80,66],[82,0,80,71],[84,0,80,73],[85,0,80,74],[86,0,80,75],[87,0,80,76],[92,0,80,81],[93,0,80,82]],[[4,0,82,4],[11,0,82,11],[27,0,82,27],[28,0,82,28],[35,0,82,35],[37,0,82,37],[42,0,82,42],[43,0,82,43],[46,0,82,46],[62,0,82,62],[63,0,82,63],[67,0,82,67],[69,0,82,69],[74,0,82,74],[75,0,82,75],[76,0,82,76],[77,0,82,77],[78,0,82,78],[82,0,82,82],[83,0,82,83],[84,0,82,84],[85,0,82,85],[91,0,82,91],[92,0,82,92]],[[0,0,83,2],[1,0,83,3],[2,0,83,4]],[[0,0,85,0]],[],[],[],[],[],[],[],[],[[2,0,94,2]],[[0,0,95,0],[6,0,95,6],[7,0,95,7],[13,0,95,13],[31,0,95,31],[34,0,95,34],[35,0,96,2],[44,0,96,19],[46,0,97,2],[56,0,97,34],[58,0,98,2],[67,0,98,20],[69,0,99,2],[74,0,99,35],[76,0,99,50],[78,0,99,52],[79,0,100,2],[80,0,100,3],[87,0,100,27],[89,0,100,54],[91,0,100,56]],[[4,0,101,4],[10,0,101,10],[14,0,101,14],[17,0,101,17],[24,0,101,24],[25,0,101,25],[31,0,101,31],[33,0,101,33],[36,0,101,36],[37,0,101,37],[46,0,101,46],[47,0,101,47],[49,0,101,49],[54,0,101,54],[55,0,101,55]],[[4,0,102,4],[9,0,102,9],[12,0,102,12],[17,0,102,17],[21,0,102,21],[46,0,102,46],[50,0,102,50],[52,0,102,52],[57,0,102,57],[67,0,102,67],[68,0,102,68]],[[4,0,103,4],[10,0,103,10],[16,0,103,16],[19,0,104,8],[26,0,104,15],[31,0,104,20],[36,0,104,25],[44,0,104,33],[45,0,104,34],[46,0,104,35],[47,0,104,36],[49,0,104,38],[50,0,104,39],[59,0,104,48],[63,0,104,52],[79,0,104,68],[80,0,104,69],[82,0,104,71],[87,0,104,76],[89,0,104,78],[90,0,104,79],[91,0,104,80],[92,0,104,81],[97,0,104,86],[98,0,104,87]],[[4,0,105,4],[11,0,105,11],[18,0,105,18],[19,0,105,19],[24,0,105,24],[28,0,105,28],[32,0,105,32],[36,0,105,36],[48,0,105,48],[49,0,105,49],[56,0,105,56],[57,0,105,57],[62,0,105,62],[64,0,105,64],[68,0,105,68],[70,0,105,70],[80,0,105,80],[81,0,105,81],[82,0,105,82],[83,0,105,83],[84,0,105,84],[88,0,105,88],[89,0,105,89],[90,0,105,90],[91,0,105,91],[97,0,105,97],[98,0,105,98]],[[0,0,106,2],[1,0,106,3],[2,0,106,4]],[[0,0,108,0]],[],[],[],[],[],[],[[2,0,115,2]],[[0,0,116,0],[6,0,116,6],[7,0,116,7],[13,0,116,13],[34,0,116,34],[37,0,117,2],[38,0,118,4],[49,0,118,40],[51,0,119,4],[60,0,119,22],[62,0,120,4],[67,0,120,37],[69,0,121,17],[71,0,121,19],[72,0,122,2],[73,0,122,3],[80,0,122,27],[82,0,122,54],[84,0,122,56]],[[4,0,123,4],[9,0,123,9],[12,0,123,12],[17,0,123,17],[21,0,123,21],[64,0,123,64],[65,0,123,65]],[[4,0,124,4],[10,0,124,10],[16,0,124,16],[19,0,125,8],[26,0,125,15],[31,0,125,20],[36,0,125,25],[44,0,125,33],[45,0,125,34],[46,0,125,35],[47,0,125,36],[49,0,125,38],[50,0,125,39],[59,0,125,48],[63,0,125,52],[77,0,125,66],[78,0,125,67],[80,0,125,69],[85,0,125,74],[87,0,125,76],[88,0,125,77],[89,0,125,78],[90,0,125,79],[95,0,125,84],[96,0,125,85]],[[4,0,127,4],[10,0,127,10],[17,0,127,17],[20,0,128,6],[27,0,128,13],[38,0,128,24],[43,0,128,29],[53,0,128,39],[54,0,128,40],[55,0,128,41],[56,0,128,42],[67,0,128,53],[69,0,128,55],[70,0,128,56],[71,0,128,57],[72,0,128,58],[83,0,128,69],[84,0,128,70]],[[4,0,129,4],[11,0,129,11],[12,0,129,12],[19,0,129,19],[20,0,129,20],[25,0,129,25],[29,0,129,29],[30,0,129,30],[37,0,129,37],[38,0,129,38],[39,0,129,39],[40,0,129,40],[44,0,129,44],[45,0,129,45],[46,0,129,46],[47,0,129,47],[53,0,129,53],[54,0,129,54]],[[0,0,130,2],[1,0,130,3],[2,0,130,4]],[[0,0,132,0]],[],[],[],[],[],[],[],[[2,0,140,2]],[[0,0,141,0],[6,0,141,6],[7,0,141,7],[13,0,141,13],[28,0,141,28],[31,0,142,2],[32,0,142,3],[38,0,142,17],[40,0,142,19],[49,0,142,37],[51,0,142,39],[56,0,142,72],[58,0,142,87],[60,0,142,89],[61,0,143,2],[62,0,143,3],[69,0,143,27],[71,0,143,54],[73,0,143,56]],[[4,0,144,4],[9,0,144,9],[12,0,144,12],[17,0,144,17],[21,0,144,21],[51,0,144,51],[57,0,144,57],[60,0,144,60],[61,0,144,61]],[[4,0,145,4],[10,0,145,10],[16,0,145,16],[19,0,146,8],[26,0,146,15],[31,0,146,20],[36,0,146,25],[44,0,146,33],[45,0,146,34],[46,0,146,35],[47,0,146,36],[49,0,146,38],[50,0,146,39],[59,0,146,48],[63,0,146,52],[71,0,146,60],[72,0,146,61],[74,0,146,63],[79,0,146,68],[81,0,146,70],[82,0,146,71],[83,0,146,72],[84,0,146,73],[89,0,146,78],[90,0,146,79]],[[4,0,148,4],[10,0,148,10],[18,0,148,18],[21,0,148,21],[28,0,148,28],[29,0,148,29],[35,0,148,35],[37,0,148,37],[40,0,148,40],[41,0,148,41],[47,0,148,47],[48,0,148,48],[49,0,148,49]],[[4,0,149,4],[11,0,149,11],[12,0,149,12],[19,0,149,19],[21,0,149,21],[26,0,149,26],[30,0,149,30],[31,0,149,31],[32,0,149,32],[40,0,149,40],[42,0,149,42],[47,0,149,47],[48,0,149,48],[49,0,149,49],[50,0,149,50],[56,0,149,56],[57,0,149,57],[58,0,149,58],[59,0,149,59],[63,0,149,63],[64,0,149,64]],[[0,0,150,2],[1,0,150,3],[2,0,150,4]],[[0,0,152,0]],[],[],[],[],[],[],[],[],[[2,0,161,2]],[[0,0,162,0],[6,0,162,6],[7,0,162,7],[13,0,162,13],[30,0,162,30],[33,0,163,2],[34,0,163,3],[42,0,163,19],[44,0,163,21],[53,0,163,39],[55,0,163,41],[60,0,163,74],[62,0,163,89],[64,0,163,91],[65,0,164,2],[66,0,164,3],[73,0,164,27],[75,0,164,54],[77,0,164,56]],[[4,0,165,4],[9,0,165,9],[12,0,165,12],[17,0,165,17],[21,0,165,21],[50,0,165,50],[58,0,165,58],[61,0,165,61],[62,0,165,62]],[[4,0,166,4],[10,0,166,10],[16,0,166,16],[19,0,167,8],[26,0,167,15],[31,0,167,20],[36,0,167,25],[44,0,167,33],[45,0,167,34],[46,0,167,35],[47,0,167,36],[49,0,167,38],[50,0,167,39],[59,0,167,48],[63,0,167,52],[71,0,167,60],[72,0,167,61],[74,0,167,63],[79,0,167,68],[81,0,167,70],[82,0,167,71],[83,0,167,72],[84,0,167,73],[89,0,167,78],[90,0,167,79]],[[4,0,169,4],[10,0,169,10],[14,0,169,14],[17,0,169,17],[24,0,169,24],[25,0,169,25],[31,0,169,31],[33,0,169,33],[36,0,169,36],[37,0,169,37],[45,0,169,45],[46,0,169,46],[47,0,169,47]],[[4,0,170,4],[11,0,170,11],[18,0,170,18],[20,0,170,20],[25,0,170,25],[29,0,170,29],[30,0,170,30],[34,0,170,34],[36,0,170,36],[41,0,170,41],[42,0,170,42],[43,0,170,43],[44,0,170,44],[50,0,170,50],[51,0,170,51],[52,0,170,52],[53,0,170,53],[57,0,170,57],[58,0,170,58]],[[0,0,171,2],[1,0,171,3],[2,0,171,4]],[[0,0,174,0]],[],[],[],[],[],[],[],[[2,0,182,2]],[[0,0,183,0],[6,0,183,6],[7,0,183,7],[13,0,183,13],[29,0,183,29],[32,0,184,2],[33,0,184,3],[40,0,184,18],[42,0,184,20],[51,0,184,38],[53,0,184,40],[58,0,184,73],[60,0,184,88],[62,0,184,90],[63,0,185,2],[64,0,185,3],[71,0,185,27],[73,0,185,54],[75,0,185,56]],[[4,0,186,4],[9,0,186,9],[12,0,186,12],[17,0,186,17],[21,0,186,21],[46,0,186,46],[53,0,186,53],[74,0,186,74],[75,0,186,75]],[[4,0,187,4],[10,0,187,10],[16,0,187,16],[19,0,188,8],[26,0,188,15],[31,0,188,20],[36,0,188,25],[44,0,188,33],[45,0,188,34],[46,0,188,35],[47,0,188,36],[49,0,188,38],[50,0,188,39],[59,0,188,48],[63,0,188,52],[72,0,188,61],[73,0,188,62],[75,0,188,64],[80,0,188,69],[82,0,188,71],[83,0,188,72],[84,0,188,73],[85,0,188,74],[90,0,188,79],[91,0,188,80]],[[4,0,191,4],[10,0,191,10],[15,0,191,15],[18,0,191,18],[25,0,191,25],[26,0,191,26],[32,0,191,32],[34,0,191,34],[37,0,191,37],[38,0,191,38],[45,0,191,45],[46,0,191,65],[47,0,191,66]],[[4,0,192,4],[8,0,192,8],[9,0,192,9],[16,0,192,16],[18,0,192,18],[23,0,192,23],[27,0,192,27],[28,0,192,28],[33,0,192,33],[35,0,192,35],[40,0,192,40],[42,0,192,42],[43,0,192,43]],[[8,0,193,6],[13,0,193,11],[14,0,193,12],[23,0,193,21],[24,0,193,22]],[[12,0,194,8],[13,0,194,9],[22,0,194,18],[26,0,194,22],[35,0,194,31],[36,0,194,32],[38,0,194,34],[43,0,194,39]],[[9,0,195,7],[10,0,195,8],[11,0,195,9]],[[8,0,196,6],[15,0,196,13],[21,0,196,19],[22,0,196,20]],[[4,0,197,4],[5,0,197,5]],[[9,0,197,11],[10,0,197,12]],[[8,0,198,6],[12,0,198,10],[17,0,198,15],[19,0,198,17],[20,0,198,18]],[[12,0,199,8],[17,0,199,13],[18,0,199,14],[27,0,199,23],[28,0,199,24],[32,0,199,28],[33,0,199,29],[34,0,199,30]],[[8,0,200,6],[9,0,200,7]],[[8,0,201,6],[15,0,201,13],[19,0,201,17],[20,0,201,18]],[[4,0,202,4],[5,0,202,5]],[[0,0,203,2],[1,0,203,3],[2,0,203,4]]],"sourcesContent":["/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\n\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { compareDates, ComparisonOperations, prepareToCompare } from './helpers/date';\n\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n * \n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpMatchValidator =\n  (regexp: RegExp, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || 'This control matched a given regular expression.'\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n  \n    return !control.value || regexp.test(control.value) ? null : errors;\n  };\n\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n * \n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\n  export const regexpNotAMatchValidator =\n  (regexp: RegExp, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || 'This control matched a given regular expression.'\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n  \n    return !control.value || !regexp.test(control.value) ? null : errors;\n  };\n\n/**\n * Checks if the date in the given FromControl / AbstractControl is earlier then \n * the value in the specified FromControl / AbstractControl\n * \n * @param {AbstractControl}           - AbstractControl to preform the check against \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const earlierThenValidator =\n  (date: AbstractControl, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `This control must have a value earlier then ${date?.value}.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'earlierThen']: error } : error;\n  \n    return prepareToCompare(control?.value) < prepareToCompare(date?.value) ? null : errors;\n  };\n\n/**\n* Checks if the date in the given FromControl / AbstractControl is greater then \n* the value in the specified FromControl / AbstractControl\n* \n* @param {AbstractControl}           - AbstractControl to preform the check against \n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const laterThenValidator =\n  (date: AbstractControl, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `This control must have a value later then ${date?.value}.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'laterThen']: error } : error;\n\n    return prepareToCompare(control?.value) > prepareToCompare(date?.value) ? null : errors;\n  };\n\n/**\n* Compares the date values of the given FromControl / AbstractControl and\n* specified FromControl / AbstractControl\n* \n* @param {string}                    - name of the filed to compare against \n* @param {ComparisonOperations}      - comparison to preform\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const compareToValidator = (\n  filedName: string, \n  comparison: ComparisonOperations, \n  errorName?: string, \n  error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    const date = control.parent?.get(filedName)?.value;\n    error = error || `Value comparison with ${date?.value} failed.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'dateComparison']: error } : error;  \n    return control.value && date && compareDates(control.value, date, comparison) ? null : errors;\n  };\n\n/**\n* Returns a validation error if a condition is met\n* \n* @param {Function | boolean}        - conditional function or a boolean value\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const requiredWhenValidator =\n  (\n    conditional: () => boolean | boolean,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || 'This control has a conditional set on it.';\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'requiredWhen']: error } : error;\n\n    const outcome =\n      typeof conditional === 'function' ? conditional() : conditional;\n    return !control.value || !outcome ? null : errors;\n  };\n\n/**\n* Returns a validation error if a given FromControl / AbstractControl has no value\n* and specified FromControl / AbstractControl has it\n* \n* @param {string}                    - name of the FromControl / AbstractControl to link to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkToValidator =\n  (linkTo: string, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `This control has a link to ${linkTo}.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n  \n    const linkedTo = control.parent?.get(linkTo);\n    return !control?.value && !!linkedTo?.value ? errors : null;\n  };\n\n/**\n* Returns a validation error if a given FromControl / AbstractControl has a value\n* and specified FromControl / AbstractControl does not\n* \n* @param {string}                    - name of the FromControl / AbstractControl \n*                                      which a given FromControl / AbstractControl is linked to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkedToValidator =\n  (linkedTo: string, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `This control is linked to ${linkedTo}.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n   \n    const link = control.parent?.get(linkedTo);\n    return control?.value && !link?.value ? errors : null;\n  };\n\n\n/**\n* Returns a validation error if a nether the given FromControl / AbstractControl nor \n* the specified FromControl / AbstractControl has values\n* \n* @param {AbstractControl}           - AbstractControl to preform the check against \n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const etherOrValidator =\n  (toCheck: string, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `Ether this control or ${toCheck} has to have value.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'etherOr']: error } : error;\n  \n\n    const check = control.parent?.get(toCheck) as AbstractControl;\n    if (!control?.value && !check?.value) {\n      check.setErrors({\n        [errorName || 'etherOr']: error,\n      });\n      return errors;\n    } else {\n      if (check) {\n        check.setErrors(null);\n      }\n      return null;\n    }\n  };\n\n\n\n"]},"resolvedIds":{"./helpers/date":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/date.mjs","meta":{},"moduleSideEffects":true,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":991,"body":[{"type":"ExportAllDeclaration","start":239,"end":276,"exported":null,"source":{"type":"Literal","start":253,"end":275,"value":"./lib/ngx-validators","raw":"'./lib/ngx-validators'"},"attributes":[]}],"_rollupRemoved":[{"end":991,"start":277,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n *\n * Public API Surface of ngx-validator-pack\n */\nexport * from './lib/ngx-validators';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7R0FRRztBQUVILGNBQWMsc0JBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgU2xhdmtvIE1paGFqbG92aWMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBJU0Mtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgYXQgaHR0cHM6Ly93d3cuaXNjLm9yZy9saWNlbnNlcy9cbiAqIFxuICogUHVibGljIEFQSSBTdXJmYWNlIG9mIG5neC12YWxpZGF0b3ItcGFja1xuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vbGliL25neC12YWxpZGF0b3JzJztcbiJdfQ==","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/public-api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n *\n * Public API Surface of ngx-validator-pack\n */\nexport * from './lib/ngx-validators';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7R0FRRztBQUVILGNBQWMsc0JBQXNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgU2xhdmtvIE1paGFqbG92aWMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBJU0Mtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgYXQgaHR0cHM6Ly93d3cuaXNjLm9yZy9saWNlbnNlcy9cbiAqIFxuICogUHVibGljIEFQSSBTdXJmYWNlIG9mIG5neC12YWxpZGF0b3ItcGFja1xuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vbGliL25neC12YWxpZGF0b3JzJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"public-api.js","sourceRoot":"","sources":["../../../projects/ngx-validator-pack/src/public-api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[],[],[[3,0,8,3]],[[0,0,10,0],[14,0,10,14],[36,0,10,36],[37,0,10,37]]],"sourcesContent":["/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n * \n * Public API Surface of ngx-validator-pack\n */\n\nexport * from './lib/ngx-validators';\n"]},"resolvedIds":{"./lib/ngx-validators":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","meta":{},"moduleSideEffects":true,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":528,"body":[{"type":"ExportAllDeclaration","start":48,"end":77,"exported":null,"source":{"type":"Literal","start":62,"end":76,"value":"./public-api","raw":"'./public-api'"},"attributes":[]}],"_rollupRemoved":[{"end":528,"start":78,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * Generated bundle index. Do not edit.\n */\nexport * from './public-api';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXZhbGlkYXRvci1wYWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvbmd4LXZhbGlkYXRvci1wYWNrL3NyYy9uZ3gtdmFsaWRhdG9yLXBhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/public-api.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/ngx-validator-pack.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\n * Generated bundle index. Do not edit.\n */\nexport * from './public-api';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXZhbGlkYXRvci1wYWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvbmd4LXZhbGlkYXRvci1wYWNrL3NyYy9uZ3gtdmFsaWRhdG9yLXBhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"ngx-validator-pack.js","sourceRoot":"","sources":["../../../projects/ngx-validator-pack/src/ngx-validator-pack.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"resolvedIds":{"./public-api":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/public-api.mjs","meta":{},"moduleSideEffects":true,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"json":{},"file-loader":{}}}