{"modules":[{"ast":{"type":"Program","start":0,"end":5206,"body":[{"type":"ExportNamedDeclaration","start":0,"end":406,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7,"end":406,"kind":"const","declarations":[{"type":"VariableDeclarator","start":13,"end":405,"id":{"type":"Identifier","start":13,"end":29,"name":"prepareToCompare"},"init":{"type":"ArrowFunctionExpression","start":32,"end":405,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":33,"end":37,"name":"date"},{"type":"Identifier","start":39,"end":50,"name":"bufferYears"}],"body":{"type":"BlockStatement","start":55,"end":405,"body":[{"type":"IfStatement","start":61,"end":403,"test":{"type":"Identifier","start":65,"end":69,"name":"date"},"consequent":{"type":"BlockStatement","start":71,"end":368,"body":[{"type":"VariableDeclaration","start":81,"end":134,"kind":"const","declarations":[{"type":"VariableDeclarator","start":87,"end":133,"id":{"type":"Identifier","start":87,"end":91,"name":"year"},"init":{"type":"BinaryExpression","start":94,"end":133,"operator":"+","left":{"type":"CallExpression","start":94,"end":112,"optional":false,"callee":{"type":"MemberExpression","start":94,"end":110,"computed":false,"optional":false,"object":{"type":"Identifier","start":94,"end":98,"name":"date"},"property":{"type":"Identifier","start":99,"end":110,"name":"getFullYear"}},"arguments":[]},"right":{"type":"LogicalExpression","start":116,"end":132,"operator":"||","left":{"type":"Identifier","start":116,"end":127,"name":"bufferYears"},"right":{"type":"Literal","start":131,"end":132,"raw":"0","value":0}}}}]},{"type":"VariableDeclaration","start":143,"end":177,"kind":"const","declarations":[{"type":"VariableDeclarator","start":149,"end":176,"id":{"type":"Identifier","start":149,"end":154,"name":"month"},"init":{"type":"BinaryExpression","start":157,"end":176,"operator":"+","left":{"type":"CallExpression","start":157,"end":172,"optional":false,"callee":{"type":"MemberExpression","start":157,"end":170,"computed":false,"optional":false,"object":{"type":"Identifier","start":157,"end":161,"name":"date"},"property":{"type":"Identifier","start":162,"end":170,"name":"getMonth"}},"arguments":[]},"right":{"type":"Literal","start":175,"end":176,"raw":"1","value":1}}}]},{"type":"VariableDeclaration","start":186,"end":213,"kind":"const","declarations":[{"type":"VariableDeclarator","start":192,"end":212,"id":{"type":"Identifier","start":192,"end":195,"name":"day"},"init":{"type":"CallExpression","start":198,"end":212,"optional":false,"callee":{"type":"MemberExpression","start":198,"end":210,"computed":false,"optional":false,"object":{"type":"Identifier","start":198,"end":202,"name":"date"},"property":{"type":"Identifier","start":203,"end":210,"name":"getDate"}},"arguments":[]}}]},{"type":"ReturnStatement","start":222,"end":362,"argument":{"type":"CallExpression","start":229,"end":361,"optional":false,"callee":{"type":"MemberExpression","start":229,"end":244,"computed":false,"optional":false,"object":{"type":"Identifier","start":229,"end":235,"name":"Number"},"property":{"type":"Identifier","start":236,"end":244,"name":"parseInt"}},"arguments":[{"type":"TemplateLiteral","start":245,"end":360,"quasis":[{"type":"TemplateElement","start":246,"end":246,"tail":false,"value":{"cooked":"","raw":""}},{"type":"TemplateElement","start":253,"end":253,"tail":false,"value":{"cooked":"","raw":""}},{"type":"TemplateElement","start":313,"end":313,"tail":false,"value":{"cooked":"","raw":""}},{"type":"TemplateElement","start":359,"end":359,"tail":true,"value":{"cooked":"","raw":""}}],"expressions":[{"type":"Identifier","start":248,"end":252,"name":"year"},{"type":"ConditionalExpression","start":255,"end":312,"test":{"type":"BinaryExpression","start":255,"end":290,"operator":">","left":{"type":"MemberExpression","start":255,"end":286,"computed":false,"optional":false,"object":{"type":"MemberExpression","start":255,"end":279,"computed":false,"optional":false,"object":{"type":"CallExpression","start":255,"end":271,"optional":false,"callee":{"type":"MemberExpression","start":255,"end":269,"computed":false,"optional":false,"object":{"type":"Identifier","start":255,"end":260,"name":"month"},"property":{"type":"Identifier","start":261,"end":269,"name":"toString"}},"arguments":[]},"property":{"type":"Identifier","start":272,"end":279,"name":"replace"}},"property":{"type":"Identifier","start":280,"end":286,"name":"length"}},"right":{"type":"Literal","start":289,"end":290,"raw":"1","value":1}},"consequent":{"type":"Identifier","start":293,"end":298,"name":"month"},"alternate":{"type":"BinaryExpression","start":301,"end":312,"operator":"+","left":{"type":"Literal","start":301,"end":304,"value":"0","raw":"'0'"},"right":{"type":"Identifier","start":307,"end":312,"name":"month"}}},{"type":"ConditionalExpression","start":315,"end":358,"test":{"type":"BinaryExpression","start":315,"end":340,"operator":">","left":{"type":"MemberExpression","start":315,"end":336,"computed":false,"optional":false,"object":{"type":"CallExpression","start":315,"end":329,"optional":false,"callee":{"type":"MemberExpression","start":315,"end":327,"computed":false,"optional":false,"object":{"type":"Identifier","start":315,"end":318,"name":"day"},"property":{"type":"Identifier","start":319,"end":327,"name":"toString"}},"arguments":[]},"property":{"type":"Identifier","start":330,"end":336,"name":"length"}},"right":{"type":"Literal","start":339,"end":340,"raw":"1","value":1}},"consequent":{"type":"Identifier","start":343,"end":346,"name":"day"},"alternate":{"type":"BinaryExpression","start":349,"end":358,"operator":"+","left":{"type":"Literal","start":349,"end":352,"value":"0","raw":"'0'"},"right":{"type":"Identifier","start":355,"end":358,"name":"day"}}}]}]}}]},"alternate":{"type":"BlockStatement","start":378,"end":403,"body":[{"type":"ReturnStatement","start":388,"end":397,"argument":{"type":"Literal","start":395,"end":396,"raw":"0","value":0}}]}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":407,"end":521,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":414,"end":521,"kind":"const","declarations":[{"type":"VariableDeclarator","start":420,"end":520,"id":{"type":"Identifier","start":420,"end":432,"name":"compareDates"},"init":{"type":"ArrowFunctionExpression","start":435,"end":520,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":436,"end":441,"name":"date1"},{"type":"Identifier","start":443,"end":448,"name":"date2"},{"type":"AssignmentPattern","start":450,"end":467,"left":{"type":"Identifier","start":450,"end":459,"name":"operation"},"right":{"type":"Literal","start":462,"end":467,"value":"===","raw":"'==='"}}],"body":{"type":"BlockStatement","start":472,"end":520,"body":[{"type":"ReturnStatement","start":478,"end":518,"argument":{"type":"CallExpression","start":485,"end":517,"optional":false,"callee":{"type":"Identifier","start":485,"end":492,"name":"compare"},"arguments":[{"type":"Identifier","start":493,"end":498,"name":"date1"},{"type":"Identifier","start":500,"end":505,"name":"date2"},{"type":"Identifier","start":507,"end":516,"name":"operation"}]}}]},"id":null}}]}},{"type":"VariableDeclaration","start":522,"end":1059,"kind":"const","declarations":[{"type":"VariableDeclarator","start":528,"end":1058,"id":{"type":"Identifier","start":528,"end":535,"name":"compare"},"init":{"type":"ArrowFunctionExpression","start":538,"end":1058,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":539,"end":544,"name":"date1"},{"type":"Identifier","start":546,"end":551,"name":"date2"},{"type":"Identifier","start":553,"end":563,"name":"comparison"}],"body":{"type":"BlockStatement","start":568,"end":1058,"body":[{"type":"VariableDeclaration","start":574,"end":1007,"kind":"const","declarations":[{"type":"VariableDeclarator","start":580,"end":1006,"id":{"type":"Identifier","start":580,"end":590,"name":"operations"},"init":{"type":"ObjectExpression","start":593,"end":1006,"properties":[{"type":"Property","start":603,"end":659,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":603,"end":606,"value":"<","raw":"'<'"},"value":{"type":"ArrowFunctionExpression","start":608,"end":659,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":609,"end":610,"name":"a"},{"type":"Identifier","start":612,"end":613,"name":"b"}],"body":{"type":"BinaryExpression","start":618,"end":659,"operator":"<","left":{"type":"CallExpression","start":618,"end":637,"optional":false,"callee":{"type":"Identifier","start":618,"end":634,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":635,"end":636,"name":"a"}]},"right":{"type":"CallExpression","start":640,"end":659,"optional":false,"callee":{"type":"Identifier","start":640,"end":656,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":657,"end":658,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":669,"end":725,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":669,"end":672,"value":">","raw":"'>'"},"value":{"type":"ArrowFunctionExpression","start":674,"end":725,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":675,"end":676,"name":"a"},{"type":"Identifier","start":678,"end":679,"name":"b"}],"body":{"type":"BinaryExpression","start":684,"end":725,"operator":">","left":{"type":"CallExpression","start":684,"end":703,"optional":false,"callee":{"type":"Identifier","start":684,"end":700,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":701,"end":702,"name":"a"}]},"right":{"type":"CallExpression","start":706,"end":725,"optional":false,"callee":{"type":"Identifier","start":706,"end":722,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":723,"end":724,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":735,"end":793,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":735,"end":739,"value":"==","raw":"'=='"},"value":{"type":"ArrowFunctionExpression","start":741,"end":793,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":742,"end":743,"name":"a"},{"type":"Identifier","start":745,"end":746,"name":"b"}],"body":{"type":"BinaryExpression","start":751,"end":793,"operator":"==","left":{"type":"CallExpression","start":751,"end":770,"optional":false,"callee":{"type":"Identifier","start":751,"end":767,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":768,"end":769,"name":"a"}]},"right":{"type":"CallExpression","start":774,"end":793,"optional":false,"callee":{"type":"Identifier","start":774,"end":790,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":791,"end":792,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":803,"end":863,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":803,"end":808,"value":"===","raw":"'==='"},"value":{"type":"ArrowFunctionExpression","start":810,"end":863,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":811,"end":812,"name":"a"},{"type":"Identifier","start":814,"end":815,"name":"b"}],"body":{"type":"BinaryExpression","start":820,"end":863,"operator":"===","left":{"type":"CallExpression","start":820,"end":839,"optional":false,"callee":{"type":"Identifier","start":820,"end":836,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":837,"end":838,"name":"a"}]},"right":{"type":"CallExpression","start":844,"end":863,"optional":false,"callee":{"type":"Identifier","start":844,"end":860,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":861,"end":862,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":873,"end":931,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":873,"end":877,"value":"<=","raw":"'<='"},"value":{"type":"ArrowFunctionExpression","start":879,"end":931,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":880,"end":881,"name":"a"},{"type":"Identifier","start":883,"end":884,"name":"b"}],"body":{"type":"BinaryExpression","start":889,"end":931,"operator":"<=","left":{"type":"CallExpression","start":889,"end":908,"optional":false,"callee":{"type":"Identifier","start":889,"end":905,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":906,"end":907,"name":"a"}]},"right":{"type":"CallExpression","start":912,"end":931,"optional":false,"callee":{"type":"Identifier","start":912,"end":928,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":929,"end":930,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":941,"end":999,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":941,"end":945,"value":">=","raw":"'>='"},"value":{"type":"ArrowFunctionExpression","start":947,"end":999,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":948,"end":949,"name":"a"},{"type":"Identifier","start":951,"end":952,"name":"b"}],"body":{"type":"BinaryExpression","start":957,"end":999,"operator":">=","left":{"type":"CallExpression","start":957,"end":976,"optional":false,"callee":{"type":"Identifier","start":957,"end":973,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":974,"end":975,"name":"a"}]},"right":{"type":"CallExpression","start":980,"end":999,"optional":false,"callee":{"type":"Identifier","start":980,"end":996,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":997,"end":998,"name":"b"}]}},"id":null},"kind":"init"}]}}]},{"type":"ReturnStatement","start":1012,"end":1056,"argument":{"type":"CallExpression","start":1019,"end":1055,"optional":false,"callee":{"type":"MemberExpression","start":1019,"end":1041,"computed":true,"optional":false,"object":{"type":"Identifier","start":1019,"end":1029,"name":"operations"},"property":{"type":"Identifier","start":1030,"end":1040,"name":"comparison"}},"arguments":[{"type":"Identifier","start":1042,"end":1047,"name":"date1"},{"type":"Identifier","start":1049,"end":1054,"name":"date2"}]}}]},"id":null}}]}],"_rollupRemoved":[{"end":5206,"start":1060,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"export const prepareToCompare = (date, bufferYears) => {\n    if (date) {\n        const year = date.getFullYear() + (bufferYears || 0);\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return Number.parseInt(`${year}${month.toString().replace.length > 1 ? month : '0' + month}${day.toString().length > 1 ? day : '0' + day}`);\n    }\n    else {\n        return 0;\n    }\n};\nexport const compareDates = (date1, date2, operation = '===') => {\n    return compare(date1, date2, operation);\n};\nconst compare = (date1, date2, comparison) => {\n    const operations = {\n        '<': (a, b) => prepareToCompare(a) < prepareToCompare(b),\n        '>': (a, b) => prepareToCompare(a) > prepareToCompare(b),\n        '==': (a, b) => prepareToCompare(a) == prepareToCompare(b),\n        '===': (a, b) => prepareToCompare(a) === prepareToCompare(b),\n        '<=': (a, b) => prepareToCompare(a) <= prepareToCompare(b),\n        '>=': (a, b) => prepareToCompare(a) >= prepareToCompare(b),\n    };\n    return operations[comparison](date1, date2);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL2hlbHBlcnMvZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxDQUM1QixJQUFzQixFQUN0QixXQUFvQixFQUNkLEVBQUU7SUFDUixJQUFHLElBQUksRUFBRSxDQUFDO1FBQ04sTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3JELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDbEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzNCLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FDbEIsR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLEdBQUcsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUN0SCxDQUFDO0lBQ04sQ0FBQztTQUNJLENBQUM7UUFDRixPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7QUFDTCxDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFlBQWtDLEtBQUssRUFBVyxFQUFFO0lBQ3ZHLE9BQU8sT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDNUMsQ0FBQyxDQUFBO0FBRUQsTUFBTSxPQUFPLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFVBQWdDLEVBQVcsRUFBRTtJQUNwRixNQUFNLFVBQVUsR0FBRztRQUNmLEdBQUcsRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUNwRSxHQUFHLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDcEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQ3RFLEtBQUssRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxLQUFLLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUN4RSxJQUFJLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDdEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0tBQ3pFLENBQUE7SUFDRCxPQUFPLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDaEQsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgQ29tcGFyaXNvbk9wZXJhdGlvbnMgPSAnPCcgfCAnPicgfCAnPT0nIHwgJz09PScgfCAnPD0nIHwgJz49JztcblxuZXhwb3J0IGNvbnN0IHByZXBhcmVUb0NvbXBhcmUgPSAoXG4gICAgZGF0ZTogRGF0ZSB8IHVuZGVmaW5lZCxcbiAgICBidWZmZXJZZWFycz86IG51bWJlclxuKTogbnVtYmVyID0+IHtcbiAgICBpZihkYXRlKSB7XG4gICAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCkgKyAoYnVmZmVyWWVhcnMgfHwgMCk7XG4gICAgICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTtcbiAgICAgICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICBgJHt5ZWFyfSR7bW9udGgudG9TdHJpbmcoKS5yZXBsYWNlLmxlbmd0aCA+IDEgPyBtb250aCA6ICcwJyArIG1vbnRofSR7ZGF5LnRvU3RyaW5nKCkubGVuZ3RoID4gMSA/IGRheSA6ICcwJyArIGRheX1gXG4gICAgICAgICk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG59IFxuXG5leHBvcnQgY29uc3QgY29tcGFyZURhdGVzID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgb3BlcmF0aW9uOiBDb21wYXJpc29uT3BlcmF0aW9ucyA9ICc9PT0nKTogYm9vbGVhbiA9PiB7XG4gICAgcmV0dXJuIGNvbXBhcmUoZGF0ZTEsIGRhdGUyLCBvcGVyYXRpb24pO1xufVxuXG5jb25zdCBjb21wYXJlID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgY29tcGFyaXNvbjogQ29tcGFyaXNvbk9wZXJhdGlvbnMpOiBib29sZWFuID0+IHtcbiAgICBjb25zdCBvcGVyYXRpb25zID0ge1xuICAgICAgICAnPCc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpIDwgcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz4nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA+IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PSc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpID09IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PT0nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA9PT0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJzw9JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPD0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz49JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPj0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICB9XG4gICAgcmV0dXJuIG9wZXJhdGlvbnNbY29tcGFyaXNvbl0oZGF0ZTEsIGRhdGUyKTtcbn0iXX0=","customTransformCache":false,"dependencies":[],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/date.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export const prepareToCompare = (date, bufferYears) => {\n    if (date) {\n        const year = date.getFullYear() + (bufferYears || 0);\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return Number.parseInt(`${year}${month.toString().replace.length > 1 ? month : '0' + month}${day.toString().length > 1 ? day : '0' + day}`);\n    }\n    else {\n        return 0;\n    }\n};\nexport const compareDates = (date1, date2, operation = '===') => {\n    return compare(date1, date2, operation);\n};\nconst compare = (date1, date2, comparison) => {\n    const operations = {\n        '<': (a, b) => prepareToCompare(a) < prepareToCompare(b),\n        '>': (a, b) => prepareToCompare(a) > prepareToCompare(b),\n        '==': (a, b) => prepareToCompare(a) == prepareToCompare(b),\n        '===': (a, b) => prepareToCompare(a) === prepareToCompare(b),\n        '<=': (a, b) => prepareToCompare(a) <= prepareToCompare(b),\n        '>=': (a, b) => prepareToCompare(a) >= prepareToCompare(b),\n    };\n    return operations[comparison](date1, date2);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL2hlbHBlcnMvZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxDQUM1QixJQUFzQixFQUN0QixXQUFvQixFQUNkLEVBQUU7SUFDUixJQUFHLElBQUksRUFBRSxDQUFDO1FBQ04sTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3JELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDbEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzNCLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FDbEIsR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLEdBQUcsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUN0SCxDQUFDO0lBQ04sQ0FBQztTQUNJLENBQUM7UUFDRixPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7QUFDTCxDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFlBQWtDLEtBQUssRUFBVyxFQUFFO0lBQ3ZHLE9BQU8sT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDNUMsQ0FBQyxDQUFBO0FBRUQsTUFBTSxPQUFPLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFVBQWdDLEVBQVcsRUFBRTtJQUNwRixNQUFNLFVBQVUsR0FBRztRQUNmLEdBQUcsRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUNwRSxHQUFHLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDcEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQ3RFLEtBQUssRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxLQUFLLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUN4RSxJQUFJLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDdEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0tBQ3pFLENBQUE7SUFDRCxPQUFPLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDaEQsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgQ29tcGFyaXNvbk9wZXJhdGlvbnMgPSAnPCcgfCAnPicgfCAnPT0nIHwgJz09PScgfCAnPD0nIHwgJz49JztcblxuZXhwb3J0IGNvbnN0IHByZXBhcmVUb0NvbXBhcmUgPSAoXG4gICAgZGF0ZTogRGF0ZSB8IHVuZGVmaW5lZCxcbiAgICBidWZmZXJZZWFycz86IG51bWJlclxuKTogbnVtYmVyID0+IHtcbiAgICBpZihkYXRlKSB7XG4gICAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCkgKyAoYnVmZmVyWWVhcnMgfHwgMCk7XG4gICAgICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTtcbiAgICAgICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICBgJHt5ZWFyfSR7bW9udGgudG9TdHJpbmcoKS5yZXBsYWNlLmxlbmd0aCA+IDEgPyBtb250aCA6ICcwJyArIG1vbnRofSR7ZGF5LnRvU3RyaW5nKCkubGVuZ3RoID4gMSA/IGRheSA6ICcwJyArIGRheX1gXG4gICAgICAgICk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG59IFxuXG5leHBvcnQgY29uc3QgY29tcGFyZURhdGVzID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgb3BlcmF0aW9uOiBDb21wYXJpc29uT3BlcmF0aW9ucyA9ICc9PT0nKTogYm9vbGVhbiA9PiB7XG4gICAgcmV0dXJuIGNvbXBhcmUoZGF0ZTEsIGRhdGUyLCBvcGVyYXRpb24pO1xufVxuXG5jb25zdCBjb21wYXJlID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgY29tcGFyaXNvbjogQ29tcGFyaXNvbk9wZXJhdGlvbnMpOiBib29sZWFuID0+IHtcbiAgICBjb25zdCBvcGVyYXRpb25zID0ge1xuICAgICAgICAnPCc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpIDwgcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz4nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA+IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PSc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpID09IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PT0nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA9PT0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJzw9JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPD0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz49JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPj0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICB9XG4gICAgcmV0dXJuIG9wZXJhdGlvbnNbY29tcGFyaXNvbl0oZGF0ZTEsIGRhdGUyKTtcbn0iXX0=","originalSourcemap":{"version":3,"file":"date.js","sourceRoot":"","sources":["../../../../../projects/ngx-validator-pack/src/lib/helpers/date.ts"],"names":[],"mappings":[[[0,0,2,0],[6,0,2,6],[7,0,2,7],[13,0,2,13],[29,0,2,29],[32,0,2,32],[33,0,3,4],[37,0,3,26],[39,0,4,4],[50,0,4,24],[52,0,5,10],[54,0,5,12]],[[4,0,6,4],[8,0,6,7],[12,0,6,11],[14,0,6,13],[15,0,6,14]],[[8,0,7,8],[14,0,7,14],[18,0,7,18],[21,0,7,21],[25,0,7,25],[26,0,7,26],[37,0,7,37],[39,0,7,39],[42,0,7,42],[43,0,7,43],[54,0,7,54],[58,0,7,58],[59,0,7,59],[60,0,7,60],[61,0,7,61]],[[8,0,8,8],[14,0,8,14],[19,0,8,19],[22,0,8,22],[26,0,8,26],[27,0,8,27],[35,0,8,35],[37,0,8,37],[40,0,8,40],[41,0,8,41],[42,0,8,42]],[[8,0,9,8],[14,0,9,14],[17,0,9,17],[20,0,9,20],[24,0,9,24],[25,0,9,25],[32,0,9,32],[34,0,9,34],[35,0,9,35]],[[8,0,10,8],[15,0,10,15],[21,0,10,21],[22,0,10,22],[30,0,10,30],[31,0,11,12],[34,0,11,15],[38,0,11,19],[41,0,11,22],[46,0,11,27],[47,0,11,28],[55,0,11,36],[57,0,11,38],[58,0,11,39],[65,0,11,46],[66,0,11,47],[72,0,11,53],[75,0,11,56],[76,0,11,57],[77,0,11,58],[78,0,11,59],[79,0,11,60],[84,0,11,65],[85,0,11,66],[86,0,11,67],[87,0,11,68],[90,0,11,71],[93,0,11,74],[98,0,11,79],[101,0,11,82],[104,0,11,85],[105,0,11,86],[113,0,11,94],[115,0,11,96],[116,0,11,97],[122,0,11,103],[125,0,11,106],[126,0,11,107],[127,0,11,108],[128,0,11,109],[129,0,11,110],[132,0,11,113],[133,0,11,114],[134,0,11,115],[135,0,11,116],[138,0,11,119],[141,0,11,122],[144,0,11,125],[146,0,11,127],[147,0,12,9],[148,0,12,10]],[[4,0,13,4],[5,0,13,5]],[[9,0,14,9],[10,0,14,10]],[[8,0,15,8],[15,0,15,15],[16,0,15,16],[17,0,15,17]],[[4,0,16,4],[5,0,16,5]],[[0,0,17,0],[1,0,17,1],[2,0,17,1]],[[0,0,19,0],[6,0,19,6],[7,0,19,7],[13,0,19,13],[25,0,19,25],[28,0,19,28],[29,0,19,29],[34,0,19,40],[36,0,19,42],[41,0,19,53],[43,0,19,55],[55,0,19,89],[60,0,19,94],[62,0,19,105],[64,0,19,107]],[[4,0,20,4],[11,0,20,11],[18,0,20,18],[19,0,20,19],[24,0,20,24],[26,0,20,26],[31,0,20,31],[33,0,20,33],[42,0,20,42],[43,0,20,43],[44,0,20,44]],[[0,0,21,0],[1,0,21,1],[2,0,21,1]],[[0,0,23,0],[6,0,23,6],[13,0,23,13],[16,0,23,16],[17,0,23,17],[22,0,23,28],[24,0,23,30],[29,0,23,41],[31,0,23,43],[41,0,23,75],[43,0,23,86],[45,0,23,88]],[[4,0,24,4],[10,0,24,10],[20,0,24,20],[23,0,24,23]],[[8,0,25,8],[11,0,25,11],[13,0,25,13],[14,0,25,14],[15,0,25,21],[17,0,25,23],[18,0,25,30],[20,0,25,32],[22,0,25,34],[23,0,25,35],[39,0,25,51],[40,0,25,52],[41,0,25,53],[42,0,25,54],[45,0,25,57],[61,0,25,73],[62,0,25,74],[63,0,25,75],[64,0,25,76]],[[8,0,26,8],[11,0,26,11],[13,0,26,13],[14,0,26,14],[15,0,26,21],[17,0,26,23],[18,0,26,30],[20,0,26,32],[22,0,26,34],[23,0,26,35],[39,0,26,51],[40,0,26,52],[41,0,26,53],[42,0,26,54],[45,0,26,57],[61,0,26,73],[62,0,26,74],[63,0,26,75],[64,0,26,76]],[[8,0,27,8],[12,0,27,12],[14,0,27,14],[15,0,27,15],[16,0,27,22],[18,0,27,24],[19,0,27,31],[21,0,27,33],[23,0,27,35],[24,0,27,36],[40,0,27,52],[41,0,27,53],[42,0,27,54],[43,0,27,55],[47,0,27,59],[63,0,27,75],[64,0,27,76],[65,0,27,77],[66,0,27,78]],[[8,0,28,8],[13,0,28,13],[15,0,28,15],[16,0,28,16],[17,0,28,23],[19,0,28,25],[20,0,28,32],[22,0,28,34],[24,0,28,36],[25,0,28,37],[41,0,28,53],[42,0,28,54],[43,0,28,55],[44,0,28,56],[49,0,28,61],[65,0,28,77],[66,0,28,78],[67,0,28,79],[68,0,28,80]],[[8,0,29,8],[12,0,29,12],[14,0,29,14],[15,0,29,15],[16,0,29,22],[18,0,29,24],[19,0,29,31],[21,0,29,33],[23,0,29,35],[24,0,29,36],[40,0,29,52],[41,0,29,53],[42,0,29,54],[43,0,29,55],[47,0,29,59],[63,0,29,75],[64,0,29,76],[65,0,29,77],[66,0,29,78]],[[8,0,30,8],[12,0,30,12],[14,0,30,14],[15,0,30,15],[16,0,30,22],[18,0,30,24],[19,0,30,31],[21,0,30,33],[23,0,30,35],[24,0,30,36],[40,0,30,52],[41,0,30,53],[42,0,30,54],[43,0,30,55],[47,0,30,59],[63,0,30,75],[64,0,30,76],[65,0,30,77],[66,0,30,78]],[[5,0,31,5],[6,0,31,5]],[[4,0,32,4],[11,0,32,11],[21,0,32,21],[22,0,32,22],[32,0,32,32],[33,0,32,33],[34,0,32,34],[39,0,32,39],[41,0,32,41],[46,0,32,46],[47,0,32,47],[48,0,32,48]],[[0,0,33,0],[1,0,33,1],[2,0,33,1]]],"sourcesContent":["export type ComparisonOperations = '<' | '>' | '==' | '===' | '<=' | '>=';\n\nexport const prepareToCompare = (\n    date: Date | undefined,\n    bufferYears?: number\n): number => {\n    if(date) {\n        const year = date.getFullYear() + (bufferYears || 0);\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return Number.parseInt(\n            `${year}${month.toString().replace.length > 1 ? month : '0' + month}${day.toString().length > 1 ? day : '0' + day}`\n        );\n    }\n    else {\n        return 0;\n    }\n} \n\nexport const compareDates = (date1: Date, date2: Date, operation: ComparisonOperations = '==='): boolean => {\n    return compare(date1, date2, operation);\n}\n\nconst compare = (date1: Date, date2: Date, comparison: ComparisonOperations): boolean => {\n    const operations = {\n        '<': (a: Date, b: Date) => prepareToCompare(a) < prepareToCompare(b),\n        '>': (a: Date, b: Date) => prepareToCompare(a) > prepareToCompare(b),\n        '==': (a: Date, b: Date) => prepareToCompare(a) == prepareToCompare(b),\n        '===': (a: Date, b: Date) => prepareToCompare(a) === prepareToCompare(b),\n        '<=': (a: Date, b: Date) => prepareToCompare(a) <= prepareToCompare(b),\n        '>=': (a: Date, b: Date) => prepareToCompare(a) >= prepareToCompare(b),\n    }\n    return operations[comparison](date1, date2);\n}"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":26354,"body":[{"type":"ImportDeclaration","start":192,"end":256,"specifiers":[{"type":"ImportSpecifier","start":201,"end":213,"imported":{"type":"Identifier","start":201,"end":213,"name":"compareDates"},"local":{"type":"Identifier","start":201,"end":213,"name":"compareDates"}},{"type":"ImportSpecifier","start":215,"end":231,"imported":{"type":"Identifier","start":215,"end":231,"name":"prepareToCompare"},"local":{"type":"Identifier","start":215,"end":231,"name":"prepareToCompare"}}],"source":{"type":"Literal","start":239,"end":255,"value":"./helpers/date","raw":"'./helpers/date'"},"attributes":[]},{"type":"ExportNamedDeclaration","start":638,"end":975,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":645,"end":975,"kind":"const","declarations":[{"type":"VariableDeclarator","start":651,"end":974,"id":{"type":"Identifier","start":651,"end":671,"name":"regexpMatchValidator"},"init":{"type":"ArrowFunctionExpression","start":674,"end":974,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":675,"end":681,"name":"regexp"},{"type":"Identifier","start":683,"end":692,"name":"errorName"},{"type":"Identifier","start":694,"end":699,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":704,"end":974,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":705,"end":712,"name":"control"}],"body":{"type":"BlockStatement","start":717,"end":974,"body":[{"type":"ExpressionStatement","start":723,"end":799,"expression":{"type":"AssignmentExpression","start":723,"end":798,"operator":"=","left":{"type":"Identifier","start":723,"end":728,"name":"error"},"right":{"type":"LogicalExpression","start":731,"end":798,"operator":"||","left":{"type":"Identifier","start":731,"end":736,"name":"error"},"right":{"type":"Literal","start":740,"end":798,"value":"This control did not matched a given regular expression.","raw":"'This control did not matched a given regular expression.'"}}}},{"type":"VariableDeclaration","start":804,"end":899,"kind":"const","declarations":[{"type":"VariableDeclarator","start":810,"end":898,"id":{"type":"Identifier","start":810,"end":816,"name":"errors"},"init":{"type":"ConditionalExpression","start":819,"end":898,"test":{"type":"BinaryExpression","start":819,"end":844,"operator":"===","left":{"type":"UnaryExpression","start":819,"end":831,"operator":"typeof","argument":{"type":"Identifier","start":826,"end":831,"name":"error"},"prefix":true},"right":{"type":"Literal","start":836,"end":844,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":847,"end":890,"properties":[{"type":"Property","start":849,"end":888,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":850,"end":880,"operator":"||","left":{"type":"Identifier","start":850,"end":859,"name":"errorName"},"right":{"type":"Literal","start":863,"end":880,"value":"regexpValidator","raw":"'regexpValidator'"}},"value":{"type":"Identifier","start":883,"end":888,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":893,"end":898,"name":"error"}}}]},{"type":"ReturnStatement","start":904,"end":972,"argument":{"type":"ConditionalExpression","start":911,"end":971,"test":{"type":"LogicalExpression","start":911,"end":955,"operator":"||","left":{"type":"UnaryExpression","start":911,"end":925,"operator":"!","argument":{"type":"MemberExpression","start":912,"end":925,"computed":false,"optional":false,"object":{"type":"Identifier","start":912,"end":919,"name":"control"},"property":{"type":"Identifier","start":920,"end":925,"name":"value"}},"prefix":true},"right":{"type":"CallExpression","start":929,"end":955,"optional":false,"callee":{"type":"MemberExpression","start":929,"end":940,"computed":false,"optional":false,"object":{"type":"Identifier","start":929,"end":935,"name":"regexp"},"property":{"type":"Identifier","start":936,"end":940,"name":"test"}},"arguments":[{"type":"MemberExpression","start":941,"end":954,"computed":false,"optional":false,"object":{"type":"Identifier","start":941,"end":948,"name":"control"},"property":{"type":"Identifier","start":949,"end":954,"name":"value"}}]}},"consequent":{"type":"Literal","start":958,"end":962,"raw":"null","value":null},"alternate":{"type":"Identifier","start":965,"end":971,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":1357,"end":1691,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1364,"end":1691,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1370,"end":1690,"id":{"type":"Identifier","start":1370,"end":1394,"name":"regexpNotAMatchValidator"},"init":{"type":"ArrowFunctionExpression","start":1397,"end":1690,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":1398,"end":1404,"name":"regexp"},{"type":"Identifier","start":1406,"end":1415,"name":"errorName"},{"type":"Identifier","start":1417,"end":1422,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":1427,"end":1690,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":1428,"end":1435,"name":"control"}],"body":{"type":"BlockStatement","start":1440,"end":1690,"body":[{"type":"ExpressionStatement","start":1446,"end":1514,"expression":{"type":"AssignmentExpression","start":1446,"end":1513,"operator":"=","left":{"type":"Identifier","start":1446,"end":1451,"name":"error"},"right":{"type":"LogicalExpression","start":1454,"end":1513,"operator":"||","left":{"type":"Identifier","start":1454,"end":1459,"name":"error"},"right":{"type":"Literal","start":1463,"end":1513,"value":"This control matched a given regular expression.","raw":"'This control matched a given regular expression.'"}}}},{"type":"VariableDeclaration","start":1519,"end":1614,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1525,"end":1613,"id":{"type":"Identifier","start":1525,"end":1531,"name":"errors"},"init":{"type":"ConditionalExpression","start":1534,"end":1613,"test":{"type":"BinaryExpression","start":1534,"end":1559,"operator":"===","left":{"type":"UnaryExpression","start":1534,"end":1546,"operator":"typeof","argument":{"type":"Identifier","start":1541,"end":1546,"name":"error"},"prefix":true},"right":{"type":"Literal","start":1551,"end":1559,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":1562,"end":1605,"properties":[{"type":"Property","start":1564,"end":1603,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":1565,"end":1595,"operator":"||","left":{"type":"Identifier","start":1565,"end":1574,"name":"errorName"},"right":{"type":"Literal","start":1578,"end":1595,"value":"regexpValidator","raw":"'regexpValidator'"}},"value":{"type":"Identifier","start":1598,"end":1603,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":1608,"end":1613,"name":"error"}}}]},{"type":"ReturnStatement","start":1619,"end":1688,"argument":{"type":"ConditionalExpression","start":1626,"end":1687,"test":{"type":"LogicalExpression","start":1626,"end":1671,"operator":"||","left":{"type":"UnaryExpression","start":1626,"end":1640,"operator":"!","argument":{"type":"MemberExpression","start":1627,"end":1640,"computed":false,"optional":false,"object":{"type":"Identifier","start":1627,"end":1634,"name":"control"},"property":{"type":"Identifier","start":1635,"end":1640,"name":"value"}},"prefix":true},"right":{"type":"UnaryExpression","start":1644,"end":1671,"operator":"!","argument":{"type":"CallExpression","start":1645,"end":1671,"optional":false,"callee":{"type":"MemberExpression","start":1645,"end":1656,"computed":false,"optional":false,"object":{"type":"Identifier","start":1645,"end":1651,"name":"regexp"},"property":{"type":"Identifier","start":1652,"end":1656,"name":"test"}},"arguments":[{"type":"MemberExpression","start":1657,"end":1670,"computed":false,"optional":false,"object":{"type":"Identifier","start":1657,"end":1664,"name":"control"},"property":{"type":"Identifier","start":1665,"end":1670,"name":"value"}}]},"prefix":true}},"consequent":{"type":"Literal","start":1674,"end":1678,"raw":"null","value":null},"alternate":{"type":"Identifier","start":1681,"end":1687,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":2153,"end":2507,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":2160,"end":2507,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2166,"end":2506,"id":{"type":"Identifier","start":2166,"end":2186,"name":"earlierThenValidator"},"init":{"type":"ArrowFunctionExpression","start":2189,"end":2506,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":2190,"end":2194,"name":"date"},{"type":"Identifier","start":2196,"end":2205,"name":"errorName"},{"type":"Identifier","start":2207,"end":2212,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":2217,"end":2506,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":2218,"end":2225,"name":"control"}],"body":{"type":"BlockStatement","start":2230,"end":2506,"body":[{"type":"ExpressionStatement","start":2236,"end":2315,"expression":{"type":"AssignmentExpression","start":2236,"end":2314,"operator":"=","left":{"type":"Identifier","start":2236,"end":2241,"name":"error"},"right":{"type":"LogicalExpression","start":2244,"end":2314,"operator":"||","left":{"type":"Identifier","start":2244,"end":2249,"name":"error"},"right":{"type":"TemplateLiteral","start":2253,"end":2314,"quasis":[{"type":"TemplateElement","start":2254,"end":2298,"tail":false,"value":{"cooked":"This control must have a value earlier then ","raw":"This control must have a value earlier then "}},{"type":"TemplateElement","start":2312,"end":2313,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"ChainExpression","start":2300,"end":2311,"expression":{"type":"MemberExpression","start":2300,"end":2311,"computed":false,"optional":true,"object":{"type":"Identifier","start":2300,"end":2304,"name":"date"},"property":{"type":"Identifier","start":2306,"end":2311,"name":"value"}}}]}}}},{"type":"VariableDeclaration","start":2320,"end":2411,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2326,"end":2410,"id":{"type":"Identifier","start":2326,"end":2332,"name":"errors"},"init":{"type":"ConditionalExpression","start":2335,"end":2410,"test":{"type":"BinaryExpression","start":2335,"end":2360,"operator":"===","left":{"type":"UnaryExpression","start":2335,"end":2347,"operator":"typeof","argument":{"type":"Identifier","start":2342,"end":2347,"name":"error"},"prefix":true},"right":{"type":"Literal","start":2352,"end":2360,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":2363,"end":2402,"properties":[{"type":"Property","start":2365,"end":2400,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":2366,"end":2392,"operator":"||","left":{"type":"Identifier","start":2366,"end":2375,"name":"errorName"},"right":{"type":"Literal","start":2379,"end":2392,"value":"earlierThen","raw":"'earlierThen'"}},"value":{"type":"Identifier","start":2395,"end":2400,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":2405,"end":2410,"name":"error"}}}]},{"type":"ReturnStatement","start":2416,"end":2504,"argument":{"type":"ConditionalExpression","start":2423,"end":2503,"test":{"type":"BinaryExpression","start":2423,"end":2487,"operator":"<","left":{"type":"CallExpression","start":2423,"end":2455,"optional":false,"callee":{"type":"Identifier","start":2423,"end":2439,"name":"prepareToCompare"},"arguments":[{"type":"ChainExpression","start":2440,"end":2454,"expression":{"type":"MemberExpression","start":2440,"end":2454,"computed":false,"optional":true,"object":{"type":"Identifier","start":2440,"end":2447,"name":"control"},"property":{"type":"Identifier","start":2449,"end":2454,"name":"value"}}}]},"right":{"type":"CallExpression","start":2458,"end":2487,"optional":false,"callee":{"type":"Identifier","start":2458,"end":2474,"name":"prepareToCompare"},"arguments":[{"type":"ChainExpression","start":2475,"end":2486,"expression":{"type":"MemberExpression","start":2475,"end":2486,"computed":false,"optional":true,"object":{"type":"Identifier","start":2475,"end":2479,"name":"date"},"property":{"type":"Identifier","start":2481,"end":2486,"name":"value"}}}]}},"consequent":{"type":"Literal","start":2490,"end":2494,"raw":"null","value":null},"alternate":{"type":"Identifier","start":2497,"end":2503,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":2961,"end":3309,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":2968,"end":3309,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2974,"end":3308,"id":{"type":"Identifier","start":2974,"end":2992,"name":"laterThenValidator"},"init":{"type":"ArrowFunctionExpression","start":2995,"end":3308,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":2996,"end":3000,"name":"date"},{"type":"Identifier","start":3002,"end":3011,"name":"errorName"},{"type":"Identifier","start":3013,"end":3018,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":3023,"end":3308,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":3024,"end":3031,"name":"control"}],"body":{"type":"BlockStatement","start":3036,"end":3308,"body":[{"type":"ExpressionStatement","start":3042,"end":3119,"expression":{"type":"AssignmentExpression","start":3042,"end":3118,"operator":"=","left":{"type":"Identifier","start":3042,"end":3047,"name":"error"},"right":{"type":"LogicalExpression","start":3050,"end":3118,"operator":"||","left":{"type":"Identifier","start":3050,"end":3055,"name":"error"},"right":{"type":"TemplateLiteral","start":3059,"end":3118,"quasis":[{"type":"TemplateElement","start":3060,"end":3102,"tail":false,"value":{"cooked":"This control must have a value later then ","raw":"This control must have a value later then "}},{"type":"TemplateElement","start":3116,"end":3117,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"ChainExpression","start":3104,"end":3115,"expression":{"type":"MemberExpression","start":3104,"end":3115,"computed":false,"optional":true,"object":{"type":"Identifier","start":3104,"end":3108,"name":"date"},"property":{"type":"Identifier","start":3110,"end":3115,"name":"value"}}}]}}}},{"type":"VariableDeclaration","start":3124,"end":3213,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3130,"end":3212,"id":{"type":"Identifier","start":3130,"end":3136,"name":"errors"},"init":{"type":"ConditionalExpression","start":3139,"end":3212,"test":{"type":"BinaryExpression","start":3139,"end":3164,"operator":"===","left":{"type":"UnaryExpression","start":3139,"end":3151,"operator":"typeof","argument":{"type":"Identifier","start":3146,"end":3151,"name":"error"},"prefix":true},"right":{"type":"Literal","start":3156,"end":3164,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":3167,"end":3204,"properties":[{"type":"Property","start":3169,"end":3202,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":3170,"end":3194,"operator":"||","left":{"type":"Identifier","start":3170,"end":3179,"name":"errorName"},"right":{"type":"Literal","start":3183,"end":3194,"value":"laterThen","raw":"'laterThen'"}},"value":{"type":"Identifier","start":3197,"end":3202,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":3207,"end":3212,"name":"error"}}}]},{"type":"ReturnStatement","start":3218,"end":3306,"argument":{"type":"ConditionalExpression","start":3225,"end":3305,"test":{"type":"BinaryExpression","start":3225,"end":3289,"operator":">","left":{"type":"CallExpression","start":3225,"end":3257,"optional":false,"callee":{"type":"Identifier","start":3225,"end":3241,"name":"prepareToCompare"},"arguments":[{"type":"ChainExpression","start":3242,"end":3256,"expression":{"type":"MemberExpression","start":3242,"end":3256,"computed":false,"optional":true,"object":{"type":"Identifier","start":3242,"end":3249,"name":"control"},"property":{"type":"Identifier","start":3251,"end":3256,"name":"value"}}}]},"right":{"type":"CallExpression","start":3260,"end":3289,"optional":false,"callee":{"type":"Identifier","start":3260,"end":3276,"name":"prepareToCompare"},"arguments":[{"type":"ChainExpression","start":3277,"end":3288,"expression":{"type":"MemberExpression","start":3277,"end":3288,"computed":false,"optional":true,"object":{"type":"Identifier","start":3277,"end":3281,"name":"date"},"property":{"type":"Identifier","start":3283,"end":3288,"name":"value"}}}]}},"consequent":{"type":"Literal","start":3292,"end":3296,"raw":"null","value":null},"alternate":{"type":"Identifier","start":3299,"end":3305,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":3793,"end":4212,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3800,"end":4212,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3806,"end":4211,"id":{"type":"Identifier","start":3806,"end":3824,"name":"compareToValidator"},"init":{"type":"ArrowFunctionExpression","start":3827,"end":4211,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":3828,"end":3837,"name":"filedName"},{"type":"Identifier","start":3839,"end":3849,"name":"comparison"},{"type":"Identifier","start":3851,"end":3860,"name":"errorName"},{"type":"Identifier","start":3862,"end":3867,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":3872,"end":4211,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":3873,"end":3880,"name":"control"}],"body":{"type":"BlockStatement","start":3885,"end":4211,"body":[{"type":"VariableDeclaration","start":3891,"end":3942,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3897,"end":3941,"id":{"type":"Identifier","start":3897,"end":3901,"name":"date"},"init":{"type":"ChainExpression","start":3904,"end":3941,"expression":{"type":"MemberExpression","start":3904,"end":3941,"computed":false,"optional":true,"object":{"type":"CallExpression","start":3904,"end":3934,"optional":false,"callee":{"type":"MemberExpression","start":3904,"end":3923,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":3904,"end":3918,"computed":false,"optional":false,"object":{"type":"Identifier","start":3904,"end":3911,"name":"control"},"property":{"type":"Identifier","start":3912,"end":3918,"name":"parent"}},"property":{"type":"Identifier","start":3920,"end":3923,"name":"get"}},"arguments":[{"type":"Identifier","start":3924,"end":3933,"name":"filedName"}]},"property":{"type":"Identifier","start":3936,"end":3941,"name":"value"}}}}]},{"type":"ExpressionStatement","start":3947,"end":4011,"expression":{"type":"AssignmentExpression","start":3947,"end":4010,"operator":"=","left":{"type":"Identifier","start":3947,"end":3952,"name":"error"},"right":{"type":"LogicalExpression","start":3955,"end":4010,"operator":"||","left":{"type":"Identifier","start":3955,"end":3960,"name":"error"},"right":{"type":"TemplateLiteral","start":3964,"end":4010,"quasis":[{"type":"TemplateElement","start":3965,"end":3987,"tail":false,"value":{"cooked":"Value comparison with ","raw":"Value comparison with "}},{"type":"TemplateElement","start":4001,"end":4009,"tail":true,"value":{"cooked":" failed.","raw":" failed."}}],"expressions":[{"type":"ChainExpression","start":3989,"end":4000,"expression":{"type":"MemberExpression","start":3989,"end":4000,"computed":false,"optional":true,"object":{"type":"Identifier","start":3989,"end":3993,"name":"date"},"property":{"type":"Identifier","start":3995,"end":4000,"name":"value"}}}]}}}},{"type":"VariableDeclaration","start":4016,"end":4110,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4022,"end":4109,"id":{"type":"Identifier","start":4022,"end":4028,"name":"errors"},"init":{"type":"ConditionalExpression","start":4031,"end":4109,"test":{"type":"BinaryExpression","start":4031,"end":4056,"operator":"===","left":{"type":"UnaryExpression","start":4031,"end":4043,"operator":"typeof","argument":{"type":"Identifier","start":4038,"end":4043,"name":"error"},"prefix":true},"right":{"type":"Literal","start":4048,"end":4056,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":4059,"end":4101,"properties":[{"type":"Property","start":4061,"end":4099,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":4062,"end":4091,"operator":"||","left":{"type":"Identifier","start":4062,"end":4071,"name":"errorName"},"right":{"type":"Literal","start":4075,"end":4091,"value":"dateComparison","raw":"'dateComparison'"}},"value":{"type":"Identifier","start":4094,"end":4099,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":4104,"end":4109,"name":"error"}}}]},{"type":"ReturnStatement","start":4115,"end":4209,"argument":{"type":"ConditionalExpression","start":4122,"end":4208,"test":{"type":"LogicalExpression","start":4122,"end":4192,"operator":"&&","left":{"type":"LogicalExpression","start":4122,"end":4143,"operator":"&&","left":{"type":"MemberExpression","start":4122,"end":4135,"computed":false,"optional":false,"object":{"type":"Identifier","start":4122,"end":4129,"name":"control"},"property":{"type":"Identifier","start":4130,"end":4135,"name":"value"}},"right":{"type":"Identifier","start":4139,"end":4143,"name":"date"}},"right":{"type":"CallExpression","start":4147,"end":4192,"optional":false,"callee":{"type":"Identifier","start":4147,"end":4159,"name":"compareDates"},"arguments":[{"type":"MemberExpression","start":4160,"end":4173,"computed":false,"optional":false,"object":{"type":"Identifier","start":4160,"end":4167,"name":"control"},"property":{"type":"Identifier","start":4168,"end":4173,"name":"value"}},{"type":"Identifier","start":4175,"end":4179,"name":"date"},{"type":"Identifier","start":4181,"end":4191,"name":"comparison"}]}},"consequent":{"type":"Literal","start":4195,"end":4199,"raw":"null","value":null},"alternate":{"type":"Identifier","start":4202,"end":4208,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":4573,"end":4965,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4580,"end":4965,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4586,"end":4964,"id":{"type":"Identifier","start":4586,"end":4607,"name":"requiredWhenValidator"},"init":{"type":"ArrowFunctionExpression","start":4610,"end":4964,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":4611,"end":4622,"name":"conditional"},{"type":"Identifier","start":4624,"end":4633,"name":"errorName"},{"type":"Identifier","start":4635,"end":4640,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":4645,"end":4964,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":4646,"end":4653,"name":"control"}],"body":{"type":"BlockStatement","start":4658,"end":4964,"body":[{"type":"ExpressionStatement","start":4664,"end":4725,"expression":{"type":"AssignmentExpression","start":4664,"end":4724,"operator":"=","left":{"type":"Identifier","start":4664,"end":4669,"name":"error"},"right":{"type":"LogicalExpression","start":4672,"end":4724,"operator":"||","left":{"type":"Identifier","start":4672,"end":4677,"name":"error"},"right":{"type":"Literal","start":4681,"end":4724,"value":"This control has a conditional set on it.","raw":"'This control has a conditional set on it.'"}}}},{"type":"VariableDeclaration","start":4730,"end":4822,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4736,"end":4821,"id":{"type":"Identifier","start":4736,"end":4742,"name":"errors"},"init":{"type":"ConditionalExpression","start":4745,"end":4821,"test":{"type":"BinaryExpression","start":4745,"end":4770,"operator":"===","left":{"type":"UnaryExpression","start":4745,"end":4757,"operator":"typeof","argument":{"type":"Identifier","start":4752,"end":4757,"name":"error"},"prefix":true},"right":{"type":"Literal","start":4762,"end":4770,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":4773,"end":4813,"properties":[{"type":"Property","start":4775,"end":4811,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":4776,"end":4803,"operator":"||","left":{"type":"Identifier","start":4776,"end":4785,"name":"errorName"},"right":{"type":"Literal","start":4789,"end":4803,"value":"requiredWhen","raw":"'requiredWhen'"}},"value":{"type":"Identifier","start":4806,"end":4811,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":4816,"end":4821,"name":"error"}}}]},{"type":"VariableDeclaration","start":4827,"end":4907,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4833,"end":4906,"id":{"type":"Identifier","start":4833,"end":4840,"name":"outcome"},"init":{"type":"ConditionalExpression","start":4843,"end":4906,"test":{"type":"BinaryExpression","start":4843,"end":4876,"operator":"===","left":{"type":"UnaryExpression","start":4843,"end":4861,"operator":"typeof","argument":{"type":"Identifier","start":4850,"end":4861,"name":"conditional"},"prefix":true},"right":{"type":"Literal","start":4866,"end":4876,"value":"function","raw":"'function'"}},"consequent":{"type":"CallExpression","start":4879,"end":4892,"optional":false,"callee":{"type":"Identifier","start":4879,"end":4890,"name":"conditional"},"arguments":[]},"alternate":{"type":"Identifier","start":4895,"end":4906,"name":"conditional"}}}]},{"type":"ReturnStatement","start":4912,"end":4962,"argument":{"type":"ConditionalExpression","start":4919,"end":4961,"test":{"type":"LogicalExpression","start":4919,"end":4945,"operator":"||","left":{"type":"UnaryExpression","start":4919,"end":4933,"operator":"!","argument":{"type":"MemberExpression","start":4920,"end":4933,"computed":false,"optional":false,"object":{"type":"Identifier","start":4920,"end":4927,"name":"control"},"property":{"type":"Identifier","start":4928,"end":4933,"name":"value"}},"prefix":true},"right":{"type":"UnaryExpression","start":4937,"end":4945,"operator":"!","argument":{"type":"Identifier","start":4938,"end":4945,"name":"outcome"},"prefix":true}},"consequent":{"type":"Literal","start":4948,"end":4952,"raw":"null","value":null},"alternate":{"type":"Identifier","start":4955,"end":4961,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":5424,"end":5770,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":5431,"end":5770,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5437,"end":5769,"id":{"type":"Identifier","start":5437,"end":5452,"name":"linkToValidator"},"init":{"type":"ArrowFunctionExpression","start":5455,"end":5769,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":5456,"end":5462,"name":"linkTo"},{"type":"Identifier","start":5464,"end":5473,"name":"errorName"},{"type":"Identifier","start":5475,"end":5480,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":5485,"end":5769,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":5486,"end":5493,"name":"control"}],"body":{"type":"BlockStatement","start":5498,"end":5769,"body":[{"type":"ExpressionStatement","start":5504,"end":5561,"expression":{"type":"AssignmentExpression","start":5504,"end":5560,"operator":"=","left":{"type":"Identifier","start":5504,"end":5509,"name":"error"},"right":{"type":"LogicalExpression","start":5512,"end":5560,"operator":"||","left":{"type":"Identifier","start":5512,"end":5517,"name":"error"},"right":{"type":"TemplateLiteral","start":5521,"end":5560,"quasis":[{"type":"TemplateElement","start":5522,"end":5549,"tail":false,"value":{"cooked":"This control has a link to ","raw":"This control has a link to "}},{"type":"TemplateElement","start":5558,"end":5559,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":5551,"end":5557,"name":"linkTo"}]}}}},{"type":"VariableDeclaration","start":5566,"end":5652,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5572,"end":5651,"id":{"type":"Identifier","start":5572,"end":5578,"name":"errors"},"init":{"type":"ConditionalExpression","start":5581,"end":5651,"test":{"type":"BinaryExpression","start":5581,"end":5606,"operator":"===","left":{"type":"UnaryExpression","start":5581,"end":5593,"operator":"typeof","argument":{"type":"Identifier","start":5588,"end":5593,"name":"error"},"prefix":true},"right":{"type":"Literal","start":5598,"end":5606,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":5609,"end":5643,"properties":[{"type":"Property","start":5611,"end":5641,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":5612,"end":5633,"operator":"||","left":{"type":"Identifier","start":5612,"end":5621,"name":"errorName"},"right":{"type":"Literal","start":5625,"end":5633,"value":"linkTo","raw":"'linkTo'"}},"value":{"type":"Identifier","start":5636,"end":5641,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":5646,"end":5651,"name":"error"}}}]},{"type":"VariableDeclaration","start":5657,"end":5702,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5663,"end":5701,"id":{"type":"Identifier","start":5663,"end":5671,"name":"linkedTo"},"init":{"type":"ChainExpression","start":5674,"end":5701,"expression":{"type":"CallExpression","start":5674,"end":5701,"optional":false,"callee":{"type":"MemberExpression","start":5674,"end":5693,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":5674,"end":5688,"computed":false,"optional":false,"object":{"type":"Identifier","start":5674,"end":5681,"name":"control"},"property":{"type":"Identifier","start":5682,"end":5688,"name":"parent"}},"property":{"type":"Identifier","start":5690,"end":5693,"name":"get"}},"arguments":[{"type":"Identifier","start":5694,"end":5700,"name":"linkTo"}]}}}]},{"type":"ReturnStatement","start":5707,"end":5767,"argument":{"type":"ConditionalExpression","start":5714,"end":5766,"test":{"type":"LogicalExpression","start":5714,"end":5750,"operator":"&&","left":{"type":"UnaryExpression","start":5714,"end":5729,"operator":"!","argument":{"type":"ChainExpression","start":5715,"end":5729,"expression":{"type":"MemberExpression","start":5715,"end":5729,"computed":false,"optional":true,"object":{"type":"Identifier","start":5715,"end":5722,"name":"control"},"property":{"type":"Identifier","start":5724,"end":5729,"name":"value"}}},"prefix":true},"right":{"type":"UnaryExpression","start":5733,"end":5750,"operator":"!","argument":{"type":"UnaryExpression","start":5734,"end":5750,"operator":"!","argument":{"type":"ChainExpression","start":5735,"end":5750,"expression":{"type":"MemberExpression","start":5735,"end":5750,"computed":false,"optional":true,"object":{"type":"Identifier","start":5735,"end":5743,"name":"linkedTo"},"property":{"type":"Identifier","start":5745,"end":5750,"name":"value"}}},"prefix":true},"prefix":true}},"consequent":{"type":"Identifier","start":5753,"end":5759,"name":"errors"},"alternate":{"type":"Literal","start":5762,"end":5766,"raw":"null","value":null}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":6315,"end":6658,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":6322,"end":6658,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6328,"end":6657,"id":{"type":"Identifier","start":6328,"end":6345,"name":"linkedToValidator"},"init":{"type":"ArrowFunctionExpression","start":6348,"end":6657,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":6349,"end":6357,"name":"linkedTo"},{"type":"Identifier","start":6359,"end":6368,"name":"errorName"},{"type":"Identifier","start":6370,"end":6375,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":6380,"end":6657,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":6381,"end":6388,"name":"control"}],"body":{"type":"BlockStatement","start":6393,"end":6657,"body":[{"type":"ExpressionStatement","start":6399,"end":6457,"expression":{"type":"AssignmentExpression","start":6399,"end":6456,"operator":"=","left":{"type":"Identifier","start":6399,"end":6404,"name":"error"},"right":{"type":"LogicalExpression","start":6407,"end":6456,"operator":"||","left":{"type":"Identifier","start":6407,"end":6412,"name":"error"},"right":{"type":"TemplateLiteral","start":6416,"end":6456,"quasis":[{"type":"TemplateElement","start":6417,"end":6443,"tail":false,"value":{"cooked":"This control is linked to ","raw":"This control is linked to "}},{"type":"TemplateElement","start":6454,"end":6455,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":6445,"end":6453,"name":"linkedTo"}]}}}},{"type":"VariableDeclaration","start":6462,"end":6548,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6468,"end":6547,"id":{"type":"Identifier","start":6468,"end":6474,"name":"errors"},"init":{"type":"ConditionalExpression","start":6477,"end":6547,"test":{"type":"BinaryExpression","start":6477,"end":6502,"operator":"===","left":{"type":"UnaryExpression","start":6477,"end":6489,"operator":"typeof","argument":{"type":"Identifier","start":6484,"end":6489,"name":"error"},"prefix":true},"right":{"type":"Literal","start":6494,"end":6502,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":6505,"end":6539,"properties":[{"type":"Property","start":6507,"end":6537,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":6508,"end":6529,"operator":"||","left":{"type":"Identifier","start":6508,"end":6517,"name":"errorName"},"right":{"type":"Literal","start":6521,"end":6529,"value":"linkTo","raw":"'linkTo'"}},"value":{"type":"Identifier","start":6532,"end":6537,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":6542,"end":6547,"name":"error"}}}]},{"type":"VariableDeclaration","start":6553,"end":6596,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6559,"end":6595,"id":{"type":"Identifier","start":6559,"end":6563,"name":"link"},"init":{"type":"ChainExpression","start":6566,"end":6595,"expression":{"type":"CallExpression","start":6566,"end":6595,"optional":false,"callee":{"type":"MemberExpression","start":6566,"end":6585,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":6566,"end":6580,"computed":false,"optional":false,"object":{"type":"Identifier","start":6566,"end":6573,"name":"control"},"property":{"type":"Identifier","start":6574,"end":6580,"name":"parent"}},"property":{"type":"Identifier","start":6582,"end":6585,"name":"get"}},"arguments":[{"type":"Identifier","start":6586,"end":6594,"name":"linkedTo"}]}}}]},{"type":"ReturnStatement","start":6601,"end":6655,"argument":{"type":"ConditionalExpression","start":6608,"end":6654,"test":{"type":"LogicalExpression","start":6608,"end":6638,"operator":"&&","left":{"type":"ChainExpression","start":6608,"end":6622,"expression":{"type":"MemberExpression","start":6608,"end":6622,"computed":false,"optional":true,"object":{"type":"Identifier","start":6608,"end":6615,"name":"control"},"property":{"type":"Identifier","start":6617,"end":6622,"name":"value"}}},"right":{"type":"UnaryExpression","start":6626,"end":6638,"operator":"!","argument":{"type":"ChainExpression","start":6627,"end":6638,"expression":{"type":"MemberExpression","start":6627,"end":6638,"computed":false,"optional":true,"object":{"type":"Identifier","start":6627,"end":6631,"name":"link"},"property":{"type":"Identifier","start":6633,"end":6638,"name":"value"}}},"prefix":true}},"consequent":{"type":"Identifier","start":6641,"end":6647,"name":"errors"},"alternate":{"type":"Literal","start":6650,"end":6654,"raw":"null","value":null}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":7115,"end":7671,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7122,"end":7671,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7128,"end":7670,"id":{"type":"Identifier","start":7128,"end":7144,"name":"etherOrValidator"},"init":{"type":"ArrowFunctionExpression","start":7147,"end":7670,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":7148,"end":7155,"name":"toCheck"},{"type":"Identifier","start":7157,"end":7166,"name":"errorName"},{"type":"Identifier","start":7168,"end":7173,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":7178,"end":7670,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":7179,"end":7186,"name":"control"}],"body":{"type":"BlockStatement","start":7191,"end":7670,"body":[{"type":"ExpressionStatement","start":7197,"end":7268,"expression":{"type":"AssignmentExpression","start":7197,"end":7267,"operator":"=","left":{"type":"Identifier","start":7197,"end":7202,"name":"error"},"right":{"type":"LogicalExpression","start":7205,"end":7267,"operator":"||","left":{"type":"Identifier","start":7205,"end":7210,"name":"error"},"right":{"type":"TemplateLiteral","start":7214,"end":7267,"quasis":[{"type":"TemplateElement","start":7215,"end":7237,"tail":false,"value":{"cooked":"Ether this control or ","raw":"Ether this control or "}},{"type":"TemplateElement","start":7247,"end":7266,"tail":true,"value":{"cooked":" has to have value.","raw":" has to have value."}}],"expressions":[{"type":"Identifier","start":7239,"end":7246,"name":"toCheck"}]}}}},{"type":"VariableDeclaration","start":7273,"end":7360,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7279,"end":7359,"id":{"type":"Identifier","start":7279,"end":7285,"name":"errors"},"init":{"type":"ConditionalExpression","start":7288,"end":7359,"test":{"type":"BinaryExpression","start":7288,"end":7313,"operator":"===","left":{"type":"UnaryExpression","start":7288,"end":7300,"operator":"typeof","argument":{"type":"Identifier","start":7295,"end":7300,"name":"error"},"prefix":true},"right":{"type":"Literal","start":7305,"end":7313,"value":"string","raw":"'string'"}},"consequent":{"type":"ObjectExpression","start":7316,"end":7351,"properties":[{"type":"Property","start":7318,"end":7349,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":7319,"end":7341,"operator":"||","left":{"type":"Identifier","start":7319,"end":7328,"name":"errorName"},"right":{"type":"Literal","start":7332,"end":7341,"value":"etherOr","raw":"'etherOr'"}},"value":{"type":"Identifier","start":7344,"end":7349,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":7354,"end":7359,"name":"error"}}}]},{"type":"VariableDeclaration","start":7365,"end":7408,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7371,"end":7407,"id":{"type":"Identifier","start":7371,"end":7376,"name":"check"},"init":{"type":"ChainExpression","start":7379,"end":7407,"expression":{"type":"CallExpression","start":7379,"end":7407,"optional":false,"callee":{"type":"MemberExpression","start":7379,"end":7398,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":7379,"end":7393,"computed":false,"optional":false,"object":{"type":"Identifier","start":7379,"end":7386,"name":"control"},"property":{"type":"Identifier","start":7387,"end":7393,"name":"parent"}},"property":{"type":"Identifier","start":7395,"end":7398,"name":"get"}},"arguments":[{"type":"Identifier","start":7399,"end":7406,"name":"toCheck"}]}}}]},{"type":"IfStatement","start":7413,"end":7668,"test":{"type":"LogicalExpression","start":7417,"end":7449,"operator":"&&","left":{"type":"UnaryExpression","start":7417,"end":7432,"operator":"!","argument":{"type":"ChainExpression","start":7418,"end":7432,"expression":{"type":"MemberExpression","start":7418,"end":7432,"computed":false,"optional":true,"object":{"type":"Identifier","start":7418,"end":7425,"name":"control"},"property":{"type":"Identifier","start":7427,"end":7432,"name":"value"}}},"prefix":true},"right":{"type":"UnaryExpression","start":7436,"end":7449,"operator":"!","argument":{"type":"ChainExpression","start":7437,"end":7449,"expression":{"type":"MemberExpression","start":7437,"end":7449,"computed":false,"optional":true,"object":{"type":"Identifier","start":7437,"end":7442,"name":"check"},"property":{"type":"Identifier","start":7444,"end":7449,"name":"value"}}},"prefix":true}},"consequent":{"type":"BlockStatement","start":7451,"end":7564,"body":[{"type":"ExpressionStatement","start":7461,"end":7535,"expression":{"type":"CallExpression","start":7461,"end":7534,"optional":false,"callee":{"type":"MemberExpression","start":7461,"end":7476,"computed":false,"optional":false,"object":{"type":"Identifier","start":7461,"end":7466,"name":"check"},"property":{"type":"Identifier","start":7467,"end":7476,"name":"setErrors"}},"arguments":[{"type":"ObjectExpression","start":7477,"end":7533,"properties":[{"type":"Property","start":7491,"end":7522,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":7492,"end":7514,"operator":"||","left":{"type":"Identifier","start":7492,"end":7501,"name":"errorName"},"right":{"type":"Literal","start":7505,"end":7514,"value":"etherOr","raw":"'etherOr'"}},"value":{"type":"Identifier","start":7517,"end":7522,"name":"error"},"kind":"init"}]}]}},{"type":"ReturnStatement","start":7544,"end":7558,"argument":{"type":"Identifier","start":7551,"end":7557,"name":"errors"}}]},"alternate":{"type":"BlockStatement","start":7574,"end":7668,"body":[{"type":"IfStatement","start":7584,"end":7641,"test":{"type":"Identifier","start":7588,"end":7593,"name":"check"},"consequent":{"type":"BlockStatement","start":7595,"end":7641,"body":[{"type":"ExpressionStatement","start":7609,"end":7631,"expression":{"type":"CallExpression","start":7609,"end":7630,"optional":false,"callee":{"type":"MemberExpression","start":7609,"end":7624,"computed":false,"optional":false,"object":{"type":"Identifier","start":7609,"end":7614,"name":"check"},"property":{"type":"Identifier","start":7615,"end":7624,"name":"setErrors"}},"arguments":[{"type":"Literal","start":7625,"end":7629,"raw":"null","value":null}]}}]},"alternate":null},{"type":"ReturnStatement","start":7650,"end":7662,"argument":{"type":"Literal","start":7657,"end":7661,"raw":"null","value":null}}]}}]},"id":null},"id":null}}]}}],"_rollupRemoved":[{"end":26354,"start":7672,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { compareDates, prepareToCompare } from './helpers/date';\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || 'This control did not matched a given regular expression.';\n    const errors = typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n    return !control.value || regexp.test(control.value) ? null : errors;\n};\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpNotAMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || 'This control matched a given regular expression.';\n    const errors = typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n    return !control.value || !regexp.test(control.value) ? null : errors;\n};\n/**\n * Checks if the date in the given FromControl / AbstractControl is earlier then\n * the value in the specified FromControl / AbstractControl\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const earlierThenValidator = (date, errorName, error) => (control) => {\n    error = error || `This control must have a value earlier then ${date?.value}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'earlierThen']: error } : error;\n    return prepareToCompare(control?.value) < prepareToCompare(date?.value) ? null : errors;\n};\n/**\n* Checks if the date in the given FromControl / AbstractControl is greater then\n* the value in the specified FromControl / AbstractControl\n*\n* @param {AbstractControl}           - AbstractControl to preform the check against\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const laterThenValidator = (date, errorName, error) => (control) => {\n    error = error || `This control must have a value later then ${date?.value}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'laterThen']: error } : error;\n    return prepareToCompare(control?.value) > prepareToCompare(date?.value) ? null : errors;\n};\n/**\n* Compares the date values of the given FromControl / AbstractControl and\n* specified FromControl / AbstractControl\n*\n* @param {string}                    - name of the filed to compare against\n* @param {ComparisonOperations}      - comparison to preform\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const compareToValidator = (filedName, comparison, errorName, error) => (control) => {\n    const date = control.parent?.get(filedName)?.value;\n    error = error || `Value comparison with ${date?.value} failed.`;\n    const errors = typeof error === 'string' ? { [errorName || 'dateComparison']: error } : error;\n    return control.value && date && compareDates(control.value, date, comparison) ? null : errors;\n};\n/**\n* Returns a validation error if a condition is met\n*\n* @param {Function | boolean}        - conditional function or a boolean value\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const requiredWhenValidator = (conditional, errorName, error) => (control) => {\n    error = error || 'This control has a conditional set on it.';\n    const errors = typeof error === 'string' ? { [errorName || 'requiredWhen']: error } : error;\n    const outcome = typeof conditional === 'function' ? conditional() : conditional;\n    return !control.value || !outcome ? null : errors;\n};\n/**\n* Returns a validation error if a given FromControl / AbstractControl has no value\n* and specified FromControl / AbstractControl has it\n*\n* @param {string}                    - name of the FromControl / AbstractControl to link to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkToValidator = (linkTo, errorName, error) => (control) => {\n    error = error || `This control has a link to ${linkTo}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n    const linkedTo = control.parent?.get(linkTo);\n    return !control?.value && !!linkedTo?.value ? errors : null;\n};\n/**\n* Returns a validation error if a given FromControl / AbstractControl has a value\n* and specified FromControl / AbstractControl does not\n*\n* @param {string}                    - name of the FromControl / AbstractControl\n*                                      which a given FromControl / AbstractControl is linked to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkedToValidator = (linkedTo, errorName, error) => (control) => {\n    error = error || `This control is linked to ${linkedTo}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n    const link = control.parent?.get(linkedTo);\n    return control?.value && !link?.value ? errors : null;\n};\n/**\n* Returns a validation error if a nether the given FromControl / AbstractControl nor\n* the specified FromControl / AbstractControl has values\n*\n* @param {AbstractControl}           - AbstractControl to preform the check against\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const etherOrValidator = (toCheck, errorName, error) => (control) => {\n    error = error || `Ether this control or ${toCheck} has to have value.`;\n    const errors = typeof error === 'string' ? { [errorName || 'etherOr']: error } : error;\n    const check = control.parent?.get(toCheck);\n    if (!control?.value && !check?.value) {\n        check.setErrors({\n            [errorName || 'etherOr']: error,\n        });\n        return errors;\n    }\n    else {\n        if (check) {\n            check.setErrors(null);\n        }\n        return null;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/date.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","meta":{},"moduleSideEffects":false,"originalCode":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { compareDates, prepareToCompare } from './helpers/date';\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || 'This control did not matched a given regular expression.';\n    const errors = typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n    return !control.value || regexp.test(control.value) ? null : errors;\n};\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpNotAMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || 'This control matched a given regular expression.';\n    const errors = typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n    return !control.value || !regexp.test(control.value) ? null : errors;\n};\n/**\n * Checks if the date in the given FromControl / AbstractControl is earlier then\n * the value in the specified FromControl / AbstractControl\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const earlierThenValidator = (date, errorName, error) => (control) => {\n    error = error || `This control must have a value earlier then ${date?.value}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'earlierThen']: error } : error;\n    return prepareToCompare(control?.value) < prepareToCompare(date?.value) ? null : errors;\n};\n/**\n* Checks if the date in the given FromControl / AbstractControl is greater then\n* the value in the specified FromControl / AbstractControl\n*\n* @param {AbstractControl}           - AbstractControl to preform the check against\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const laterThenValidator = (date, errorName, error) => (control) => {\n    error = error || `This control must have a value later then ${date?.value}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'laterThen']: error } : error;\n    return prepareToCompare(control?.value) > prepareToCompare(date?.value) ? null : errors;\n};\n/**\n* Compares the date values of the given FromControl / AbstractControl and\n* specified FromControl / AbstractControl\n*\n* @param {string}                    - name of the filed to compare against\n* @param {ComparisonOperations}      - comparison to preform\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const compareToValidator = (filedName, comparison, errorName, error) => (control) => {\n    const date = control.parent?.get(filedName)?.value;\n    error = error || `Value comparison with ${date?.value} failed.`;\n    const errors = typeof error === 'string' ? { [errorName || 'dateComparison']: error } : error;\n    return control.value && date && compareDates(control.value, date, comparison) ? null : errors;\n};\n/**\n* Returns a validation error if a condition is met\n*\n* @param {Function | boolean}        - conditional function or a boolean value\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const requiredWhenValidator = (conditional, errorName, error) => (control) => {\n    error = error || 'This control has a conditional set on it.';\n    const errors = typeof error === 'string' ? { [errorName || 'requiredWhen']: error } : error;\n    const outcome = typeof conditional === 'function' ? conditional() : conditional;\n    return !control.value || !outcome ? null : errors;\n};\n/**\n* Returns a validation error if a given FromControl / AbstractControl has no value\n* and specified FromControl / AbstractControl has it\n*\n* @param {string}                    - name of the FromControl / AbstractControl to link to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkToValidator = (linkTo, errorName, error) => (control) => {\n    error = error || `This control has a link to ${linkTo}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n    const linkedTo = control.parent?.get(linkTo);\n    return !control?.value && !!linkedTo?.value ? errors : null;\n};\n/**\n* Returns a validation error if a given FromControl / AbstractControl has a value\n* and specified FromControl / AbstractControl does not\n*\n* @param {string}                    - name of the FromControl / AbstractControl\n*                                      which a given FromControl / AbstractControl is linked to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkedToValidator = (linkedTo, errorName, error) => (control) => {\n    error = error || `This control is linked to ${linkedTo}.`;\n    const errors = typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n    const link = control.parent?.get(linkedTo);\n    return control?.value && !link?.value ? errors : null;\n};\n/**\n* Returns a validation error if a nether the given FromControl / AbstractControl nor\n* the specified FromControl / AbstractControl has values\n*\n* @param {AbstractControl}           - AbstractControl to preform the check against\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const etherOrValidator = (toCheck, errorName, error) => (control) => {\n    error = error || `Ether this control or ${toCheck} has to have value.`;\n    const errors = typeof error === 'string' ? { [errorName || 'etherOr']: error } : error;\n    const check = control.parent?.get(toCheck);\n    if (!control?.value && !check?.value) {\n        check.setErrors({\n            [errorName || 'etherOr']: error,\n        });\n        return errors;\n    }\n    else {\n        if (check) {\n            check.setErrors(null);\n        }\n        return null;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"ngx-validators.js","sourceRoot":"","sources":["../../../../projects/ngx-validator-pack/src/lib/ngx-validators.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,9,0],[7,0,9,7],[9,0,9,9],[21,0,9,21],[23,0,9,45],[39,0,9,61],[41,0,9,63],[47,0,9,69],[63,0,9,85],[64,0,9,86]],[[0,0,11,0]],[],[],[],[],[],[],[[3,0,18,3]],[[0,0,19,0],[6,0,19,6],[7,0,19,7],[13,0,19,13],[33,0,19,33],[36,0,20,2],[37,0,20,3],[43,0,20,17],[45,0,20,19],[54,0,20,37],[56,0,20,39],[61,0,20,72],[63,0,20,87],[65,0,20,89],[66,0,21,2],[67,0,21,3],[74,0,21,27],[76,0,21,54],[78,0,21,56]],[[4,0,22,4],[9,0,22,9],[12,0,22,12],[17,0,22,17],[21,0,22,21],[79,0,22,79],[80,0,22,79]],[[4,0,23,4],[10,0,23,10],[16,0,23,16],[19,0,24,8],[26,0,24,15],[31,0,24,20],[36,0,24,25],[44,0,24,33],[45,0,24,34],[46,0,24,35],[47,0,24,36],[49,0,24,38],[50,0,24,39],[59,0,24,48],[63,0,24,52],[80,0,24,69],[81,0,24,70],[83,0,24,72],[88,0,24,77],[90,0,24,79],[91,0,24,80],[92,0,24,81],[93,0,24,82],[98,0,24,87],[99,0,24,88]],[[4,0,26,4],[11,0,26,11],[12,0,26,12],[19,0,26,19],[20,0,26,20],[25,0,26,25],[29,0,26,29],[35,0,26,35],[36,0,26,36],[40,0,26,40],[41,0,26,41],[48,0,26,48],[49,0,26,49],[54,0,26,54],[55,0,26,55],[56,0,26,56],[57,0,26,57],[58,0,26,58],[62,0,26,62],[63,0,26,63],[64,0,26,64],[65,0,26,65],[71,0,26,71],[72,0,26,72]],[[0,0,27,2],[1,0,27,3],[2,0,27,4]],[[0,0,29,0]],[],[],[],[],[],[],[[3,0,36,3]],[[0,0,37,2],[6,0,37,8],[7,0,37,9],[13,0,37,15],[37,0,37,39],[40,0,38,2],[41,0,38,3],[47,0,38,17],[49,0,38,19],[58,0,38,37],[60,0,38,39],[65,0,38,72],[67,0,38,87],[69,0,38,89],[70,0,39,2],[71,0,39,3],[78,0,39,27],[80,0,39,54],[82,0,39,56]],[[4,0,40,4],[9,0,40,9],[12,0,40,12],[17,0,40,17],[21,0,40,21],[71,0,40,71],[72,0,40,71]],[[4,0,41,4],[10,0,41,10],[16,0,41,16],[19,0,42,8],[26,0,42,15],[31,0,42,20],[36,0,42,25],[44,0,42,33],[45,0,42,34],[46,0,42,35],[47,0,42,36],[49,0,42,38],[50,0,42,39],[59,0,42,48],[63,0,42,52],[80,0,42,69],[81,0,42,70],[83,0,42,72],[88,0,42,77],[90,0,42,79],[91,0,42,80],[92,0,42,81],[93,0,42,82],[98,0,42,87],[99,0,42,88]],[[4,0,44,4],[11,0,44,11],[12,0,44,12],[19,0,44,19],[20,0,44,20],[25,0,44,25],[29,0,44,29],[30,0,44,30],[36,0,44,36],[37,0,44,37],[41,0,44,41],[42,0,44,42],[49,0,44,49],[50,0,44,50],[55,0,44,55],[56,0,44,56],[57,0,44,57],[58,0,44,58],[59,0,44,59],[63,0,44,63],[64,0,44,64],[65,0,44,65],[66,0,44,66],[72,0,44,72],[73,0,44,73]],[[0,0,45,2],[1,0,45,3],[2,0,45,4]],[[0,0,47,0]],[],[],[],[],[],[],[],[[3,0,55,3]],[[0,0,56,0],[6,0,56,6],[7,0,56,7],[13,0,56,13],[33,0,56,33],[36,0,57,2],[37,0,57,3],[41,0,57,24],[43,0,57,26],[52,0,57,44],[54,0,57,46],[59,0,57,79],[61,0,57,94],[63,0,57,96],[64,0,58,2],[65,0,58,3],[72,0,58,27],[74,0,58,54],[76,0,58,56]],[[4,0,59,4],[9,0,59,9],[12,0,59,12],[17,0,59,17],[21,0,59,21],[68,0,59,68],[72,0,59,72],[74,0,59,74],[79,0,59,79],[82,0,59,82],[83,0,59,83]],[[4,0,60,4],[10,0,60,10],[16,0,60,16],[19,0,61,8],[26,0,61,15],[31,0,61,20],[36,0,61,25],[44,0,61,33],[45,0,61,34],[46,0,61,35],[47,0,61,36],[49,0,61,38],[50,0,61,39],[59,0,61,48],[63,0,61,52],[76,0,61,65],[77,0,61,66],[79,0,61,68],[84,0,61,73],[86,0,61,75],[87,0,61,76],[88,0,61,77],[89,0,61,78],[94,0,61,83],[95,0,61,84]],[[4,0,63,4],[11,0,63,11],[27,0,63,27],[28,0,63,28],[35,0,63,35],[37,0,63,37],[42,0,63,42],[43,0,63,43],[46,0,63,46],[62,0,63,62],[63,0,63,63],[67,0,63,67],[69,0,63,69],[74,0,63,74],[75,0,63,75],[76,0,63,76],[77,0,63,77],[78,0,63,78],[82,0,63,82],[83,0,63,83],[84,0,63,84],[85,0,63,85],[91,0,63,91],[92,0,63,92]],[[0,0,64,2],[1,0,64,3],[2,0,64,4]],[[0,0,66,0]],[],[],[],[],[],[],[],[[2,0,74,2]],[[0,0,75,0],[6,0,75,6],[7,0,75,7],[13,0,75,13],[31,0,75,31],[34,0,76,2],[35,0,76,3],[39,0,76,24],[41,0,76,26],[50,0,76,44],[52,0,76,46],[57,0,76,79],[59,0,76,94],[61,0,76,96],[62,0,77,2],[63,0,77,3],[70,0,77,27],[72,0,77,54],[74,0,77,56]],[[4,0,78,4],[9,0,78,9],[12,0,78,12],[17,0,78,17],[21,0,78,21],[66,0,78,66],[70,0,78,70],[72,0,78,72],[77,0,78,77],[80,0,78,80],[81,0,78,81]],[[4,0,79,4],[10,0,79,10],[16,0,79,16],[19,0,80,8],[26,0,80,15],[31,0,80,20],[36,0,80,25],[44,0,80,33],[45,0,80,34],[46,0,80,35],[47,0,80,36],[49,0,80,38],[50,0,80,39],[59,0,80,48],[63,0,80,52],[74,0,80,63],[75,0,80,64],[77,0,80,66],[82,0,80,71],[84,0,80,73],[85,0,80,74],[86,0,80,75],[87,0,80,76],[92,0,80,81],[93,0,80,82]],[[4,0,82,4],[11,0,82,11],[27,0,82,27],[28,0,82,28],[35,0,82,35],[37,0,82,37],[42,0,82,42],[43,0,82,43],[46,0,82,46],[62,0,82,62],[63,0,82,63],[67,0,82,67],[69,0,82,69],[74,0,82,74],[75,0,82,75],[76,0,82,76],[77,0,82,77],[78,0,82,78],[82,0,82,82],[83,0,82,83],[84,0,82,84],[85,0,82,85],[91,0,82,91],[92,0,82,92]],[[0,0,83,2],[1,0,83,3],[2,0,83,4]],[[0,0,85,0]],[],[],[],[],[],[],[],[],[[2,0,94,2]],[[0,0,95,0],[6,0,95,6],[7,0,95,7],[13,0,95,13],[31,0,95,31],[34,0,95,34],[35,0,96,2],[44,0,96,19],[46,0,97,2],[56,0,97,34],[58,0,98,2],[67,0,98,20],[69,0,99,2],[74,0,99,35],[76,0,99,50],[78,0,99,52],[79,0,100,2],[80,0,100,3],[87,0,100,27],[89,0,100,54],[91,0,100,56]],[[4,0,101,4],[10,0,101,10],[14,0,101,14],[17,0,101,17],[24,0,101,24],[25,0,101,25],[31,0,101,31],[33,0,101,33],[36,0,101,36],[37,0,101,37],[46,0,101,46],[47,0,101,47],[49,0,101,49],[54,0,101,54],[55,0,101,55]],[[4,0,102,4],[9,0,102,9],[12,0,102,12],[17,0,102,17],[21,0,102,21],[46,0,102,46],[50,0,102,50],[52,0,102,52],[57,0,102,57],[67,0,102,67],[68,0,102,68]],[[4,0,103,4],[10,0,103,10],[16,0,103,16],[19,0,104,8],[26,0,104,15],[31,0,104,20],[36,0,104,25],[44,0,104,33],[45,0,104,34],[46,0,104,35],[47,0,104,36],[49,0,104,38],[50,0,104,39],[59,0,104,48],[63,0,104,52],[79,0,104,68],[80,0,104,69],[82,0,104,71],[87,0,104,76],[89,0,104,78],[90,0,104,79],[91,0,104,80],[92,0,104,81],[97,0,104,86],[98,0,104,87]],[[4,0,105,4],[11,0,105,11],[18,0,105,18],[19,0,105,19],[24,0,105,24],[28,0,105,28],[32,0,105,32],[36,0,105,36],[48,0,105,48],[49,0,105,49],[56,0,105,56],[57,0,105,57],[62,0,105,62],[64,0,105,64],[68,0,105,68],[70,0,105,70],[80,0,105,80],[81,0,105,81],[82,0,105,82],[83,0,105,83],[84,0,105,84],[88,0,105,88],[89,0,105,89],[90,0,105,90],[91,0,105,91],[97,0,105,97],[98,0,105,98]],[[0,0,106,2],[1,0,106,3],[2,0,106,4]],[[0,0,108,0]],[],[],[],[],[],[],[[2,0,115,2]],[[0,0,116,0],[6,0,116,6],[7,0,116,7],[13,0,116,13],[34,0,116,34],[37,0,117,2],[38,0,118,4],[49,0,118,40],[51,0,119,4],[60,0,119,22],[62,0,120,4],[67,0,120,37],[69,0,121,17],[71,0,121,19],[72,0,122,2],[73,0,122,3],[80,0,122,27],[82,0,122,54],[84,0,122,56]],[[4,0,123,4],[9,0,123,9],[12,0,123,12],[17,0,123,17],[21,0,123,21],[64,0,123,64],[65,0,123,65]],[[4,0,124,4],[10,0,124,10],[16,0,124,16],[19,0,125,8],[26,0,125,15],[31,0,125,20],[36,0,125,25],[44,0,125,33],[45,0,125,34],[46,0,125,35],[47,0,125,36],[49,0,125,38],[50,0,125,39],[59,0,125,48],[63,0,125,52],[77,0,125,66],[78,0,125,67],[80,0,125,69],[85,0,125,74],[87,0,125,76],[88,0,125,77],[89,0,125,78],[90,0,125,79],[95,0,125,84],[96,0,125,85]],[[4,0,127,4],[10,0,127,10],[17,0,127,17],[20,0,128,6],[27,0,128,13],[38,0,128,24],[43,0,128,29],[53,0,128,39],[54,0,128,40],[55,0,128,41],[56,0,128,42],[67,0,128,53],[69,0,128,55],[70,0,128,56],[71,0,128,57],[72,0,128,58],[83,0,128,69],[84,0,128,70]],[[4,0,129,4],[11,0,129,11],[12,0,129,12],[19,0,129,19],[20,0,129,20],[25,0,129,25],[29,0,129,29],[30,0,129,30],[37,0,129,37],[38,0,129,38],[39,0,129,39],[40,0,129,40],[44,0,129,44],[45,0,129,45],[46,0,129,46],[47,0,129,47],[53,0,129,53],[54,0,129,54]],[[0,0,130,2],[1,0,130,3],[2,0,130,4]],[[0,0,132,0]],[],[],[],[],[],[],[],[[2,0,140,2]],[[0,0,141,0],[6,0,141,6],[7,0,141,7],[13,0,141,13],[28,0,141,28],[31,0,142,2],[32,0,142,3],[38,0,142,17],[40,0,142,19],[49,0,142,37],[51,0,142,39],[56,0,142,72],[58,0,142,87],[60,0,142,89],[61,0,143,2],[62,0,143,3],[69,0,143,27],[71,0,143,54],[73,0,143,56]],[[4,0,144,4],[9,0,144,9],[12,0,144,12],[17,0,144,17],[21,0,144,21],[51,0,144,51],[57,0,144,57],[60,0,144,60],[61,0,144,61]],[[4,0,145,4],[10,0,145,10],[16,0,145,16],[19,0,146,8],[26,0,146,15],[31,0,146,20],[36,0,146,25],[44,0,146,33],[45,0,146,34],[46,0,146,35],[47,0,146,36],[49,0,146,38],[50,0,146,39],[59,0,146,48],[63,0,146,52],[71,0,146,60],[72,0,146,61],[74,0,146,63],[79,0,146,68],[81,0,146,70],[82,0,146,71],[83,0,146,72],[84,0,146,73],[89,0,146,78],[90,0,146,79]],[[4,0,148,4],[10,0,148,10],[18,0,148,18],[21,0,148,21],[28,0,148,28],[29,0,148,29],[35,0,148,35],[37,0,148,37],[40,0,148,40],[41,0,148,41],[47,0,148,47],[48,0,148,48],[49,0,148,49]],[[4,0,149,4],[11,0,149,11],[12,0,149,12],[19,0,149,19],[21,0,149,21],[26,0,149,26],[30,0,149,30],[31,0,149,31],[32,0,149,32],[40,0,149,40],[42,0,149,42],[47,0,149,47],[48,0,149,48],[49,0,149,49],[50,0,149,50],[56,0,149,56],[57,0,149,57],[58,0,149,58],[59,0,149,59],[63,0,149,63],[64,0,149,64]],[[0,0,150,2],[1,0,150,3],[2,0,150,4]],[[0,0,152,0]],[],[],[],[],[],[],[],[],[[2,0,161,2]],[[0,0,162,0],[6,0,162,6],[7,0,162,7],[13,0,162,13],[30,0,162,30],[33,0,163,2],[34,0,163,3],[42,0,163,19],[44,0,163,21],[53,0,163,39],[55,0,163,41],[60,0,163,74],[62,0,163,89],[64,0,163,91],[65,0,164,2],[66,0,164,3],[73,0,164,27],[75,0,164,54],[77,0,164,56]],[[4,0,165,4],[9,0,165,9],[12,0,165,12],[17,0,165,17],[21,0,165,21],[50,0,165,50],[58,0,165,58],[61,0,165,61],[62,0,165,62]],[[4,0,166,4],[10,0,166,10],[16,0,166,16],[19,0,167,8],[26,0,167,15],[31,0,167,20],[36,0,167,25],[44,0,167,33],[45,0,167,34],[46,0,167,35],[47,0,167,36],[49,0,167,38],[50,0,167,39],[59,0,167,48],[63,0,167,52],[71,0,167,60],[72,0,167,61],[74,0,167,63],[79,0,167,68],[81,0,167,70],[82,0,167,71],[83,0,167,72],[84,0,167,73],[89,0,167,78],[90,0,167,79]],[[4,0,169,4],[10,0,169,10],[14,0,169,14],[17,0,169,17],[24,0,169,24],[25,0,169,25],[31,0,169,31],[33,0,169,33],[36,0,169,36],[37,0,169,37],[45,0,169,45],[46,0,169,46],[47,0,169,47]],[[4,0,170,4],[11,0,170,11],[18,0,170,18],[20,0,170,20],[25,0,170,25],[29,0,170,29],[30,0,170,30],[34,0,170,34],[36,0,170,36],[41,0,170,41],[42,0,170,42],[43,0,170,43],[44,0,170,44],[50,0,170,50],[51,0,170,51],[52,0,170,52],[53,0,170,53],[57,0,170,57],[58,0,170,58]],[[0,0,171,2],[1,0,171,3],[2,0,171,4]],[[0,0,174,0]],[],[],[],[],[],[],[],[[2,0,182,2]],[[0,0,183,0],[6,0,183,6],[7,0,183,7],[13,0,183,13],[29,0,183,29],[32,0,184,2],[33,0,184,3],[40,0,184,18],[42,0,184,20],[51,0,184,38],[53,0,184,40],[58,0,184,73],[60,0,184,88],[62,0,184,90],[63,0,185,2],[64,0,185,3],[71,0,185,27],[73,0,185,54],[75,0,185,56]],[[4,0,186,4],[9,0,186,9],[12,0,186,12],[17,0,186,17],[21,0,186,21],[46,0,186,46],[53,0,186,53],[74,0,186,74],[75,0,186,75]],[[4,0,187,4],[10,0,187,10],[16,0,187,16],[19,0,188,8],[26,0,188,15],[31,0,188,20],[36,0,188,25],[44,0,188,33],[45,0,188,34],[46,0,188,35],[47,0,188,36],[49,0,188,38],[50,0,188,39],[59,0,188,48],[63,0,188,52],[72,0,188,61],[73,0,188,62],[75,0,188,64],[80,0,188,69],[82,0,188,71],[83,0,188,72],[84,0,188,73],[85,0,188,74],[90,0,188,79],[91,0,188,80]],[[4,0,191,4],[10,0,191,10],[15,0,191,15],[18,0,191,18],[25,0,191,25],[26,0,191,26],[32,0,191,32],[34,0,191,34],[37,0,191,37],[38,0,191,38],[45,0,191,45],[46,0,191,65],[47,0,191,66]],[[4,0,192,4],[8,0,192,8],[9,0,192,9],[16,0,192,16],[18,0,192,18],[23,0,192,23],[27,0,192,27],[28,0,192,28],[33,0,192,33],[35,0,192,35],[40,0,192,40],[42,0,192,42],[43,0,192,43]],[[8,0,193,6],[13,0,193,11],[14,0,193,12],[23,0,193,21],[24,0,193,22]],[[12,0,194,8],[13,0,194,9],[22,0,194,18],[26,0,194,22],[35,0,194,31],[36,0,194,32],[38,0,194,34],[43,0,194,39]],[[9,0,195,7],[10,0,195,8],[11,0,195,9]],[[8,0,196,6],[15,0,196,13],[21,0,196,19],[22,0,196,20]],[[4,0,197,4],[5,0,197,5]],[[9,0,197,11],[10,0,197,12]],[[8,0,198,6],[12,0,198,10],[17,0,198,15],[19,0,198,17],[20,0,198,18]],[[12,0,199,8],[17,0,199,13],[18,0,199,14],[27,0,199,23],[28,0,199,24],[32,0,199,28],[33,0,199,29],[34,0,199,30]],[[8,0,200,6],[9,0,200,7]],[[8,0,201,6],[15,0,201,13],[19,0,201,17],[20,0,201,18]],[[4,0,202,4],[5,0,202,5]],[[0,0,203,2],[1,0,203,3],[2,0,203,4]]],"sourcesContent":["/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\n\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { compareDates, ComparisonOperations, prepareToCompare } from './helpers/date';\n\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n * \n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpMatchValidator =\n  (regexp: RegExp, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || 'This control did not matched a given regular expression.'\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n  \n    return !control.value || regexp.test(control.value) ? null : errors;\n  };\n\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n * \n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\n  export const regexpNotAMatchValidator =\n  (regexp: RegExp, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || 'This control matched a given regular expression.'\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'regexpValidator']: error } : error;\n  \n    return !control.value || !regexp.test(control.value) ? null : errors;\n  };\n\n/**\n * Checks if the date in the given FromControl / AbstractControl is earlier then \n * the value in the specified FromControl / AbstractControl\n * \n * @param {AbstractControl}           - AbstractControl to preform the check against \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const earlierThenValidator =\n  (date: AbstractControl, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `This control must have a value earlier then ${date?.value}.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'earlierThen']: error } : error;\n  \n    return prepareToCompare(control?.value) < prepareToCompare(date?.value) ? null : errors;\n  };\n\n/**\n* Checks if the date in the given FromControl / AbstractControl is greater then \n* the value in the specified FromControl / AbstractControl\n* \n* @param {AbstractControl}           - AbstractControl to preform the check against \n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const laterThenValidator =\n  (date: AbstractControl, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `This control must have a value later then ${date?.value}.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'laterThen']: error } : error;\n\n    return prepareToCompare(control?.value) > prepareToCompare(date?.value) ? null : errors;\n  };\n\n/**\n* Compares the date values of the given FromControl / AbstractControl and\n* specified FromControl / AbstractControl\n* \n* @param {string}                    - name of the filed to compare against \n* @param {ComparisonOperations}      - comparison to preform\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const compareToValidator = (\n  filedName: string, \n  comparison: ComparisonOperations, \n  errorName?: string, \n  error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    const date = control.parent?.get(filedName)?.value;\n    error = error || `Value comparison with ${date?.value} failed.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'dateComparison']: error } : error;  \n    return control.value && date && compareDates(control.value, date, comparison) ? null : errors;\n  };\n\n/**\n* Returns a validation error if a condition is met\n* \n* @param {Function | boolean}        - conditional function or a boolean value\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const requiredWhenValidator =\n  (\n    conditional: () => boolean | boolean,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || 'This control has a conditional set on it.';\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'requiredWhen']: error } : error;\n\n    const outcome =\n      typeof conditional === 'function' ? conditional() : conditional;\n    return !control.value || !outcome ? null : errors;\n  };\n\n/**\n* Returns a validation error if a given FromControl / AbstractControl has no value\n* and specified FromControl / AbstractControl has it\n* \n* @param {string}                    - name of the FromControl / AbstractControl to link to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkToValidator =\n  (linkTo: string, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `This control has a link to ${linkTo}.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n  \n    const linkedTo = control.parent?.get(linkTo);\n    return !control?.value && !!linkedTo?.value ? errors : null;\n  };\n\n/**\n* Returns a validation error if a given FromControl / AbstractControl has a value\n* and specified FromControl / AbstractControl does not\n* \n* @param {string}                    - name of the FromControl / AbstractControl \n*                                      which a given FromControl / AbstractControl is linked to\n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const linkedToValidator =\n  (linkedTo: string, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `This control is linked to ${linkedTo}.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'linkTo']: error } : error;\n   \n    const link = control.parent?.get(linkedTo);\n    return control?.value && !link?.value ? errors : null;\n  };\n\n\n/**\n* Returns a validation error if a nether the given FromControl / AbstractControl nor \n* the specified FromControl / AbstractControl has values\n* \n* @param {AbstractControl}           - AbstractControl to preform the check against \n* @param {string}                    - optional parameter representing error name\n* @param {ValidationErrors | string} - optional parameter representing error value\n* @returns {ValidationErrors | null} - Validation error\n*/\nexport const etherOrValidator =\n  (toCheck: string, errorName?: string, error?: ValidationErrors | string): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `Ether this control or ${toCheck} has to have value.`;\n    const errors: ValidationErrors = \n        typeof error === 'string' ? { [errorName || 'etherOr']: error } : error;\n  \n\n    const check = control.parent?.get(toCheck) as AbstractControl;\n    if (!control?.value && !check?.value) {\n      check.setErrors({\n        [errorName || 'etherOr']: error,\n      });\n      return errors;\n    } else {\n      if (check) {\n        check.setErrors(null);\n      }\n      return null;\n    }\n  };\n\n\n\n"]},"resolvedIds":{"./helpers/date":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/date.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":14388,"body":[{"type":"ExportNamedDeclaration","start":85,"end":176,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":92,"end":176,"kind":"const","declarations":[{"type":"VariableDeclarator","start":98,"end":175,"id":{"type":"Identifier","start":98,"end":105,"name":"address"},"init":{"type":"Literal","start":108,"end":175,"raw":"/^(\\d{1,}) [a-zA-Z0-9\\s]+(\\,)? [a-zA-Z]+(\\,)? [A-Z]{2} [0-9]{5,6}$/","regex":{"flags":"","pattern":"^(\\d{1,}) [a-zA-Z0-9\\s]+(\\,)? [a-zA-Z]+(\\,)? [A-Z]{2} [0-9]{5,6}$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":214,"end":296,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":221,"end":296,"kind":"const","declarations":[{"type":"VariableDeclarator","start":227,"end":295,"id":{"type":"Identifier","start":227,"end":241,"name":"dateYYYY_MM_DD"},"init":{"type":"Literal","start":244,"end":295,"raw":"/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/","regex":{"flags":"","pattern":"([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":391,"end":748,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":398,"end":748,"kind":"const","declarations":[{"type":"VariableDeclarator","start":404,"end":747,"id":{"type":"Identifier","start":404,"end":418,"name":"dateDD_MM_YYYY"},"init":{"type":"Literal","start":421,"end":747,"raw":"/^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/","regex":{"flags":"","pattern":"^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":780,"end":920,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":787,"end":920,"kind":"const","declarations":[{"type":"VariableDeclarator","start":793,"end":919,"id":{"type":"Identifier","start":793,"end":798,"name":"email"},"init":{"type":"Literal","start":801,"end":919,"raw":"/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i","regex":{"flags":"i","pattern":"^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":960,"end":1095,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":967,"end":1095,"kind":"const","declarations":[{"type":"VariableDeclarator","start":973,"end":1094,"id":{"type":"Identifier","start":973,"end":984,"name":"IPAddressV4"},"init":{"type":"Literal","start":987,"end":1094,"raw":"/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/","regex":{"flags":"","pattern":"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":1135,"end":1824,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1142,"end":1824,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1148,"end":1823,"id":{"type":"Identifier","start":1148,"end":1159,"name":"IPAddressV6"},"init":{"type":"Literal","start":1162,"end":1823,"raw":"/(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/","regex":{"flags":"","pattern":"(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":1872,"end":3106,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1879,"end":3106,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1885,"end":3105,"id":{"type":"Identifier","start":1885,"end":1901,"name":"IPAddressV4AndV6"},"init":{"type":"Literal","start":1904,"end":3105,"raw":"/((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/","regex":{"flags":"","pattern":"((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3154,"end":3195,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3161,"end":3195,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3167,"end":3194,"id":{"type":"Identifier","start":3167,"end":3178,"name":"lettersOnly"},"init":{"type":"Literal","start":3181,"end":3194,"raw":"/^[A-Za-z]+$/","regex":{"flags":"","pattern":"^[A-Za-z]+$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3268,"end":3332,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3275,"end":3332,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3281,"end":3331,"id":{"type":"Identifier","start":3281,"end":3311,"name":"lettersPeriodsHyphensAndSpaces"},"init":{"type":"Literal","start":3314,"end":3331,"raw":"/^[a-zA-Z\\s.-]+$/","regex":{"flags":"","pattern":"^[a-zA-Z\\s.-]+$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3384,"end":3427,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3391,"end":3427,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3397,"end":3426,"id":{"type":"Identifier","start":3397,"end":3406,"name":"noSpecial"},"init":{"type":"Literal","start":3409,"end":3426,"raw":"/^[A-Za-z0-9 ]+$/","regex":{"flags":"","pattern":"^[A-Za-z0-9 ]+$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3475,"end":3510,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3482,"end":3510,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3488,"end":3509,"id":{"type":"Identifier","start":3488,"end":3499,"name":"numbersOnly"},"init":{"type":"Literal","start":3502,"end":3509,"raw":"/^\\d+$/","regex":{"flags":"","pattern":"^\\d+$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3552,"end":3610,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3559,"end":3610,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3565,"end":3609,"id":{"type":"Identifier","start":3565,"end":3573,"name":"passport"},"init":{"type":"Literal","start":3576,"end":3609,"raw":"/^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$/","regex":{"flags":"","pattern":"^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3763,"end":3892,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3770,"end":3892,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3776,"end":3891,"id":{"type":"Identifier","start":3776,"end":3792,"name":"passwordStrength"},"init":{"type":"Literal","start":3795,"end":3891,"raw":"/(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/","regex":{"flags":"","pattern":"(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3937,"end":4015,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3944,"end":4015,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3950,"end":4014,"id":{"type":"Identifier","start":3950,"end":3961,"name":"phoneNumber"},"init":{"type":"Literal","start":3964,"end":4014,"raw":"/^(\\()?[2-9]{1}\\d{2}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/","regex":{"flags":"","pattern":"^(\\()?[2-9]{1}\\d{2}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4055,"end":4089,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4062,"end":4089,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4068,"end":4088,"id":{"type":"Identifier","start":4068,"end":4079,"name":"singleSpace"},"init":{"type":"Literal","start":4082,"end":4088,"raw":"/[\\s]/","regex":{"flags":"","pattern":"[\\s]"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4160,"end":4213,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4167,"end":4213,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4173,"end":4212,"id":{"type":"Identifier","start":4173,"end":4189,"name":"spaceRestriction"},"init":{"type":"Literal","start":4192,"end":4212,"raw":"/^\\S$|^\\S[\\s\\S]*\\S$/","regex":{"flags":"","pattern":"^\\S$|^\\S[\\s\\S]*\\S$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4272,"end":4526,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4279,"end":4526,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4285,"end":4525,"id":{"type":"Identifier","start":4285,"end":4288,"name":"ssn"},"init":{"type":"Literal","start":4291,"end":4525,"raw":"/^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$/","regex":{"flags":"","pattern":"^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4591,"end":4667,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4598,"end":4667,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4604,"end":4666,"id":{"type":"Identifier","start":4604,"end":4616,"name":"timeHH_MM_12"},"init":{"type":"Literal","start":4619,"end":4666,"raw":"/((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))/","regex":{"flags":"","pattern":"((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4732,"end":4804,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4739,"end":4804,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4745,"end":4803,"id":{"type":"Identifier","start":4745,"end":4757,"name":"timeHH_MM_24"},"init":{"type":"Literal","start":4760,"end":4803,"raw":"/^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/","regex":{"flags":"","pattern":"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4848,"end":4930,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4855,"end":4930,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4861,"end":4929,"id":{"type":"Identifier","start":4861,"end":4876,"name":"timeHH_MM_SS_24"},"init":{"type":"Literal","start":4879,"end":4929,"raw":"/(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)/","regex":{"flags":"","pattern":"(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4959,"end":5066,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4966,"end":5066,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4972,"end":5065,"id":{"type":"Identifier","start":4972,"end":4975,"name":"url"},"init":{"type":"Literal","start":4978,"end":5065,"raw":"/(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/","regex":{"flags":"","pattern":"(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":5122,"end":5173,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":5129,"end":5173,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5135,"end":5172,"id":{"type":"Identifier","start":5135,"end":5142,"name":"zipCode"},"init":{"type":"Literal","start":5145,"end":5172,"raw":"/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/","regex":{"flags":"","pattern":"(^\\d{5}$)|(^\\d{5}-\\d{4}$)"},"value":{}}}]}}],"_rollupRemoved":[{"end":14388,"start":5174,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"// Checks id an input in a format of Street number Street Name, City, State ZIP code\nexport const address = /^(\\d{1,}) [a-zA-Z0-9\\s]+(\\,)? [a-zA-Z]+(\\,)? [A-Z]{2} [0-9]{5,6}$/;\n// Checks for date format YYYY-MM-dd\nexport const dateYYYY_MM_DD = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n// Checks for date format  dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY\n// with check for leap year\nexport const dateDD_MM_YYYY = /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\n// Checks if input is an email\nexport const email = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n// Checks if input is in a IPv4 format\nexport const IPAddressV4 = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n// Checks if input is in a IPv6 format\nexport const IPAddressV6 = /(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/;\n// Checks if input is in a IPv4 or IPv6 format\nexport const IPAddressV4AndV6 = /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/;\n// Checks if an input consists of letters only\nexport const lettersOnly = /^[A-Za-z]+$/;\n// Checks if the input consists of letters, periods, hyphens and spaces\nexport const lettersPeriodsHyphensAndSpaces = /^[a-zA-Z\\s.-]+$/;\n// Checks if input contains any special characters\nexport const noSpecial = /^[A-Za-z0-9 ]+$/;\n// Checks if an input consists of numbers only\nexport const numbersOnly = /^\\d+$/;\n// Checks if input is in passport format\nexport const passport = /^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$/;\n// Checks if input consist of at least 1 lowercase letter, 1 uppercase letter,\n// 1 number, 1 special character and has length of at least 8 characters\nexport const passwordStrength = /(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/;\n// Checks for a (000) 000 0000 phone format\nexport const phoneNumber = /^(\\()?[2-9]{1}\\d{2}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/;\n// Checks for a single space character\nexport const singleSpace = /[\\s]/;\n// Restrict only spaces, spaces at the beginning and end of the field\nexport const spaceRestriction = /^\\S$|^\\S[\\s\\S]*\\S$/;\n// Checks if input is in an Social Security Number format\nexport const ssn = /^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$/;\n// Checks for Time Format HH:MM 12-hour with optional leading 0\nexport const timeHH_MM_12 = /((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))/;\n// Checks for Time Format HH:MM 24-hour with optional leading 0\nexport const timeHH_MM_24 = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;\n// Checks for Time Format HH:MM:SS 24-hour\nexport const timeHH_MM_SS_24 = /(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)/;\n// Checks if input is a url\nexport const url = /(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/;\n// Checks of a zip code in formats 00000 or 00000-0000\nexport const zipCode = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":[],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/constant/regex.mjs","meta":{},"moduleSideEffects":false,"originalCode":"// Checks id an input in a format of Street number Street Name, City, State ZIP code\nexport const address = /^(\\d{1,}) [a-zA-Z0-9\\s]+(\\,)? [a-zA-Z]+(\\,)? [A-Z]{2} [0-9]{5,6}$/;\n// Checks for date format YYYY-MM-dd\nexport const dateYYYY_MM_DD = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n// Checks for date format  dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY\n// with check for leap year\nexport const dateDD_MM_YYYY = /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\n// Checks if input is an email\nexport const email = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n// Checks if input is in a IPv4 format\nexport const IPAddressV4 = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n// Checks if input is in a IPv6 format\nexport const IPAddressV6 = /(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/;\n// Checks if input is in a IPv4 or IPv6 format\nexport const IPAddressV4AndV6 = /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/;\n// Checks if an input consists of letters only\nexport const lettersOnly = /^[A-Za-z]+$/;\n// Checks if the input consists of letters, periods, hyphens and spaces\nexport const lettersPeriodsHyphensAndSpaces = /^[a-zA-Z\\s.-]+$/;\n// Checks if input contains any special characters\nexport const noSpecial = /^[A-Za-z0-9 ]+$/;\n// Checks if an input consists of numbers only\nexport const numbersOnly = /^\\d+$/;\n// Checks if input is in passport format\nexport const passport = /^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$/;\n// Checks if input consist of at least 1 lowercase letter, 1 uppercase letter,\n// 1 number, 1 special character and has length of at least 8 characters\nexport const passwordStrength = /(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/;\n// Checks for a (000) 000 0000 phone format\nexport const phoneNumber = /^(\\()?[2-9]{1}\\d{2}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/;\n// Checks for a single space character\nexport const singleSpace = /[\\s]/;\n// Restrict only spaces, spaces at the beginning and end of the field\nexport const spaceRestriction = /^\\S$|^\\S[\\s\\S]*\\S$/;\n// Checks if input is in an Social Security Number format\nexport const ssn = /^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$/;\n// Checks for Time Format HH:MM 12-hour with optional leading 0\nexport const timeHH_MM_12 = /((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))/;\n// Checks for Time Format HH:MM 24-hour with optional leading 0\nexport const timeHH_MM_24 = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;\n// Checks for Time Format HH:MM:SS 24-hour\nexport const timeHH_MM_SS_24 = /(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)/;\n// Checks if input is a url\nexport const url = /(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/;\n// Checks of a zip code in formats 00000 or 00000-0000\nexport const zipCode = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"regex.js","sourceRoot":"","sources":["../../../../../projects/ngx-validator-pack/src/lib/constant/regex.ts"],"names":[],"mappings":[[[0,0,0,0],[84,0,0,84]],[[0,0,1,0],[6,0,1,6],[7,0,1,7],[13,0,1,13],[20,0,1,20],[23,0,1,23],[90,0,1,90],[91,0,1,91]],[[0,0,2,0],[36,0,2,36]],[[0,0,3,0],[6,0,3,6],[7,0,3,7],[13,0,3,13],[27,0,3,27],[30,0,4,2],[81,0,4,53],[82,0,4,54]],[[0,0,5,0],[65,0,5,65]],[[0,0,6,0],[27,0,6,27]],[[0,0,7,0],[6,0,7,6],[7,0,7,7],[13,0,7,13],[27,0,7,27],[30,0,8,2],[356,0,8,328],[357,0,8,329]],[[0,0,9,0],[30,0,9,30]],[[0,0,10,0],[6,0,10,6],[7,0,10,7],[13,0,10,13],[18,0,10,18],[21,0,11,2],[139,0,11,120],[140,0,11,121]],[[0,0,12,0],[38,0,12,38]],[[0,0,13,0],[6,0,13,6],[7,0,13,7],[13,0,13,13],[24,0,13,24],[27,0,14,2],[134,0,14,109],[135,0,14,110]],[[0,0,15,0],[38,0,15,38]],[[0,0,16,0],[6,0,16,6],[7,0,16,7],[13,0,16,13],[24,0,16,24],[27,0,17,2],[688,0,17,663],[689,0,17,664]],[[0,0,18,0],[46,0,18,46]],[[0,0,19,0],[6,0,19,6],[7,0,19,7],[13,0,19,13],[29,0,19,29],[32,0,20,2],[1233,0,20,1203],[1234,0,20,1204]],[[0,0,21,0],[46,0,21,46]],[[0,0,22,0],[6,0,22,6],[7,0,22,7],[13,0,22,13],[24,0,22,24],[27,0,22,27],[40,0,22,40],[41,0,22,41]],[[0,0,23,0],[71,0,23,71]],[[0,0,24,0],[6,0,24,6],[7,0,24,7],[13,0,24,13],[43,0,24,43],[46,0,24,46],[63,0,24,63],[64,0,24,64]],[[0,0,25,0],[50,0,25,50]],[[0,0,26,0],[6,0,26,6],[7,0,26,7],[13,0,26,13],[22,0,26,22],[25,0,26,25],[42,0,26,42],[43,0,26,43]],[[0,0,27,0],[46,0,27,46]],[[0,0,28,0],[6,0,28,6],[7,0,28,7],[13,0,28,13],[24,0,28,24],[27,0,28,27],[34,0,28,34],[35,0,28,35]],[[0,0,29,0],[40,0,29,40]],[[0,0,30,0],[6,0,30,6],[7,0,30,7],[13,0,30,13],[21,0,30,21],[24,0,30,24],[57,0,30,57],[58,0,30,58]],[[0,0,31,0],[78,0,31,78]],[[0,0,32,0],[72,0,32,72]],[[0,0,33,0],[6,0,33,6],[7,0,33,7],[13,0,33,13],[29,0,33,29],[32,0,34,2],[128,0,34,98],[129,0,34,99]],[[0,0,35,0],[43,0,35,43]],[[0,0,36,0],[6,0,36,6],[7,0,36,7],[13,0,36,13],[24,0,36,24],[27,0,36,27],[77,0,36,77],[78,0,36,78]],[[0,0,37,0],[38,0,37,38]],[[0,0,38,0],[6,0,38,6],[7,0,38,7],[13,0,38,13],[24,0,38,24],[27,0,38,27],[33,0,38,33],[34,0,38,34]],[[0,0,39,0],[69,0,39,69]],[[0,0,40,0],[6,0,40,6],[7,0,40,7],[13,0,40,13],[29,0,40,29],[32,0,40,32],[52,0,40,52],[53,0,40,53]],[[0,0,41,0],[57,0,41,57]],[[0,0,42,0],[6,0,42,6],[7,0,42,7],[13,0,42,13],[16,0,42,16],[19,0,43,2],[253,0,43,236],[254,0,43,237]],[[0,0,44,0],[63,0,44,63]],[[0,0,45,0],[6,0,45,6],[7,0,45,7],[13,0,45,13],[25,0,45,25],[28,0,45,28],[75,0,45,75],[76,0,45,76]],[[0,0,46,0],[63,0,46,63]],[[0,0,47,0],[6,0,47,6],[7,0,47,7],[13,0,47,13],[25,0,47,25],[28,0,47,28],[71,0,47,71],[72,0,47,72]],[[0,0,48,0],[42,0,48,42]],[[0,0,49,0],[6,0,49,6],[7,0,49,7],[13,0,49,13],[28,0,49,28],[31,0,50,2],[81,0,50,52],[82,0,50,53]],[[0,0,51,0],[27,0,51,27]],[[0,0,52,0],[6,0,52,6],[7,0,52,7],[13,0,52,13],[16,0,52,16],[19,0,53,2],[106,0,53,89],[107,0,53,90]],[[0,0,54,0],[54,0,54,54]],[[0,0,55,0],[6,0,55,6],[7,0,55,7],[13,0,55,13],[20,0,55,20],[23,0,55,23],[50,0,55,50],[51,0,55,51]]],"sourcesContent":["// Checks id an input in a format of Street number Street Name, City, State ZIP code\nexport const address = /^(\\d{1,}) [a-zA-Z0-9\\s]+(\\,)? [a-zA-Z]+(\\,)? [A-Z]{2} [0-9]{5,6}$/;\n// Checks for date format YYYY-MM-dd\nexport const dateYYYY_MM_DD =\n  /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n// Checks for date format  dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY\n// with check for leap year\nexport const dateDD_MM_YYYY =\n  /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\n// Checks if input is an email\nexport const email =\n  /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n// Checks if input is in a IPv4 format\nexport const IPAddressV4 =\n  /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n// Checks if input is in a IPv6 format\nexport const IPAddressV6 =\n  /(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/;\n// Checks if input is in a IPv4 or IPv6 format\nexport const IPAddressV4AndV6 =\n  /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/;\n// Checks if an input consists of letters only\nexport const lettersOnly = /^[A-Za-z]+$/;\n// Checks if the input consists of letters, periods, hyphens and spaces\nexport const lettersPeriodsHyphensAndSpaces = /^[a-zA-Z\\s.-]+$/;\n// Checks if input contains any special characters\nexport const noSpecial = /^[A-Za-z0-9 ]+$/;\n// Checks if an input consists of numbers only\nexport const numbersOnly = /^\\d+$/;\n// Checks if input is in passport format\nexport const passport = /^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$/;\n// Checks if input consist of at least 1 lowercase letter, 1 uppercase letter,\n// 1 number, 1 special character and has length of at least 8 characters\nexport const passwordStrength =\n  /(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/;\n// Checks for a (000) 000 0000 phone format\nexport const phoneNumber = /^(\\()?[2-9]{1}\\d{2}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/;\n// Checks for a single space character\nexport const singleSpace = /[\\s]/;\n// Restrict only spaces, spaces at the beginning and end of the field\nexport const spaceRestriction = /^\\S$|^\\S[\\s\\S]*\\S$/;\n// Checks if input is in an Social Security Number format\nexport const ssn =\n  /^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$/;\n// Checks for Time Format HH:MM 12-hour with optional leading 0\nexport const timeHH_MM_12 = /((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))/;\n// Checks for Time Format HH:MM 24-hour with optional leading 0\nexport const timeHH_MM_24 = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;\n// Checks for Time Format HH:MM:SS 24-hour\nexport const timeHH_MM_SS_24 =\n  /(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)/;\n// Checks if input is a url\nexport const url =\n  /(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/;\n// Checks of a zip code in formats 00000 or 00000-0000\nexport const zipCode = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":34289,"body":[{"type":"ImportDeclaration","start":192,"end":275,"specifiers":[{"type":"ImportSpecifier","start":201,"end":221,"imported":{"type":"Identifier","start":201,"end":221,"name":"regexpMatchValidator"},"local":{"type":"Identifier","start":201,"end":221,"name":"regexpMatchValidator"}},{"type":"ImportSpecifier","start":223,"end":247,"imported":{"type":"Identifier","start":223,"end":247,"name":"regexpNotAMatchValidator"},"local":{"type":"Identifier","start":223,"end":247,"name":"regexpNotAMatchValidator"}}],"source":{"type":"Literal","start":256,"end":274,"value":"./ngx-validators","raw":"\"./ngx-validators\""},"attributes":[]},{"type":"ImportDeclaration","start":276,"end":576,"specifiers":[{"type":"ImportSpecifier","start":285,"end":292,"imported":{"type":"Identifier","start":285,"end":292,"name":"address"},"local":{"type":"Identifier","start":285,"end":292,"name":"address"}},{"type":"ImportSpecifier","start":294,"end":308,"imported":{"type":"Identifier","start":294,"end":308,"name":"dateDD_MM_YYYY"},"local":{"type":"Identifier","start":294,"end":308,"name":"dateDD_MM_YYYY"}},{"type":"ImportSpecifier","start":310,"end":324,"imported":{"type":"Identifier","start":310,"end":324,"name":"dateYYYY_MM_DD"},"local":{"type":"Identifier","start":310,"end":324,"name":"dateYYYY_MM_DD"}},{"type":"ImportSpecifier","start":326,"end":331,"imported":{"type":"Identifier","start":326,"end":331,"name":"email"},"local":{"type":"Identifier","start":326,"end":331,"name":"email"}},{"type":"ImportSpecifier","start":333,"end":344,"imported":{"type":"Identifier","start":333,"end":344,"name":"IPAddressV4"},"local":{"type":"Identifier","start":333,"end":344,"name":"IPAddressV4"}},{"type":"ImportSpecifier","start":346,"end":362,"imported":{"type":"Identifier","start":346,"end":362,"name":"IPAddressV4AndV6"},"local":{"type":"Identifier","start":346,"end":362,"name":"IPAddressV4AndV6"}},{"type":"ImportSpecifier","start":364,"end":375,"imported":{"type":"Identifier","start":364,"end":375,"name":"IPAddressV6"},"local":{"type":"Identifier","start":364,"end":375,"name":"IPAddressV6"}},{"type":"ImportSpecifier","start":377,"end":388,"imported":{"type":"Identifier","start":377,"end":388,"name":"lettersOnly"},"local":{"type":"Identifier","start":377,"end":388,"name":"lettersOnly"}},{"type":"ImportSpecifier","start":390,"end":399,"imported":{"type":"Identifier","start":390,"end":399,"name":"noSpecial"},"local":{"type":"Identifier","start":390,"end":399,"name":"noSpecial"}},{"type":"ImportSpecifier","start":401,"end":412,"imported":{"type":"Identifier","start":401,"end":412,"name":"numbersOnly"},"local":{"type":"Identifier","start":401,"end":412,"name":"numbersOnly"}},{"type":"ImportSpecifier","start":414,"end":422,"imported":{"type":"Identifier","start":414,"end":422,"name":"passport"},"local":{"type":"Identifier","start":414,"end":422,"name":"passport"}},{"type":"ImportSpecifier","start":424,"end":440,"imported":{"type":"Identifier","start":424,"end":440,"name":"passwordStrength"},"local":{"type":"Identifier","start":424,"end":440,"name":"passwordStrength"}},{"type":"ImportSpecifier","start":442,"end":453,"imported":{"type":"Identifier","start":442,"end":453,"name":"phoneNumber"},"local":{"type":"Identifier","start":442,"end":453,"name":"phoneNumber"}},{"type":"ImportSpecifier","start":455,"end":466,"imported":{"type":"Identifier","start":455,"end":466,"name":"singleSpace"},"local":{"type":"Identifier","start":455,"end":466,"name":"singleSpace"}},{"type":"ImportSpecifier","start":468,"end":484,"imported":{"type":"Identifier","start":468,"end":484,"name":"spaceRestriction"},"local":{"type":"Identifier","start":468,"end":484,"name":"spaceRestriction"}},{"type":"ImportSpecifier","start":486,"end":489,"imported":{"type":"Identifier","start":486,"end":489,"name":"ssn"},"local":{"type":"Identifier","start":486,"end":489,"name":"ssn"}},{"type":"ImportSpecifier","start":491,"end":503,"imported":{"type":"Identifier","start":491,"end":503,"name":"timeHH_MM_12"},"local":{"type":"Identifier","start":491,"end":503,"name":"timeHH_MM_12"}},{"type":"ImportSpecifier","start":505,"end":517,"imported":{"type":"Identifier","start":505,"end":517,"name":"timeHH_MM_24"},"local":{"type":"Identifier","start":505,"end":517,"name":"timeHH_MM_24"}},{"type":"ImportSpecifier","start":519,"end":534,"imported":{"type":"Identifier","start":519,"end":534,"name":"timeHH_MM_SS_24"},"local":{"type":"Identifier","start":519,"end":534,"name":"timeHH_MM_SS_24"}},{"type":"ImportSpecifier","start":536,"end":539,"imported":{"type":"Identifier","start":536,"end":539,"name":"url"},"local":{"type":"Identifier","start":536,"end":539,"name":"url"}},{"type":"ImportSpecifier","start":541,"end":548,"imported":{"type":"Identifier","start":541,"end":548,"name":"zipCode"},"local":{"type":"Identifier","start":541,"end":548,"name":"zipCode"}}],"source":{"type":"Literal","start":557,"end":575,"value":"./constant/regex","raw":"\"./constant/regex\""},"attributes":[]},{"type":"ExportNamedDeclaration","start":1010,"end":1201,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1017,"end":1201,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1023,"end":1200,"id":{"type":"Identifier","start":1023,"end":1039,"name":"addressValidator"},"init":{"type":"ArrowFunctionExpression","start":1042,"end":1200,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":1043,"end":1141,"left":{"type":"Identifier","start":1043,"end":1052,"name":"errorName"},"right":{"type":"Literal","start":1055,"end":1141,"value":"Please input a value in a format of: Street number Street Name, City, State ZIP code","raw":"'Please input a value in a format of: Street number Street Name, City, State ZIP code'"}},{"type":"Identifier","start":1143,"end":1148,"name":"error"}],"body":{"type":"CallExpression","start":1153,"end":1200,"optional":false,"callee":{"type":"Identifier","start":1153,"end":1173,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":1174,"end":1181,"name":"address"},{"type":"Identifier","start":1183,"end":1192,"name":"errorName"},{"type":"Identifier","start":1194,"end":1199,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":1544,"end":1699,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1551,"end":1699,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1557,"end":1698,"id":{"type":"Identifier","start":1557,"end":1578,"name":"alphabetOnlyValidator"},"init":{"type":"ArrowFunctionExpression","start":1581,"end":1698,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":1582,"end":1635,"left":{"type":"Identifier","start":1582,"end":1591,"name":"errorName"},"right":{"type":"Literal","start":1594,"end":1635,"value":"Only alphabetic characters are allowed.","raw":"'Only alphabetic characters are allowed.'"}},{"type":"Identifier","start":1637,"end":1642,"name":"error"}],"body":{"type":"CallExpression","start":1647,"end":1698,"optional":false,"callee":{"type":"Identifier","start":1647,"end":1667,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":1668,"end":1679,"name":"lettersOnly"},{"type":"Identifier","start":1681,"end":1690,"name":"errorName"},{"type":"Identifier","start":1692,"end":1697,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":2076,"end":2287,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":2083,"end":2287,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2089,"end":2286,"id":{"type":"Identifier","start":2089,"end":2112,"name":"dateDD_MM_YYYYValidator"},"init":{"type":"ArrowFunctionExpression","start":2115,"end":2286,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":2116,"end":2220,"left":{"type":"Identifier","start":2116,"end":2125,"name":"errorName"},"right":{"type":"Literal","start":2128,"end":2220,"value":"Please input a value one of the following formats: dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY.","raw":"\"Please input a value one of the following formats: dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY.\""}},{"type":"Identifier","start":2222,"end":2227,"name":"error"}],"body":{"type":"CallExpression","start":2232,"end":2286,"optional":false,"callee":{"type":"Identifier","start":2232,"end":2252,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":2253,"end":2267,"name":"dateDD_MM_YYYY"},{"type":"Identifier","start":2269,"end":2278,"name":"errorName"},{"type":"Identifier","start":2280,"end":2285,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":2628,"end":2794,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":2635,"end":2794,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2641,"end":2793,"id":{"type":"Identifier","start":2641,"end":2664,"name":"dateYYYY_MM_DDValidator"},"init":{"type":"ArrowFunctionExpression","start":2667,"end":2793,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":2668,"end":2727,"left":{"type":"Identifier","start":2668,"end":2677,"name":"errorName"},"right":{"type":"Literal","start":2680,"end":2727,"value":"Please input a value in a format: YYYY-MM-dd.","raw":"'Please input a value in a format: YYYY-MM-dd.'"}},{"type":"Identifier","start":2729,"end":2734,"name":"error"}],"body":{"type":"CallExpression","start":2739,"end":2793,"optional":false,"callee":{"type":"Identifier","start":2739,"end":2759,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":2760,"end":2774,"name":"dateYYYY_MM_DD"},{"type":"Identifier","start":2776,"end":2785,"name":"errorName"},{"type":"Identifier","start":2787,"end":2792,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":3146,"end":3304,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3153,"end":3304,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3159,"end":3303,"id":{"type":"Identifier","start":3159,"end":3173,"name":"emailValidator"},"init":{"type":"ArrowFunctionExpression","start":3176,"end":3303,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":3177,"end":3246,"left":{"type":"Identifier","start":3177,"end":3186,"name":"errorName"},"right":{"type":"Literal","start":3189,"end":3246,"value":"Please input a value in a format: local-part@domain.com","raw":"'Please input a value in a format: local-part@domain.com'"}},{"type":"Identifier","start":3248,"end":3253,"name":"error"}],"body":{"type":"CallExpression","start":3258,"end":3303,"optional":false,"callee":{"type":"Identifier","start":3258,"end":3278,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":3279,"end":3284,"name":"email"},{"type":"Identifier","start":3286,"end":3295,"name":"errorName"},{"type":"Identifier","start":3297,"end":3302,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":3671,"end":3866,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3678,"end":3866,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3684,"end":3865,"id":{"type":"Identifier","start":3684,"end":3702,"name":"ipAddressValidator"},"init":{"type":"ArrowFunctionExpression","start":3705,"end":3865,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":3706,"end":3797,"left":{"type":"Identifier","start":3706,"end":3715,"name":"errorName"},"right":{"type":"Literal","start":3718,"end":3797,"value":"Please input a value one of the following formats: x.x.x.x or y:y:y:y:y:y:y:y","raw":"'Please input a value one of the following formats: x.x.x.x or y:y:y:y:y:y:y:y'"}},{"type":"Identifier","start":3799,"end":3804,"name":"error"}],"body":{"type":"CallExpression","start":3809,"end":3865,"optional":false,"callee":{"type":"Identifier","start":3809,"end":3829,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":3830,"end":3846,"name":"IPAddressV4AndV6"},{"type":"Identifier","start":3848,"end":3857,"name":"errorName"},{"type":"Identifier","start":3859,"end":3864,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":4204,"end":4353,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4211,"end":4353,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4217,"end":4352,"id":{"type":"Identifier","start":4217,"end":4230,"name":"iPv4Validator"},"init":{"type":"ArrowFunctionExpression","start":4233,"end":4352,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":4234,"end":4289,"left":{"type":"Identifier","start":4234,"end":4243,"name":"errorName"},"right":{"type":"Literal","start":4246,"end":4289,"value":"Please input a value in a format: x.x.x.x","raw":"'Please input a value in a format: x.x.x.x'"}},{"type":"Identifier","start":4291,"end":4296,"name":"error"}],"body":{"type":"CallExpression","start":4301,"end":4352,"optional":false,"callee":{"type":"Identifier","start":4301,"end":4321,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":4322,"end":4333,"name":"IPAddressV4"},{"type":"Identifier","start":4335,"end":4344,"name":"errorName"},{"type":"Identifier","start":4346,"end":4351,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":4699,"end":4856,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4706,"end":4856,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4712,"end":4855,"id":{"type":"Identifier","start":4712,"end":4725,"name":"iPv6Validator"},"init":{"type":"ArrowFunctionExpression","start":4728,"end":4855,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":4729,"end":4792,"left":{"type":"Identifier","start":4729,"end":4738,"name":"errorName"},"right":{"type":"Literal","start":4741,"end":4792,"value":"Please input a value in a format: y:y:y:y:y:y:y:y","raw":"'Please input a value in a format: y:y:y:y:y:y:y:y'"}},{"type":"Identifier","start":4794,"end":4799,"name":"error"}],"body":{"type":"CallExpression","start":4804,"end":4855,"optional":false,"callee":{"type":"Identifier","start":4804,"end":4824,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":4825,"end":4836,"name":"IPAddressV6"},{"type":"Identifier","start":4838,"end":4847,"name":"errorName"},{"type":"Identifier","start":4849,"end":4854,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":5196,"end":5348,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":5203,"end":5348,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5209,"end":5347,"id":{"type":"Identifier","start":5209,"end":5230,"name":"numericsOnlyValidator"},"init":{"type":"ArrowFunctionExpression","start":5233,"end":5347,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":5234,"end":5284,"left":{"type":"Identifier","start":5234,"end":5243,"name":"errorName"},"right":{"type":"Literal","start":5246,"end":5284,"value":"Only numeric characters are allowed.","raw":"'Only numeric characters are allowed.'"}},{"type":"Identifier","start":5286,"end":5291,"name":"error"}],"body":{"type":"CallExpression","start":5296,"end":5347,"optional":false,"callee":{"type":"Identifier","start":5296,"end":5316,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":5317,"end":5328,"name":"numbersOnly"},{"type":"Identifier","start":5330,"end":5339,"name":"errorName"},{"type":"Identifier","start":5341,"end":5346,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":5676,"end":5822,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":5683,"end":5822,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5689,"end":5821,"id":{"type":"Identifier","start":5689,"end":5708,"name":"noSpecialsValidator"},"init":{"type":"ArrowFunctionExpression","start":5711,"end":5821,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":5712,"end":5760,"left":{"type":"Identifier","start":5712,"end":5721,"name":"errorName"},"right":{"type":"Literal","start":5724,"end":5760,"value":"No special characters are allowed.","raw":"'No special characters are allowed.'"}},{"type":"Identifier","start":5762,"end":5767,"name":"error"}],"body":{"type":"CallExpression","start":5772,"end":5821,"optional":false,"callee":{"type":"Identifier","start":5772,"end":5792,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":5793,"end":5802,"name":"noSpecial"},{"type":"Identifier","start":5804,"end":5813,"name":"errorName"},{"type":"Identifier","start":5815,"end":5820,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":6153,"end":6288,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":6160,"end":6288,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6166,"end":6287,"id":{"type":"Identifier","start":6166,"end":6183,"name":"passportValidator"},"init":{"type":"ArrowFunctionExpression","start":6186,"end":6287,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":6187,"end":6227,"left":{"type":"Identifier","start":6187,"end":6196,"name":"errorName"},"right":{"type":"Literal","start":6199,"end":6227,"value":"Incorrect passport format.","raw":"'Incorrect passport format.'"}},{"type":"Identifier","start":6229,"end":6234,"name":"error"}],"body":{"type":"CallExpression","start":6239,"end":6287,"optional":false,"callee":{"type":"Identifier","start":6239,"end":6259,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":6260,"end":6268,"name":"passport"},{"type":"Identifier","start":6270,"end":6279,"name":"errorName"},{"type":"Identifier","start":6281,"end":6286,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":6751,"end":6984,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":6758,"end":6984,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6764,"end":6983,"id":{"type":"Identifier","start":6764,"end":6781,"name":"passwordValidator"},"init":{"type":"ArrowFunctionExpression","start":6784,"end":6983,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":6785,"end":6915,"left":{"type":"Identifier","start":6785,"end":6794,"name":"errorName"},"right":{"type":"Literal","start":6797,"end":6915,"value":"The value has to contain at least 1 lowercase letter, 1 uppercase letter, 1 special character and has a length of 8.","raw":"'The value has to contain at least 1 lowercase letter, 1 uppercase letter, 1 special character and has a length of 8.'"}},{"type":"Identifier","start":6917,"end":6922,"name":"error"}],"body":{"type":"CallExpression","start":6927,"end":6983,"optional":false,"callee":{"type":"Identifier","start":6927,"end":6947,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":6948,"end":6964,"name":"passwordStrength"},{"type":"Identifier","start":6966,"end":6975,"name":"errorName"},{"type":"Identifier","start":6977,"end":6982,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":7329,"end":7493,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7336,"end":7493,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7342,"end":7492,"id":{"type":"Identifier","start":7342,"end":7362,"name":"phoneNumberValidator"},"init":{"type":"ArrowFunctionExpression","start":7365,"end":7492,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":7366,"end":7429,"left":{"type":"Identifier","start":7366,"end":7375,"name":"errorName"},"right":{"type":"Literal","start":7378,"end":7429,"value":"Please input a value in a format: (000) 000 0000.","raw":"'Please input a value in a format: (000) 000 0000.'"}},{"type":"Identifier","start":7431,"end":7436,"name":"error"}],"body":{"type":"CallExpression","start":7441,"end":7492,"optional":false,"callee":{"type":"Identifier","start":7441,"end":7461,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":7462,"end":7473,"name":"phoneNumber"},{"type":"Identifier","start":7475,"end":7484,"name":"errorName"},{"type":"Identifier","start":7486,"end":7491,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":7834,"end":7993,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7841,"end":7993,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7847,"end":7992,"id":{"type":"Identifier","start":7847,"end":7867,"name":"singleSpaceValidator"},"init":{"type":"ArrowFunctionExpression","start":7870,"end":7992,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":7871,"end":7925,"left":{"type":"Identifier","start":7871,"end":7880,"name":"errorName"},"right":{"type":"Literal","start":7883,"end":7925,"value":"A single space character is not allowed.","raw":"'A single space character is not allowed.'"}},{"type":"Identifier","start":7927,"end":7932,"name":"error"}],"body":{"type":"CallExpression","start":7937,"end":7992,"optional":false,"callee":{"type":"Identifier","start":7937,"end":7961,"name":"regexpNotAMatchValidator"},"arguments":[{"type":"Identifier","start":7962,"end":7973,"name":"singleSpace"},{"type":"Identifier","start":7975,"end":7984,"name":"errorName"},{"type":"Identifier","start":7986,"end":7991,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":8335,"end":8514,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":8342,"end":8514,"kind":"const","declarations":[{"type":"VariableDeclarator","start":8348,"end":8513,"id":{"type":"Identifier","start":8348,"end":8373,"name":"spaceRestrictionValidator"},"init":{"type":"ArrowFunctionExpression","start":8376,"end":8513,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":8377,"end":8441,"left":{"type":"Identifier","start":8377,"end":8386,"name":"errorName"},"right":{"type":"Literal","start":8389,"end":8441,"value":"Value can not start or end with a space character.","raw":"'Value can not start or end with a space character.'"}},{"type":"Identifier","start":8443,"end":8448,"name":"error"}],"body":{"type":"CallExpression","start":8453,"end":8513,"optional":false,"callee":{"type":"Identifier","start":8453,"end":8477,"name":"regexpNotAMatchValidator"},"arguments":[{"type":"Identifier","start":8478,"end":8494,"name":"spaceRestriction"},{"type":"Identifier","start":8496,"end":8505,"name":"errorName"},{"type":"Identifier","start":8507,"end":8512,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":8881,"end":9058,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":8888,"end":9058,"kind":"const","declarations":[{"type":"VariableDeclarator","start":8894,"end":9057,"id":{"type":"Identifier","start":8894,"end":8906,"name":"ssnValidator"},"init":{"type":"ArrowFunctionExpression","start":8909,"end":9057,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":8910,"end":9002,"left":{"type":"Identifier","start":8910,"end":8919,"name":"errorName"},"right":{"type":"Literal","start":8922,"end":9002,"value":"Please input a value one of the following formats: AAA-GGG-SSSS or AAAGGGSSSS.","raw":"'Please input a value one of the following formats: AAA-GGG-SSSS or AAAGGGSSSS.'"}},{"type":"Identifier","start":9004,"end":9009,"name":"error"}],"body":{"type":"CallExpression","start":9014,"end":9057,"optional":false,"callee":{"type":"Identifier","start":9014,"end":9034,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":9035,"end":9038,"name":"ssn"},{"type":"Identifier","start":9040,"end":9049,"name":"errorName"},{"type":"Identifier","start":9051,"end":9056,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":9420,"end":9584,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":9427,"end":9584,"kind":"const","declarations":[{"type":"VariableDeclarator","start":9433,"end":9583,"id":{"type":"Identifier","start":9433,"end":9454,"name":"timeHH_MM_12Validator"},"init":{"type":"ArrowFunctionExpression","start":9457,"end":9583,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":9458,"end":9519,"left":{"type":"Identifier","start":9458,"end":9467,"name":"errorName"},"right":{"type":"Literal","start":9470,"end":9519,"value":"Please input a value in a HH:MM 12-hour format.","raw":"'Please input a value in a HH:MM 12-hour format.'"}},{"type":"Identifier","start":9521,"end":9526,"name":"error"}],"body":{"type":"CallExpression","start":9531,"end":9583,"optional":false,"callee":{"type":"Identifier","start":9531,"end":9551,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":9552,"end":9564,"name":"timeHH_MM_12"},{"type":"Identifier","start":9566,"end":9575,"name":"errorName"},{"type":"Identifier","start":9577,"end":9582,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":9946,"end":10110,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":9953,"end":10110,"kind":"const","declarations":[{"type":"VariableDeclarator","start":9959,"end":10109,"id":{"type":"Identifier","start":9959,"end":9980,"name":"timeHH_MM_24Validator"},"init":{"type":"ArrowFunctionExpression","start":9983,"end":10109,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":9984,"end":10045,"left":{"type":"Identifier","start":9984,"end":9993,"name":"errorName"},"right":{"type":"Literal","start":9996,"end":10045,"value":"Please input a value in a HH:MM 24-hour format.","raw":"'Please input a value in a HH:MM 24-hour format.'"}},{"type":"Identifier","start":10047,"end":10052,"name":"error"}],"body":{"type":"CallExpression","start":10057,"end":10109,"optional":false,"callee":{"type":"Identifier","start":10057,"end":10077,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":10078,"end":10090,"name":"timeHH_MM_24"},{"type":"Identifier","start":10092,"end":10101,"name":"errorName"},{"type":"Identifier","start":10103,"end":10108,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":10451,"end":10624,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":10458,"end":10624,"kind":"const","declarations":[{"type":"VariableDeclarator","start":10464,"end":10623,"id":{"type":"Identifier","start":10464,"end":10488,"name":"timeHH_MM_SS_24Validator"},"init":{"type":"ArrowFunctionExpression","start":10491,"end":10623,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":10492,"end":10556,"left":{"type":"Identifier","start":10492,"end":10501,"name":"errorName"},"right":{"type":"Literal","start":10504,"end":10556,"value":"Please input a value in a HH:MM:SS 24-hour format.","raw":"'Please input a value in a HH:MM:SS 24-hour format.'"}},{"type":"Identifier","start":10558,"end":10563,"name":"error"}],"body":{"type":"CallExpression","start":10568,"end":10623,"optional":false,"callee":{"type":"Identifier","start":10568,"end":10588,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":10589,"end":10604,"name":"timeHH_MM_SS_24"},{"type":"Identifier","start":10606,"end":10615,"name":"errorName"},{"type":"Identifier","start":10617,"end":10622,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":10955,"end":11074,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":10962,"end":11074,"kind":"const","declarations":[{"type":"VariableDeclarator","start":10968,"end":11073,"id":{"type":"Identifier","start":10968,"end":10980,"name":"urlValidator"},"init":{"type":"ArrowFunctionExpression","start":10983,"end":11073,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":10984,"end":11018,"left":{"type":"Identifier","start":10984,"end":10993,"name":"errorName"},"right":{"type":"Literal","start":10996,"end":11018,"value":"Improper URL format.","raw":"'Improper URL format.'"}},{"type":"Identifier","start":11020,"end":11025,"name":"error"}],"body":{"type":"CallExpression","start":11030,"end":11073,"optional":false,"callee":{"type":"Identifier","start":11030,"end":11050,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":11051,"end":11054,"name":"url"},{"type":"Identifier","start":11056,"end":11065,"name":"errorName"},{"type":"Identifier","start":11067,"end":11072,"name":"error"}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":11434,"end":11566,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":11441,"end":11566,"kind":"const","declarations":[{"type":"VariableDeclarator","start":11447,"end":11565,"id":{"type":"Identifier","start":11447,"end":11463,"name":"zipCodeValidator"},"init":{"type":"ArrowFunctionExpression","start":11466,"end":11565,"async":false,"expression":true,"generator":false,"params":[{"type":"AssignmentPattern","start":11467,"end":11506,"left":{"type":"Identifier","start":11467,"end":11476,"name":"errorName"},"right":{"type":"Literal","start":11479,"end":11506,"value":"Improper zip code format.","raw":"'Improper zip code format.'"}},{"type":"Identifier","start":11508,"end":11513,"name":"error"}],"body":{"type":"CallExpression","start":11518,"end":11565,"optional":false,"callee":{"type":"Identifier","start":11518,"end":11538,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":11539,"end":11546,"name":"zipCode"},{"type":"Identifier","start":11548,"end":11557,"name":"errorName"},{"type":"Identifier","start":11559,"end":11564,"name":"error"}]},"id":null}}]}}],"_rollupRemoved":[{"end":34289,"start":11567,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { regexpMatchValidator, regexpNotAMatchValidator, } from \"./ngx-validators\";\nimport { address, dateDD_MM_YYYY, dateYYYY_MM_DD, email, IPAddressV4, IPAddressV4AndV6, IPAddressV6, lettersOnly, noSpecial, numbersOnly, passport, passwordStrength, phoneNumber, singleSpace, spaceRestriction, ssn, timeHH_MM_12, timeHH_MM_24, timeHH_MM_SS_24, url, zipCode, } from \"./constant/regex\";\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper address format\n * (Street number Street Name, City, State ZIP code)\n * Example: 3344 W Alameda Avenue, Lakewood, CO 80222\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const addressValidator = (errorName = 'Please input a value in a format of: Street number Street Name, City, State ZIP code', error) => regexpMatchValidator(address, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only\n * alphabetic characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const alphabetOnlyValidator = (errorName = 'Only alphabetic characters are allowed.', error) => regexpMatchValidator(lettersOnly, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: dd-MM-YYYY, dd.MM.YYYY or dd/MM/YYYY.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateDD_MM_YYYYValidator = (errorName = \"Please input a value one of the following formats: dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY.\", error) => regexpMatchValidator(dateDD_MM_YYYY, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * YYYY-MM-dd.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateYYYY_MM_DDValidator = (errorName = 'Please input a value in a format: YYYY-MM-dd.', error) => regexpMatchValidator(dateYYYY_MM_DD, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * local-part@domain.com.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const emailValidator = (errorName = 'Please input a value in a format: local-part@domain.com', error) => regexpMatchValidator(email, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: x.x.x.x or y:y:y:y:y:y:y:y.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ipAddressValidator = (errorName = 'Please input a value one of the following formats: x.x.x.x or y:y:y:y:y:y:y:y', error) => regexpMatchValidator(IPAddressV4AndV6, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * x.x.x.x.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv4Validator = (errorName = 'Please input a value in a format: x.x.x.x', error) => regexpMatchValidator(IPAddressV4, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * y:y:y:y:y:y:y:y.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv6Validator = (errorName = 'Please input a value in a format: y:y:y:y:y:y:y:y', error) => regexpMatchValidator(IPAddressV6, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only\n * numeric characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const numericsOnlyValidator = (errorName = 'Only numeric characters are allowed.', error) => regexpMatchValidator(numbersOnly, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl has any special characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const noSpecialsValidator = (errorName = 'No special characters are allowed.', error) => regexpMatchValidator(noSpecial, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper passport format\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passportValidator = (errorName = 'Incorrect passport format.', error) => regexpMatchValidator(passport, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a strong password format\n * (Has at least 1 lowercase letter, 1 uppercase letter, 1 number, 1 special character and has\n * length of at least 8 characters).\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passwordValidator = (errorName = 'The value has to contain at least 1 lowercase letter, 1 uppercase letter, 1 special character and has a length of 8.', error) => regexpMatchValidator(passwordStrength, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * (000) 000 0000.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const phoneNumberValidator = (errorName = 'Please input a value in a format: (000) 000 0000.', error) => regexpMatchValidator(phoneNumber, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of a single space\n * character.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const singleSpaceValidator = (errorName = 'A single space character is not allowed.', error) => regexpNotAMatchValidator(singleSpace, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl starts or ends with a\n * space character.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const spaceRestrictionValidator = (errorName = 'Value can not start or end with a space character.', error) => regexpNotAMatchValidator(spaceRestriction, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: AAA-GGG-SSSS or AAAGGGSSSS.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ssnValidator = (errorName = 'Please input a value one of the following formats: AAA-GGG-SSSS or AAAGGGSSSS.', error) => regexpMatchValidator(ssn, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM 12-hour with optional leading 0.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_12Validator = (errorName = 'Please input a value in a HH:MM 12-hour format.', error) => regexpMatchValidator(timeHH_MM_12, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM 24-hour with optional leading 0.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_24Validator = (errorName = 'Please input a value in a HH:MM 24-hour format.', error) => regexpMatchValidator(timeHH_MM_24, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM:SS 24-hour.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_SS_24Validator = (errorName = 'Please input a value in a HH:MM:SS 24-hour format.', error) => regexpMatchValidator(timeHH_MM_SS_24, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * correct url format.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const urlValidator = (errorName = 'Improper URL format.', error) => regexpMatchValidator(url, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: 00000 or 00000-0000.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const zipCodeValidator = (errorName = 'Improper zip code format.', error) => regexpMatchValidator(zipCode, errorName, error);\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/constant/regex.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-prebuilt-validators.mjs","meta":{},"moduleSideEffects":false,"originalCode":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { regexpMatchValidator, regexpNotAMatchValidator, } from \"./ngx-validators\";\nimport { address, dateDD_MM_YYYY, dateYYYY_MM_DD, email, IPAddressV4, IPAddressV4AndV6, IPAddressV6, lettersOnly, noSpecial, numbersOnly, passport, passwordStrength, phoneNumber, singleSpace, spaceRestriction, ssn, timeHH_MM_12, timeHH_MM_24, timeHH_MM_SS_24, url, zipCode, } from \"./constant/regex\";\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper address format\n * (Street number Street Name, City, State ZIP code)\n * Example: 3344 W Alameda Avenue, Lakewood, CO 80222\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const addressValidator = (errorName = 'Please input a value in a format of: Street number Street Name, City, State ZIP code', error) => regexpMatchValidator(address, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only\n * alphabetic characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const alphabetOnlyValidator = (errorName = 'Only alphabetic characters are allowed.', error) => regexpMatchValidator(lettersOnly, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: dd-MM-YYYY, dd.MM.YYYY or dd/MM/YYYY.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateDD_MM_YYYYValidator = (errorName = \"Please input a value one of the following formats: dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY.\", error) => regexpMatchValidator(dateDD_MM_YYYY, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * YYYY-MM-dd.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateYYYY_MM_DDValidator = (errorName = 'Please input a value in a format: YYYY-MM-dd.', error) => regexpMatchValidator(dateYYYY_MM_DD, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * local-part@domain.com.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const emailValidator = (errorName = 'Please input a value in a format: local-part@domain.com', error) => regexpMatchValidator(email, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: x.x.x.x or y:y:y:y:y:y:y:y.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ipAddressValidator = (errorName = 'Please input a value one of the following formats: x.x.x.x or y:y:y:y:y:y:y:y', error) => regexpMatchValidator(IPAddressV4AndV6, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * x.x.x.x.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv4Validator = (errorName = 'Please input a value in a format: x.x.x.x', error) => regexpMatchValidator(IPAddressV4, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * y:y:y:y:y:y:y:y.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv6Validator = (errorName = 'Please input a value in a format: y:y:y:y:y:y:y:y', error) => regexpMatchValidator(IPAddressV6, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only\n * numeric characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const numericsOnlyValidator = (errorName = 'Only numeric characters are allowed.', error) => regexpMatchValidator(numbersOnly, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl has any special characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const noSpecialsValidator = (errorName = 'No special characters are allowed.', error) => regexpMatchValidator(noSpecial, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper passport format\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passportValidator = (errorName = 'Incorrect passport format.', error) => regexpMatchValidator(passport, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a strong password format\n * (Has at least 1 lowercase letter, 1 uppercase letter, 1 number, 1 special character and has\n * length of at least 8 characters).\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passwordValidator = (errorName = 'The value has to contain at least 1 lowercase letter, 1 uppercase letter, 1 special character and has a length of 8.', error) => regexpMatchValidator(passwordStrength, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * (000) 000 0000.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const phoneNumberValidator = (errorName = 'Please input a value in a format: (000) 000 0000.', error) => regexpMatchValidator(phoneNumber, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of a single space\n * character.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const singleSpaceValidator = (errorName = 'A single space character is not allowed.', error) => regexpNotAMatchValidator(singleSpace, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl starts or ends with a\n * space character.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const spaceRestrictionValidator = (errorName = 'Value can not start or end with a space character.', error) => regexpNotAMatchValidator(spaceRestriction, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: AAA-GGG-SSSS or AAAGGGSSSS.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ssnValidator = (errorName = 'Please input a value one of the following formats: AAA-GGG-SSSS or AAAGGGSSSS.', error) => regexpMatchValidator(ssn, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM 12-hour with optional leading 0.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_12Validator = (errorName = 'Please input a value in a HH:MM 12-hour format.', error) => regexpMatchValidator(timeHH_MM_12, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM 24-hour with optional leading 0.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_24Validator = (errorName = 'Please input a value in a HH:MM 24-hour format.', error) => regexpMatchValidator(timeHH_MM_24, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM:SS 24-hour.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_SS_24Validator = (errorName = 'Please input a value in a HH:MM:SS 24-hour format.', error) => regexpMatchValidator(timeHH_MM_SS_24, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * correct url format.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const urlValidator = (errorName = 'Improper URL format.', error) => regexpMatchValidator(url, errorName, error);\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: 00000 or 00000-0000.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const zipCodeValidator = (errorName = 'Improper zip code format.', error) => regexpMatchValidator(zipCode, errorName, error);\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"ngx-prebuilt-validators.js","sourceRoot":"","sources":["../../../../projects/ngx-validator-pack/src/lib/ngx-prebuilt-validators.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,9,0],[7,0,9,7],[9,0,10,2],[29,0,10,22],[31,0,11,2],[55,0,11,26],[58,0,12,1],[64,0,12,7],[82,0,12,25],[83,0,12,26]],[[0,0,13,0],[7,0,13,7],[9,0,14,2],[16,0,14,9],[18,0,15,2],[32,0,15,16],[34,0,16,2],[48,0,16,16],[50,0,17,2],[55,0,17,7],[57,0,18,2],[68,0,18,13],[70,0,19,2],[86,0,19,18],[88,0,20,2],[99,0,20,13],[101,0,21,2],[112,0,21,13],[114,0,22,2],[123,0,22,11],[125,0,23,2],[136,0,23,13],[138,0,24,2],[146,0,24,10],[148,0,25,2],[164,0,25,18],[166,0,26,2],[177,0,26,13],[179,0,27,2],[190,0,27,13],[192,0,28,2],[208,0,28,18],[210,0,29,2],[213,0,29,5],[215,0,30,2],[227,0,30,14],[229,0,31,2],[241,0,31,14],[243,0,32,2],[258,0,32,17],[260,0,33,2],[263,0,33,5],[265,0,34,2],[272,0,34,9],[275,0,35,1],[281,0,35,7],[299,0,35,25],[300,0,35,26]],[[0,0,37,0]],[],[],[],[],[],[],[[3,0,44,3]],[[0,0,45,0],[6,0,45,6],[7,0,45,7],[13,0,45,13],[29,0,45,29],[32,0,45,32],[33,0,46,2],[45,0,46,22],[131,0,46,108],[133,0,47,2],[138,0,47,35],[140,0,48,27],[142,0,48,29],[143,0,48,30],[163,0,48,50],[164,0,48,51],[171,0,48,58],[173,0,48,60],[182,0,48,69],[184,0,48,71],[189,0,48,76],[190,0,48,77],[191,0,48,78]],[[0,0,50,0]],[],[],[],[],[],[],[[3,0,57,3]],[[0,0,58,0],[6,0,58,6],[7,0,58,7],[13,0,58,13],[34,0,58,34],[37,0,58,37],[38,0,59,2],[50,0,59,22],[91,0,59,63],[93,0,60,2],[98,0,60,35],[100,0,61,27],[102,0,61,29],[103,0,62,2],[123,0,62,22],[124,0,62,23],[135,0,62,34],[137,0,62,36],[146,0,62,45],[148,0,62,47],[153,0,62,52],[154,0,62,53],[155,0,62,54]],[[0,0,64,0]],[],[],[],[],[],[],[[3,0,71,3]],[[0,0,72,0],[6,0,72,6],[7,0,72,7],[13,0,72,13],[36,0,72,36],[39,0,72,39],[40,0,73,2],[52,0,74,2],[144,0,74,94],[146,0,75,2],[151,0,75,35],[153,0,76,27],[155,0,76,29],[156,0,77,2],[176,0,77,22],[177,0,77,23],[191,0,77,37],[193,0,77,39],[202,0,77,48],[204,0,77,50],[209,0,77,55],[210,0,77,56],[211,0,77,57]],[[0,0,79,0]],[],[],[],[],[],[],[[3,0,86,3]],[[0,0,87,0],[6,0,87,6],[7,0,87,7],[13,0,87,13],[36,0,87,36],[39,0,87,39],[40,0,88,2],[52,0,88,22],[99,0,88,69],[101,0,89,2],[106,0,89,35],[108,0,90,27],[110,0,90,29],[111,0,91,2],[131,0,91,22],[132,0,91,23],[146,0,91,37],[148,0,91,39],[157,0,91,48],[159,0,91,50],[164,0,91,55],[165,0,91,56],[166,0,91,57]],[[0,0,93,0]],[],[],[],[],[],[],[[3,0,100,3]],[[0,0,101,0],[6,0,101,6],[7,0,101,7],[13,0,101,13],[27,0,101,27],[30,0,101,30],[31,0,102,2],[43,0,102,22],[100,0,102,79],[102,0,103,2],[107,0,103,35],[109,0,104,27],[111,0,104,29],[112,0,104,30],[132,0,104,50],[133,0,104,51],[138,0,104,56],[140,0,104,58],[149,0,104,67],[151,0,104,69],[156,0,104,74],[157,0,104,75],[158,0,104,76]],[[0,0,106,0]],[],[],[],[],[],[],[[3,0,113,3]],[[0,0,114,0],[6,0,114,6],[7,0,114,7],[13,0,114,13],[31,0,114,31],[34,0,114,34],[35,0,115,2],[47,0,115,22],[126,0,115,101],[128,0,116,2],[133,0,116,35],[135,0,117,27],[137,0,117,29],[138,0,118,2],[158,0,118,22],[159,0,118,23],[175,0,118,39],[177,0,118,41],[186,0,118,50],[188,0,118,52],[193,0,118,57],[194,0,118,58],[195,0,118,59]],[[0,0,120,0]],[],[],[],[],[],[],[[3,0,127,3]],[[0,0,128,0],[6,0,128,6],[7,0,128,7],[13,0,128,13],[26,0,128,26],[29,0,128,29],[30,0,129,2],[42,0,129,22],[85,0,129,65],[87,0,130,2],[92,0,130,35],[94,0,131,27],[96,0,131,29],[97,0,132,2],[117,0,132,22],[118,0,132,23],[129,0,132,34],[131,0,132,36],[140,0,132,45],[142,0,132,47],[147,0,132,52],[148,0,132,53],[149,0,132,54]],[[0,0,134,0]],[],[],[],[],[],[],[[3,0,141,3]],[[0,0,142,0],[6,0,142,6],[7,0,142,7],[13,0,142,13],[26,0,142,26],[29,0,142,29],[30,0,143,2],[42,0,143,22],[93,0,143,73],[95,0,144,2],[100,0,144,35],[102,0,145,27],[104,0,145,29],[105,0,146,2],[125,0,146,22],[126,0,146,23],[137,0,146,34],[139,0,146,36],[148,0,146,45],[150,0,146,47],[155,0,146,52],[156,0,146,53],[157,0,146,54]],[[0,0,148,0]],[],[],[],[],[],[],[[3,0,155,3]],[[0,0,156,0],[6,0,156,6],[7,0,156,7],[13,0,156,13],[34,0,156,34],[37,0,156,37],[38,0,157,2],[50,0,157,22],[88,0,157,60],[90,0,158,2],[95,0,158,35],[97,0,159,27],[99,0,159,29],[100,0,160,2],[120,0,160,22],[121,0,160,23],[132,0,160,34],[134,0,160,36],[143,0,160,45],[145,0,160,47],[150,0,160,52],[151,0,160,53],[152,0,160,54]],[[0,0,162,0]],[],[],[],[],[],[[3,0,168,3]],[[0,0,169,0],[6,0,169,6],[7,0,169,7],[13,0,169,13],[32,0,169,32],[35,0,169,35],[36,0,170,2],[48,0,170,22],[84,0,170,58],[86,0,171,2],[91,0,171,35],[93,0,172,27],[95,0,172,29],[96,0,172,30],[116,0,172,50],[117,0,172,51],[126,0,172,60],[128,0,172,62],[137,0,172,71],[139,0,172,73],[144,0,172,78],[145,0,172,79],[146,0,172,80]],[[0,0,174,0]],[],[],[],[],[],[[3,0,180,3]],[[0,0,181,0],[6,0,181,6],[7,0,181,7],[13,0,181,13],[30,0,181,30],[33,0,181,33],[34,0,182,2],[46,0,182,22],[74,0,182,50],[76,0,183,2],[81,0,183,35],[83,0,184,27],[85,0,184,29],[86,0,184,30],[106,0,184,50],[107,0,184,51],[115,0,184,59],[117,0,184,61],[126,0,184,70],[128,0,184,72],[133,0,184,77],[134,0,184,78],[135,0,184,79]],[[0,0,186,0]],[],[],[],[],[],[],[],[[3,0,194,3]],[[0,0,195,0],[6,0,195,6],[7,0,195,7],[13,0,195,13],[30,0,195,30],[33,0,195,33],[34,0,196,2],[46,0,196,22],[164,0,196,140],[166,0,197,2],[171,0,197,35],[173,0,198,27],[175,0,198,29],[176,0,199,2],[196,0,199,22],[197,0,199,23],[213,0,199,39],[215,0,199,41],[224,0,199,50],[226,0,199,52],[231,0,199,57],[232,0,199,58],[233,0,199,59]],[[0,0,201,0]],[],[],[],[],[],[],[[3,0,208,3]],[[0,0,209,0],[6,0,209,6],[7,0,209,7],[13,0,209,13],[33,0,209,33],[36,0,209,36],[37,0,210,2],[49,0,210,22],[100,0,210,73],[102,0,211,2],[107,0,211,35],[109,0,212,27],[111,0,212,29],[112,0,213,2],[132,0,213,22],[133,0,213,23],[144,0,213,34],[146,0,213,36],[155,0,213,45],[157,0,213,47],[162,0,213,52],[163,0,213,53],[164,0,213,54]],[[0,0,215,0]],[],[],[],[],[],[],[[3,0,222,3]],[[0,0,223,0],[6,0,223,6],[7,0,223,7],[13,0,223,13],[33,0,223,33],[36,0,223,36],[37,0,224,2],[49,0,224,22],[91,0,224,64],[93,0,225,2],[98,0,225,35],[100,0,226,27],[102,0,226,29],[103,0,227,2],[127,0,227,26],[128,0,227,27],[139,0,227,38],[141,0,227,40],[150,0,227,49],[152,0,227,51],[157,0,227,56],[158,0,227,57],[159,0,227,58]],[[0,0,229,0]],[],[],[],[],[],[],[[3,0,236,3]],[[0,0,237,0],[6,0,237,6],[7,0,237,7],[13,0,237,13],[38,0,237,38],[41,0,237,41],[42,0,238,2],[54,0,238,22],[106,0,238,74],[108,0,239,2],[113,0,239,35],[115,0,240,27],[117,0,240,29],[118,0,241,2],[142,0,241,26],[143,0,241,27],[159,0,241,43],[161,0,241,45],[170,0,241,54],[172,0,241,56],[177,0,241,61],[178,0,241,62],[179,0,241,63]],[[0,0,243,0]],[],[],[],[],[],[],[[3,0,250,3]],[[0,0,251,0],[6,0,251,6],[7,0,251,7],[13,0,251,13],[25,0,251,25],[28,0,251,28],[29,0,252,2],[41,0,252,22],[121,0,252,102],[123,0,253,2],[128,0,253,35],[130,0,254,27],[132,0,254,29],[133,0,254,30],[153,0,254,50],[154,0,254,51],[157,0,254,54],[159,0,254,56],[168,0,254,65],[170,0,254,67],[175,0,254,72],[176,0,254,73],[177,0,254,74]],[[0,0,256,0]],[],[],[],[],[],[],[[3,0,263,3]],[[0,0,264,0],[6,0,264,6],[7,0,264,7],[13,0,264,13],[34,0,264,34],[37,0,264,37],[38,0,265,2],[50,0,265,22],[99,0,265,71],[101,0,266,2],[106,0,266,35],[108,0,267,27],[110,0,267,29],[111,0,268,2],[131,0,268,22],[132,0,268,23],[144,0,268,35],[146,0,268,37],[155,0,268,46],[157,0,268,48],[162,0,268,53],[163,0,268,54],[164,0,268,55]],[[0,0,270,0]],[],[],[],[],[],[],[[3,0,277,3]],[[0,0,278,0],[6,0,278,6],[7,0,278,7],[13,0,278,13],[34,0,278,34],[37,0,278,37],[38,0,279,2],[50,0,279,22],[99,0,279,71],[101,0,280,2],[106,0,280,35],[108,0,281,27],[110,0,281,29],[111,0,282,2],[131,0,282,22],[132,0,282,23],[144,0,282,35],[146,0,282,37],[155,0,282,46],[157,0,282,48],[162,0,282,53],[163,0,282,54],[164,0,282,55]],[[0,0,284,0]],[],[],[],[],[],[],[[3,0,291,3]],[[0,0,292,0],[6,0,292,6],[7,0,292,7],[13,0,292,13],[37,0,292,37],[40,0,292,40],[41,0,293,2],[53,0,293,22],[105,0,293,74],[107,0,294,2],[112,0,294,35],[114,0,295,27],[116,0,295,29],[117,0,296,2],[137,0,296,22],[138,0,296,23],[153,0,296,38],[155,0,296,40],[164,0,296,49],[166,0,296,51],[171,0,296,56],[172,0,296,57],[173,0,296,58]],[[0,0,298,0]],[],[],[],[],[],[],[[3,0,305,3]],[[0,0,306,0],[6,0,306,6],[7,0,306,7],[13,0,306,13],[25,0,306,25],[28,0,306,28],[29,0,307,2],[41,0,307,22],[63,0,307,44],[65,0,308,2],[70,0,308,35],[72,0,309,27],[74,0,309,29],[75,0,309,30],[95,0,309,50],[96,0,309,51],[99,0,309,54],[101,0,309,56],[110,0,309,65],[112,0,309,67],[117,0,309,72],[118,0,309,73],[119,0,309,74]],[[0,0,311,0]],[],[],[],[],[],[],[[3,0,318,3]],[[0,0,319,0],[6,0,319,6],[7,0,319,7],[13,0,319,13],[29,0,319,29],[32,0,319,32],[33,0,320,2],[45,0,320,22],[72,0,320,49],[74,0,321,2],[79,0,321,35],[81,0,322,27],[83,0,322,29],[84,0,322,30],[104,0,322,50],[105,0,322,51],[112,0,322,58],[114,0,322,60],[123,0,322,69],[125,0,322,71],[130,0,322,76],[131,0,322,77],[132,0,322,78]]],"sourcesContent":["/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\n\nimport { ValidationErrors } from \"@angular/forms\";\nimport {\n  regexpMatchValidator,\n  regexpNotAMatchValidator,\n} from \"./ngx-validators\";\nimport {\n  address,\n  dateDD_MM_YYYY,\n  dateYYYY_MM_DD,\n  email,\n  IPAddressV4,\n  IPAddressV4AndV6,\n  IPAddressV6,\n  lettersOnly,\n  noSpecial,\n  numbersOnly,\n  passport,\n  passwordStrength,\n  phoneNumber,\n  singleSpace,\n  spaceRestriction,\n  ssn,\n  timeHH_MM_12,\n  timeHH_MM_24,\n  timeHH_MM_SS_24,\n  url,\n  zipCode,\n} from \"./constant/regex\";\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper address format\n * (Street number Street Name, City, State ZIP code)\n * Example: 3344 W Alameda Avenue, Lakewood, CO 80222\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const addressValidator = (\n  errorName: string = 'Please input a value in a format of: Street number Street Name, City, State ZIP code',\n  error?: ValidationErrors | string\n): ValidationErrors | null => regexpMatchValidator(address, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only \n * alphabetic characters.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const alphabetOnlyValidator = (\n  errorName: string = 'Only alphabetic characters are allowed.',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(lettersOnly, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the \n * following formats: dd-MM-YYYY, dd.MM.YYYY or dd/MM/YYYY.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateDD_MM_YYYYValidator = (\n  errorName: string =\n  \"Please input a value one of the following formats: dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY.\",\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(dateDD_MM_YYYY, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * YYYY-MM-dd.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateYYYY_MM_DDValidator = (\n  errorName: string = 'Please input a value in a format: YYYY-MM-dd.',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(dateYYYY_MM_DD, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * local-part@domain.com.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const emailValidator = (\n  errorName: string = 'Please input a value in a format: local-part@domain.com',\n  error?: ValidationErrors | string\n): ValidationErrors | null => regexpMatchValidator(email, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the \n * following formats: x.x.x.x or y:y:y:y:y:y:y:y.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ipAddressValidator = (\n  errorName: string = 'Please input a value one of the following formats: x.x.x.x or y:y:y:y:y:y:y:y',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(IPAddressV4AndV6, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * x.x.x.x.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv4Validator = (\n  errorName: string = 'Please input a value in a format: x.x.x.x',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(IPAddressV4, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * y:y:y:y:y:y:y:y.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv6Validator = (\n  errorName: string = 'Please input a value in a format: y:y:y:y:y:y:y:y',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(IPAddressV6, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only \n * numeric characters.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const numericsOnlyValidator = (\n  errorName: string = 'Only numeric characters are allowed.',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(numbersOnly, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl has any special characters.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const noSpecialsValidator = (\n  errorName: string = 'No special characters are allowed.',\n  error?: ValidationErrors | string\n): ValidationErrors | null => regexpMatchValidator(noSpecial, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper passport format\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passportValidator = (\n  errorName: string = 'Incorrect passport format.',\n  error?: ValidationErrors | string\n): ValidationErrors | null => regexpMatchValidator(passport, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a strong password format\n * (Has at least 1 lowercase letter, 1 uppercase letter, 1 number, 1 special character and has \n * length of at least 8 characters).\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passwordValidator = (\n  errorName: string = 'The value has to contain at least 1 lowercase letter, 1 uppercase letter, 1 special character and has a length of 8.',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(passwordStrength, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * (000) 000 0000.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const phoneNumberValidator = (\n  errorName: string = 'Please input a value in a format: (000) 000 0000.',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(phoneNumber, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of a single space \n * character.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const singleSpaceValidator = (\n  errorName: string = 'A single space character is not allowed.',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpNotAMatchValidator(singleSpace, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl starts or ends with a \n * space character.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const spaceRestrictionValidator = (\n  errorName: string = 'Value can not start or end with a space character.',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpNotAMatchValidator(spaceRestriction, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the \n * following formats: AAA-GGG-SSSS or AAAGGGSSSS.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ssnValidator = (\n  errorName: string = 'Please input a value one of the following formats: AAA-GGG-SSSS or AAAGGGSSSS.',\n  error?: ValidationErrors | string\n): ValidationErrors | null => regexpMatchValidator(ssn, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a \n * Time Format HH:MM 12-hour with optional leading 0.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_12Validator = (\n  errorName: string = 'Please input a value in a HH:MM 12-hour format.',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(timeHH_MM_12, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a \n * Time Format HH:MM 24-hour with optional leading 0.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_24Validator = (\n  errorName: string = 'Please input a value in a HH:MM 24-hour format.',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(timeHH_MM_24, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a \n * Time Format HH:MM:SS 24-hour.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_SS_24Validator = (\n  errorName: string = 'Please input a value in a HH:MM:SS 24-hour format.',\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(timeHH_MM_SS_24, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a \n * correct url format.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const urlValidator = (\n  errorName: string = 'Improper URL format.',\n  error?: ValidationErrors | string\n): ValidationErrors | null => regexpMatchValidator(url, errorName, error);\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the \n * following formats: 00000 or 00000-0000.\n * \n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const zipCodeValidator = (\n  errorName: string = 'Improper zip code format.',\n  error?: ValidationErrors | string\n): ValidationErrors | null => regexpMatchValidator(zipCode, errorName, error);\n"]},"resolvedIds":{"./ngx-validators":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false},"./constant/regex":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/constant/regex.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2267,"body":[{"type":"ExportNamedDeclaration","start":0,"end":105,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7,"end":105,"kind":"const","declarations":[{"type":"VariableDeclarator","start":13,"end":104,"id":{"type":"Identifier","start":13,"end":22,"name":"setErrors"},"init":{"type":"ArrowFunctionExpression","start":25,"end":104,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":26,"end":33,"name":"control"},{"type":"Identifier","start":35,"end":40,"name":"error"}],"body":{"type":"BlockStatement","start":45,"end":104,"body":[{"type":"ExpressionStatement","start":51,"end":102,"expression":{"type":"CallExpression","start":51,"end":101,"optional":false,"callee":{"type":"MemberExpression","start":51,"end":68,"computed":false,"optional":false,"object":{"type":"Identifier","start":51,"end":58,"name":"control"},"property":{"type":"Identifier","start":59,"end":68,"name":"setErrors"}},"arguments":[{"type":"ObjectExpression","start":69,"end":100,"properties":[{"type":"SpreadElement","start":71,"end":88,"argument":{"type":"MemberExpression","start":74,"end":88,"computed":false,"optional":false,"object":{"type":"Identifier","start":74,"end":81,"name":"control"},"property":{"type":"Identifier","start":82,"end":88,"name":"errors"}}},{"type":"SpreadElement","start":90,"end":98,"argument":{"type":"Identifier","start":93,"end":98,"name":"error"}}]}]}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":106,"end":400,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":113,"end":400,"kind":"const","declarations":[{"type":"VariableDeclarator","start":119,"end":399,"id":{"type":"Identifier","start":119,"end":131,"name":"removeErrors"},"init":{"type":"ArrowFunctionExpression","start":134,"end":399,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":135,"end":142,"name":"control"},{"type":"Identifier","start":144,"end":148,"name":"keys"}],"body":{"type":"BlockStatement","start":153,"end":399,"body":[{"type":"VariableDeclaration","start":159,"end":308,"kind":"const","declarations":[{"type":"VariableDeclarator","start":165,"end":307,"id":{"type":"Identifier","start":165,"end":180,"name":"remainingErrors"},"init":{"type":"CallExpression","start":183,"end":307,"optional":false,"callee":{"type":"MemberExpression","start":183,"end":194,"computed":false,"optional":false,"object":{"type":"Identifier","start":183,"end":187,"name":"keys"},"property":{"type":"Identifier","start":188,"end":194,"name":"reduce"}},"arguments":[{"type":"ArrowFunctionExpression","start":195,"end":270,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":196,"end":202,"name":"errors"},{"type":"Identifier","start":204,"end":207,"name":"key"}],"body":{"type":"BlockStatement","start":212,"end":270,"body":[{"type":"ExpressionStatement","start":222,"end":241,"expression":{"type":"UnaryExpression","start":222,"end":240,"operator":"delete","argument":{"type":"MemberExpression","start":229,"end":240,"computed":true,"optional":false,"object":{"type":"Identifier","start":229,"end":235,"name":"errors"},"property":{"type":"Identifier","start":236,"end":239,"name":"key"}},"prefix":true}},{"type":"ReturnStatement","start":250,"end":264,"argument":{"type":"Identifier","start":257,"end":263,"name":"errors"}}]},"id":null},{"type":"ObjectExpression","start":272,"end":306,"properties":[{"type":"SpreadElement","start":282,"end":299,"argument":{"type":"MemberExpression","start":285,"end":299,"computed":false,"optional":false,"object":{"type":"Identifier","start":285,"end":292,"name":"control"},"property":{"type":"Identifier","start":293,"end":299,"name":"errors"}}}]}]}}]},{"type":"ExpressionStatement","start":313,"end":397,"expression":{"type":"CallExpression","start":313,"end":396,"optional":false,"callee":{"type":"MemberExpression","start":313,"end":330,"computed":false,"optional":false,"object":{"type":"Identifier","start":313,"end":320,"name":"control"},"property":{"type":"Identifier","start":321,"end":330,"name":"setErrors"}},"arguments":[{"type":"ConditionalExpression","start":331,"end":395,"test":{"type":"BinaryExpression","start":331,"end":370,"operator":">","left":{"type":"MemberExpression","start":331,"end":366,"computed":false,"optional":false,"object":{"type":"CallExpression","start":331,"end":359,"optional":false,"callee":{"type":"MemberExpression","start":331,"end":342,"computed":false,"optional":false,"object":{"type":"Identifier","start":331,"end":337,"name":"Object"},"property":{"type":"Identifier","start":338,"end":342,"name":"keys"}},"arguments":[{"type":"Identifier","start":343,"end":358,"name":"remainingErrors"}]},"property":{"type":"Identifier","start":360,"end":366,"name":"length"}},"right":{"type":"Literal","start":369,"end":370,"raw":"0","value":0}},"consequent":{"type":"Identifier","start":373,"end":388,"name":"remainingErrors"},"alternate":{"type":"Literal","start":391,"end":395,"raw":"null","value":null}}]}}]},"id":null}}]}}],"_rollupRemoved":[{"end":2267,"start":401,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"export const setErrors = (control, error) => {\n    control.setErrors({ ...control.errors, ...error });\n};\nexport const removeErrors = (control, keys) => {\n    const remainingErrors = keys.reduce((errors, key) => {\n        delete errors[key];\n        return errors;\n    }, {\n        ...control.errors,\n    });\n    control.setErrors(Object.keys(remainingErrors).length > 0 ? remainingErrors : null);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXZhbGlkYXRvci1wYWNrL3NyYy9saWIvaGVscGVycy9lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQ3JCLE9BQXdCLEVBQ3hCLEtBQWlDLEVBQzNCLEVBQUU7SUFDUixPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsS0FBSyxFQUFFLENBQUMsQ0FBQztBQUNyRCxDQUFDLENBQUE7QUFFSCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxPQUF3QixFQUFFLElBQWMsRUFBUSxFQUFFO0lBQzNFLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQ2pDLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBNEIsRUFBRTtRQUN4QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDLEVBQ0Q7UUFDRSxHQUFHLE9BQU8sQ0FBQyxNQUFNO0tBQ2xCLENBQ0YsQ0FBQztJQUNGLE9BQU8sQ0FBQyxTQUFTLENBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDakUsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q29udHJvbCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuZXhwb3J0IGNvbnN0IHNldEVycm9ycyA9IChcbiAgICBjb250cm9sOiBBYnN0cmFjdENvbnRyb2wsXG4gICAgZXJyb3I6IHsgW2tleTogc3RyaW5nXTogdW5rbm93biB9XG4gICk6IHZvaWQgPT4ge1xuICAgIGNvbnRyb2wuc2V0RXJyb3JzKHsgLi4uY29udHJvbC5lcnJvcnMsIC4uLmVycm9yIH0pO1xuICB9XG4gIFxuZXhwb3J0IGNvbnN0IHJlbW92ZUVycm9ycyA9IChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wsIGtleXM6IHN0cmluZ1tdKTogdm9pZCA9PiB7XG4gICAgY29uc3QgcmVtYWluaW5nRXJyb3JzID0ga2V5cy5yZWR1Y2UoXG4gICAgICAoZXJyb3JzLCBrZXkpOiB7IFt4OiBzdHJpbmddOiB1bmtub3duIH0gPT4ge1xuICAgICAgICBkZWxldGUgZXJyb3JzW2tleV07XG4gICAgICAgIHJldHVybiBlcnJvcnM7XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAuLi5jb250cm9sLmVycm9ycyxcbiAgICAgIH1cbiAgICApO1xuICAgIGNvbnRyb2wuc2V0RXJyb3JzKFxuICAgICAgT2JqZWN0LmtleXMocmVtYWluaW5nRXJyb3JzKS5sZW5ndGggPiAwID8gcmVtYWluaW5nRXJyb3JzIDogbnVsbFxuICAgICk7XG4gIH0iXX0=","customTransformCache":false,"dependencies":[],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/errors.mjs","meta":{},"moduleSideEffects":false,"originalCode":"export const setErrors = (control, error) => {\n    control.setErrors({ ...control.errors, ...error });\n};\nexport const removeErrors = (control, keys) => {\n    const remainingErrors = keys.reduce((errors, key) => {\n        delete errors[key];\n        return errors;\n    }, {\n        ...control.errors,\n    });\n    control.setErrors(Object.keys(remainingErrors).length > 0 ? remainingErrors : null);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXZhbGlkYXRvci1wYWNrL3NyYy9saWIvaGVscGVycy9lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQ3JCLE9BQXdCLEVBQ3hCLEtBQWlDLEVBQzNCLEVBQUU7SUFDUixPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsS0FBSyxFQUFFLENBQUMsQ0FBQztBQUNyRCxDQUFDLENBQUE7QUFFSCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxPQUF3QixFQUFFLElBQWMsRUFBUSxFQUFFO0lBQzNFLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQ2pDLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBNEIsRUFBRTtRQUN4QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDLEVBQ0Q7UUFDRSxHQUFHLE9BQU8sQ0FBQyxNQUFNO0tBQ2xCLENBQ0YsQ0FBQztJQUNGLE9BQU8sQ0FBQyxTQUFTLENBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDakUsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q29udHJvbCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuZXhwb3J0IGNvbnN0IHNldEVycm9ycyA9IChcbiAgICBjb250cm9sOiBBYnN0cmFjdENvbnRyb2wsXG4gICAgZXJyb3I6IHsgW2tleTogc3RyaW5nXTogdW5rbm93biB9XG4gICk6IHZvaWQgPT4ge1xuICAgIGNvbnRyb2wuc2V0RXJyb3JzKHsgLi4uY29udHJvbC5lcnJvcnMsIC4uLmVycm9yIH0pO1xuICB9XG4gIFxuZXhwb3J0IGNvbnN0IHJlbW92ZUVycm9ycyA9IChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wsIGtleXM6IHN0cmluZ1tdKTogdm9pZCA9PiB7XG4gICAgY29uc3QgcmVtYWluaW5nRXJyb3JzID0ga2V5cy5yZWR1Y2UoXG4gICAgICAoZXJyb3JzLCBrZXkpOiB7IFt4OiBzdHJpbmddOiB1bmtub3duIH0gPT4ge1xuICAgICAgICBkZWxldGUgZXJyb3JzW2tleV07XG4gICAgICAgIHJldHVybiBlcnJvcnM7XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAuLi5jb250cm9sLmVycm9ycyxcbiAgICAgIH1cbiAgICApO1xuICAgIGNvbnRyb2wuc2V0RXJyb3JzKFxuICAgICAgT2JqZWN0LmtleXMocmVtYWluaW5nRXJyb3JzKS5sZW5ndGggPiAwID8gcmVtYWluaW5nRXJyb3JzIDogbnVsbFxuICAgICk7XG4gIH0iXX0=","originalSourcemap":{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../../../../projects/ngx-validator-pack/src/lib/helpers/errors.ts"],"names":[],"mappings":[[[0,0,1,0],[6,0,1,6],[7,0,1,7],[13,0,1,13],[22,0,1,22],[25,0,1,25],[26,0,2,4],[33,0,2,28],[35,0,3,4],[40,0,3,37],[42,0,4,10],[44,0,4,12]],[[4,0,5,4],[11,0,5,11],[12,0,5,12],[21,0,5,21],[22,0,5,22],[24,0,5,24],[27,0,5,27],[34,0,5,34],[35,0,5,35],[41,0,5,41],[43,0,5,43],[46,0,5,46],[51,0,5,51],[53,0,5,53],[54,0,5,54],[55,0,5,55]],[[0,0,6,2],[1,0,6,3],[2,0,6,3]],[[0,0,8,0],[6,0,8,6],[7,0,8,7],[13,0,8,13],[25,0,8,25],[28,0,8,28],[29,0,8,29],[36,0,8,53],[38,0,8,55],[42,0,8,69],[44,0,8,77],[46,0,8,79]],[[4,0,9,4],[10,0,9,10],[25,0,9,25],[28,0,9,28],[32,0,9,32],[33,0,9,33],[39,0,9,39],[40,0,10,6],[41,0,10,7],[47,0,10,13],[49,0,10,15],[52,0,10,18],[54,0,10,46],[56,0,10,48]],[[8,0,11,8],[15,0,11,15],[21,0,11,21],[22,0,11,22],[25,0,11,25],[26,0,11,26],[27,0,11,27]],[[8,0,12,8],[15,0,12,15],[21,0,12,21],[22,0,12,22]],[[4,0,13,6],[5,0,13,7],[7,0,14,6]],[[8,0,15,8],[11,0,15,11],[18,0,15,18],[19,0,15,19],[25,0,15,25]],[[5,0,16,7],[6,0,17,5],[7,0,17,6]],[[4,0,18,4],[11,0,18,11],[12,0,18,12],[21,0,18,21],[22,0,19,6],[28,0,19,12],[29,0,19,13],[33,0,19,17],[34,0,19,18],[49,0,19,33],[50,0,19,34],[51,0,19,35],[57,0,19,41],[60,0,19,44],[61,0,19,45],[62,0,19,46],[63,0,19,47],[64,0,19,48],[79,0,19,63],[80,0,19,64],[81,0,19,65],[82,0,19,66],[86,0,19,70],[87,0,20,5],[88,0,20,6]],[[0,0,21,2],[1,0,21,3],[2,0,21,3]]],"sourcesContent":["import { AbstractControl } from \"@angular/forms\";\nexport const setErrors = (\n    control: AbstractControl,\n    error: { [key: string]: unknown }\n  ): void => {\n    control.setErrors({ ...control.errors, ...error });\n  }\n  \nexport const removeErrors = (control: AbstractControl, keys: string[]): void => {\n    const remainingErrors = keys.reduce(\n      (errors, key): { [x: string]: unknown } => {\n        delete errors[key];\n        return errors;\n      },\n      {\n        ...control.errors,\n      }\n    );\n    control.setErrors(\n      Object.keys(remainingErrors).length > 0 ? remainingErrors : null\n    );\n  }"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":8119,"body":[{"type":"ImportDeclaration","start":192,"end":251,"specifiers":[{"type":"ImportSpecifier","start":201,"end":213,"imported":{"type":"Identifier","start":201,"end":213,"name":"removeErrors"},"local":{"type":"Identifier","start":201,"end":213,"name":"removeErrors"}},{"type":"ImportSpecifier","start":215,"end":224,"imported":{"type":"Identifier","start":215,"end":224,"name":"setErrors"},"local":{"type":"Identifier","start":215,"end":224,"name":"setErrors"}}],"source":{"type":"Literal","start":232,"end":250,"value":"./helpers/errors","raw":"\"./helpers/errors\""},"attributes":[]},{"type":"ExportNamedDeclaration","start":252,"end":833,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":259,"end":833,"kind":"const","declarations":[{"type":"VariableDeclarator","start":265,"end":832,"id":{"type":"Identifier","start":265,"end":275,"name":"requiredIf"},"init":{"type":"ArrowFunctionExpression","start":278,"end":832,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":279,"end":298,"name":"requiredControlName"},{"type":"Identifier","start":300,"end":318,"name":"controlToCheckName"}],"body":{"type":"BlockStatement","start":323,"end":832,"body":[{"type":"ReturnStatement","start":329,"end":830,"argument":{"type":"ArrowFunctionExpression","start":336,"end":829,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":337,"end":344,"name":"control"}],"body":{"type":"BlockStatement","start":349,"end":829,"body":[{"type":"VariableDeclaration","start":359,"end":409,"kind":"const","declarations":[{"type":"VariableDeclarator","start":365,"end":408,"id":{"type":"Identifier","start":365,"end":373,"name":"required"},"init":{"type":"CallExpression","start":376,"end":408,"optional":false,"callee":{"type":"MemberExpression","start":376,"end":387,"computed":false,"optional":false,"object":{"type":"Identifier","start":376,"end":383,"name":"control"},"property":{"type":"Identifier","start":384,"end":387,"name":"get"}},"arguments":[{"type":"Identifier","start":388,"end":407,"name":"requiredControlName"}]}}]},{"type":"VariableDeclaration","start":418,"end":466,"kind":"const","declarations":[{"type":"VariableDeclarator","start":424,"end":465,"id":{"type":"Identifier","start":424,"end":431,"name":"toCheck"},"init":{"type":"CallExpression","start":434,"end":465,"optional":false,"callee":{"type":"MemberExpression","start":434,"end":445,"computed":false,"optional":false,"object":{"type":"Identifier","start":434,"end":441,"name":"control"},"property":{"type":"Identifier","start":442,"end":445,"name":"get"}},"arguments":[{"type":"Identifier","start":446,"end":464,"name":"controlToCheckName"}]}}]},{"type":"IfStatement","start":475,"end":823,"test":{"type":"LogicalExpression","start":479,"end":513,"operator":"||","left":{"type":"ChainExpression","start":479,"end":494,"expression":{"type":"MemberExpression","start":479,"end":494,"computed":false,"optional":true,"object":{"type":"Identifier","start":479,"end":487,"name":"required"},"property":{"type":"Identifier","start":489,"end":494,"name":"value"}}},"right":{"type":"UnaryExpression","start":498,"end":513,"operator":"!","argument":{"type":"ChainExpression","start":499,"end":513,"expression":{"type":"MemberExpression","start":499,"end":513,"computed":false,"optional":true,"object":{"type":"Identifier","start":499,"end":506,"name":"toCheck"},"property":{"type":"Identifier","start":508,"end":513,"name":"value"}}},"prefix":true}},"consequent":{"type":"BlockStatement","start":515,"end":601,"body":[{"type":"ExpressionStatement","start":529,"end":566,"expression":{"type":"CallExpression","start":529,"end":565,"optional":false,"callee":{"type":"Identifier","start":529,"end":541,"name":"removeErrors"},"arguments":[{"type":"Identifier","start":542,"end":550,"name":"required"},{"type":"ArrayExpression","start":552,"end":564,"elements":[{"type":"Literal","start":553,"end":563,"value":"required","raw":"'required'"}]}]}},{"type":"ReturnStatement","start":579,"end":591,"argument":{"type":"Literal","start":586,"end":590,"raw":"null","value":null}}]},"alternate":{"type":"BlockStatement","start":615,"end":823,"body":[{"type":"VariableDeclaration","start":629,"end":715,"kind":"const","declarations":[{"type":"VariableDeclarator","start":635,"end":714,"id":{"type":"Identifier","start":635,"end":643,"name":"errorVal"},"init":{"type":"TemplateLiteral","start":646,"end":714,"quasis":[{"type":"TemplateElement","start":647,"end":656,"tail":false,"value":{"cooked":"Required ","raw":"Required "}},{"type":"TemplateElement","start":678,"end":691,"tail":false,"value":{"cooked":" when having ","raw":" when having "}},{"type":"TemplateElement","start":712,"end":713,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":658,"end":677,"name":"requiredControlName"},{"type":"Identifier","start":693,"end":711,"name":"controlToCheckName"}]}}]},{"type":"ExpressionStatement","start":728,"end":772,"expression":{"type":"CallExpression","start":728,"end":771,"optional":false,"callee":{"type":"Identifier","start":728,"end":737,"name":"setErrors"},"arguments":[{"type":"Identifier","start":738,"end":746,"name":"required"},{"type":"ObjectExpression","start":748,"end":770,"properties":[{"type":"Property","start":750,"end":768,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":750,"end":758,"name":"required"},"value":{"type":"Identifier","start":760,"end":768,"name":"errorVal"},"kind":"init"}]}]}},{"type":"ReturnStatement","start":785,"end":813,"argument":{"type":"ObjectExpression","start":792,"end":812,"properties":[{"type":"Property","start":794,"end":810,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":795,"end":803,"name":"errorVal"},"value":{"type":"Literal","start":806,"end":810,"value":true,"raw":"true"},"kind":"init"}]}}]}}]},"id":null}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":834,"end":1421,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":841,"end":1421,"kind":"const","declarations":[{"type":"VariableDeclarator","start":847,"end":1420,"id":{"type":"Identifier","start":847,"end":860,"name":"requiredIfNot"},"init":{"type":"ArrowFunctionExpression","start":863,"end":1420,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":864,"end":883,"name":"requiredControlName"},{"type":"Identifier","start":885,"end":903,"name":"controlToCheckName"}],"body":{"type":"BlockStatement","start":908,"end":1420,"body":[{"type":"ReturnStatement","start":914,"end":1418,"argument":{"type":"ArrowFunctionExpression","start":921,"end":1417,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":922,"end":929,"name":"control"}],"body":{"type":"BlockStatement","start":934,"end":1417,"body":[{"type":"VariableDeclaration","start":944,"end":994,"kind":"const","declarations":[{"type":"VariableDeclarator","start":950,"end":993,"id":{"type":"Identifier","start":950,"end":958,"name":"required"},"init":{"type":"CallExpression","start":961,"end":993,"optional":false,"callee":{"type":"MemberExpression","start":961,"end":972,"computed":false,"optional":false,"object":{"type":"Identifier","start":961,"end":968,"name":"control"},"property":{"type":"Identifier","start":969,"end":972,"name":"get"}},"arguments":[{"type":"Identifier","start":973,"end":992,"name":"requiredControlName"}]}}]},{"type":"VariableDeclaration","start":1003,"end":1051,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1009,"end":1050,"id":{"type":"Identifier","start":1009,"end":1016,"name":"toCheck"},"init":{"type":"CallExpression","start":1019,"end":1050,"optional":false,"callee":{"type":"MemberExpression","start":1019,"end":1030,"computed":false,"optional":false,"object":{"type":"Identifier","start":1019,"end":1026,"name":"control"},"property":{"type":"Identifier","start":1027,"end":1030,"name":"get"}},"arguments":[{"type":"Identifier","start":1031,"end":1049,"name":"controlToCheckName"}]}}]},{"type":"IfStatement","start":1060,"end":1411,"test":{"type":"LogicalExpression","start":1064,"end":1097,"operator":"||","left":{"type":"ChainExpression","start":1064,"end":1079,"expression":{"type":"MemberExpression","start":1064,"end":1079,"computed":false,"optional":true,"object":{"type":"Identifier","start":1064,"end":1072,"name":"required"},"property":{"type":"Identifier","start":1074,"end":1079,"name":"value"}}},"right":{"type":"ChainExpression","start":1083,"end":1097,"expression":{"type":"MemberExpression","start":1083,"end":1097,"computed":false,"optional":true,"object":{"type":"Identifier","start":1083,"end":1090,"name":"toCheck"},"property":{"type":"Identifier","start":1092,"end":1097,"name":"value"}}}},"consequent":{"type":"BlockStatement","start":1099,"end":1185,"body":[{"type":"ExpressionStatement","start":1113,"end":1150,"expression":{"type":"CallExpression","start":1113,"end":1149,"optional":false,"callee":{"type":"Identifier","start":1113,"end":1125,"name":"removeErrors"},"arguments":[{"type":"Identifier","start":1126,"end":1134,"name":"required"},{"type":"ArrayExpression","start":1136,"end":1148,"elements":[{"type":"Literal","start":1137,"end":1147,"value":"required","raw":"'required'"}]}]}},{"type":"ReturnStatement","start":1163,"end":1175,"argument":{"type":"Literal","start":1170,"end":1174,"raw":"null","value":null}}]},"alternate":{"type":"BlockStatement","start":1199,"end":1411,"body":[{"type":"VariableDeclaration","start":1213,"end":1303,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1219,"end":1302,"id":{"type":"Identifier","start":1219,"end":1227,"name":"errorVal"},"init":{"type":"TemplateLiteral","start":1230,"end":1302,"quasis":[{"type":"TemplateElement","start":1231,"end":1240,"tail":false,"value":{"cooked":"Required ","raw":"Required "}},{"type":"TemplateElement","start":1262,"end":1279,"tail":false,"value":{"cooked":" when not having ","raw":" when not having "}},{"type":"TemplateElement","start":1300,"end":1301,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":1242,"end":1261,"name":"requiredControlName"},{"type":"Identifier","start":1281,"end":1299,"name":"controlToCheckName"}]}}]},{"type":"ExpressionStatement","start":1316,"end":1360,"expression":{"type":"CallExpression","start":1316,"end":1359,"optional":false,"callee":{"type":"Identifier","start":1316,"end":1325,"name":"setErrors"},"arguments":[{"type":"Identifier","start":1326,"end":1334,"name":"required"},{"type":"ObjectExpression","start":1336,"end":1358,"properties":[{"type":"Property","start":1338,"end":1356,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1338,"end":1346,"name":"required"},"value":{"type":"Identifier","start":1348,"end":1356,"name":"errorVal"},"kind":"init"}]}]}},{"type":"ReturnStatement","start":1373,"end":1401,"argument":{"type":"ObjectExpression","start":1380,"end":1400,"properties":[{"type":"Property","start":1382,"end":1398,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":1383,"end":1391,"name":"errorVal"},"value":{"type":"Literal","start":1394,"end":1398,"value":true,"raw":"true"},"kind":"init"}]}}]}}]},"id":null}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":1422,"end":2108,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1429,"end":2108,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1435,"end":2107,"id":{"type":"Identifier","start":1435,"end":1448,"name":"requiredEther"},"init":{"type":"ArrowFunctionExpression","start":1451,"end":2107,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":1452,"end":1471,"name":"requiredControlName"},{"type":"Identifier","start":1473,"end":1491,"name":"controlToCheckName"}],"body":{"type":"BlockStatement","start":1496,"end":2107,"body":[{"type":"ReturnStatement","start":1502,"end":2105,"argument":{"type":"ArrowFunctionExpression","start":1509,"end":2104,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":1510,"end":1517,"name":"control"}],"body":{"type":"BlockStatement","start":1522,"end":2104,"body":[{"type":"VariableDeclaration","start":1532,"end":1582,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1538,"end":1581,"id":{"type":"Identifier","start":1538,"end":1546,"name":"required"},"init":{"type":"CallExpression","start":1549,"end":1581,"optional":false,"callee":{"type":"MemberExpression","start":1549,"end":1560,"computed":false,"optional":false,"object":{"type":"Identifier","start":1549,"end":1556,"name":"control"},"property":{"type":"Identifier","start":1557,"end":1560,"name":"get"}},"arguments":[{"type":"Identifier","start":1561,"end":1580,"name":"requiredControlName"}]}}]},{"type":"VariableDeclaration","start":1591,"end":1639,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1597,"end":1638,"id":{"type":"Identifier","start":1597,"end":1604,"name":"toCheck"},"init":{"type":"CallExpression","start":1607,"end":1638,"optional":false,"callee":{"type":"MemberExpression","start":1607,"end":1618,"computed":false,"optional":false,"object":{"type":"Identifier","start":1607,"end":1614,"name":"control"},"property":{"type":"Identifier","start":1615,"end":1618,"name":"get"}},"arguments":[{"type":"Identifier","start":1619,"end":1637,"name":"controlToCheckName"}]}}]},{"type":"IfStatement","start":1648,"end":2098,"test":{"type":"LogicalExpression","start":1652,"end":1685,"operator":"||","left":{"type":"ChainExpression","start":1652,"end":1667,"expression":{"type":"MemberExpression","start":1652,"end":1667,"computed":false,"optional":true,"object":{"type":"Identifier","start":1652,"end":1660,"name":"required"},"property":{"type":"Identifier","start":1662,"end":1667,"name":"value"}}},"right":{"type":"ChainExpression","start":1671,"end":1685,"expression":{"type":"MemberExpression","start":1671,"end":1685,"computed":false,"optional":true,"object":{"type":"Identifier","start":1671,"end":1678,"name":"toCheck"},"property":{"type":"Identifier","start":1680,"end":1685,"name":"value"}}}},"consequent":{"type":"BlockStatement","start":1687,"end":1822,"body":[{"type":"ExpressionStatement","start":1701,"end":1738,"expression":{"type":"CallExpression","start":1701,"end":1737,"optional":false,"callee":{"type":"Identifier","start":1701,"end":1713,"name":"removeErrors"},"arguments":[{"type":"Identifier","start":1714,"end":1722,"name":"required"},{"type":"ArrayExpression","start":1724,"end":1736,"elements":[{"type":"Literal","start":1725,"end":1735,"value":"required","raw":"'required'"}]}]}},{"type":"ExpressionStatement","start":1751,"end":1787,"expression":{"type":"CallExpression","start":1751,"end":1786,"optional":false,"callee":{"type":"Identifier","start":1751,"end":1763,"name":"removeErrors"},"arguments":[{"type":"Identifier","start":1764,"end":1771,"name":"toCheck"},{"type":"ArrayExpression","start":1773,"end":1785,"elements":[{"type":"Literal","start":1774,"end":1784,"value":"required","raw":"'required'"}]}]}},{"type":"ReturnStatement","start":1800,"end":1812,"argument":{"type":"Literal","start":1807,"end":1811,"raw":"null","value":null}}]},"alternate":{"type":"BlockStatement","start":1836,"end":2098,"body":[{"type":"VariableDeclaration","start":1850,"end":1934,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1856,"end":1933,"id":{"type":"Identifier","start":1856,"end":1864,"name":"errorVal"},"init":{"type":"TemplateLiteral","start":1867,"end":1933,"quasis":[{"type":"TemplateElement","start":1868,"end":1884,"tail":false,"value":{"cooked":"Required either ","raw":"Required either "}},{"type":"TemplateElement","start":1906,"end":1910,"tail":false,"value":{"cooked":" or ","raw":" or "}},{"type":"TemplateElement","start":1931,"end":1932,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":1886,"end":1905,"name":"requiredControlName"},{"type":"Identifier","start":1912,"end":1930,"name":"controlToCheckName"}]}}]},{"type":"ExpressionStatement","start":1947,"end":1991,"expression":{"type":"CallExpression","start":1947,"end":1990,"optional":false,"callee":{"type":"Identifier","start":1947,"end":1956,"name":"setErrors"},"arguments":[{"type":"Identifier","start":1957,"end":1965,"name":"required"},{"type":"ObjectExpression","start":1967,"end":1989,"properties":[{"type":"Property","start":1969,"end":1987,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1969,"end":1977,"name":"required"},"value":{"type":"Identifier","start":1979,"end":1987,"name":"errorVal"},"kind":"init"}]}]}},{"type":"ExpressionStatement","start":2004,"end":2047,"expression":{"type":"CallExpression","start":2004,"end":2046,"optional":false,"callee":{"type":"Identifier","start":2004,"end":2013,"name":"setErrors"},"arguments":[{"type":"Identifier","start":2014,"end":2021,"name":"toCheck"},{"type":"ObjectExpression","start":2023,"end":2045,"properties":[{"type":"Property","start":2025,"end":2043,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2025,"end":2033,"name":"required"},"value":{"type":"Identifier","start":2035,"end":2043,"name":"errorVal"},"kind":"init"}]}]}},{"type":"ReturnStatement","start":2060,"end":2088,"argument":{"type":"ObjectExpression","start":2067,"end":2087,"properties":[{"type":"Property","start":2069,"end":2085,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":2070,"end":2078,"name":"errorVal"},"value":{"type":"Literal","start":2081,"end":2085,"value":true,"raw":"true"},"kind":"init"}]}}]}}]},"id":null}}]},"id":null}}]}}],"_rollupRemoved":[{"end":8119,"start":2109,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { removeErrors, setErrors } from \"./helpers/errors\";\nexport const requiredIf = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || !toCheck?.value) {\n            removeErrors(required, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required ${requiredControlName} when having ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\nexport const requiredIfNot = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || toCheck?.value) {\n            removeErrors(required, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required ${requiredControlName} when not having ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\nexport const requiredEther = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || toCheck?.value) {\n            removeErrors(required, ['required']);\n            removeErrors(toCheck, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required either ${requiredControlName} or ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            setErrors(toCheck, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZvcm0tZ3JvdXAtdmFsaWRhdG9ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL25neC1mb3JtLWdyb3VwLXZhbGlkYXRvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBR0gsT0FBTyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUUzRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FDeEIsbUJBQTJCLEVBQzNCLGtCQUEwQixFQUMxQixFQUFFO0lBQ0YsT0FBTyxDQUFDLE9BQXdCLEVBQTJCLEVBQUU7UUFDM0QsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBb0IsQ0FBQztRQUNyRSxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFvQixDQUFDO1FBQ25FLElBQUksUUFBUSxFQUFFLEtBQUssSUFBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQztZQUN2QyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNyQyxPQUFPLElBQUksQ0FBQztRQUNkLENBQUM7YUFBTSxDQUFDO1lBQ04sTUFBTSxRQUFRLEdBQUcsWUFBWSxtQkFBbUIsZ0JBQWdCLGtCQUFrQixHQUFHLENBQUM7WUFDdEYsU0FBUyxDQUFDLFFBQVEsRUFBRSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQzVDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDO1FBQzlCLENBQUM7SUFDSCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsQ0FDM0IsbUJBQTJCLEVBQzNCLGtCQUEwQixFQUMxQixFQUFFO0lBQ0YsT0FBTyxDQUFDLE9BQXdCLEVBQTJCLEVBQUU7UUFDM0QsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBb0IsQ0FBQztRQUNyRSxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFvQixDQUFDO1FBQ25FLElBQUksUUFBUSxFQUFFLEtBQUssSUFBSSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7WUFDdEMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDckMsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDO2FBQU0sQ0FBQztZQUNOLE1BQU0sUUFBUSxHQUFHLFlBQVksbUJBQW1CLG9CQUFvQixrQkFBa0IsR0FBRyxDQUFDO1lBQzFGLFNBQVMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUM1QyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUM5QixDQUFDO0lBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQzNCLG1CQUEyQixFQUMzQixrQkFBMEIsRUFDMUIsRUFBRTtJQUNGLE9BQU8sQ0FBQyxPQUF3QixFQUEyQixFQUFFO1FBQzNELE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQW9CLENBQUM7UUFDckUsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBb0IsQ0FBQztRQUNuRSxJQUFJLFFBQVEsRUFBRSxLQUFLLElBQUksT0FBTyxFQUFFLEtBQUssRUFBRSxDQUFDO1lBQ3RDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLFlBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQzthQUFNLENBQUM7WUFDTixNQUFNLFFBQVEsR0FBRyxtQkFBbUIsbUJBQW1CLE9BQU8sa0JBQWtCLEdBQUcsQ0FBQztZQUNwRixTQUFTLENBQUMsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7WUFDNUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQzNDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDO1FBQzlCLENBQUM7SUFDSCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgU2xhdmtvIE1paGFqbG92aWMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBJU0Mtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgYXQgaHR0cHM6Ly93d3cuaXNjLm9yZy9saWNlbnNlcy9cbiAqL1xuXG5pbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIFZhbGlkYXRpb25FcnJvcnMgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IHJlbW92ZUVycm9ycywgc2V0RXJyb3JzIH0gZnJvbSBcIi4vaGVscGVycy9lcnJvcnNcIjtcblxuZXhwb3J0IGNvbnN0IHJlcXVpcmVkSWYgPSAoXG4gIHJlcXVpcmVkQ29udHJvbE5hbWU6IHN0cmluZyxcbiAgY29udHJvbFRvQ2hlY2tOYW1lOiBzdHJpbmdcbikgPT4ge1xuICByZXR1cm4gKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IFZhbGlkYXRpb25FcnJvcnMgfCBudWxsID0+IHtcbiAgICBjb25zdCByZXF1aXJlZCA9IGNvbnRyb2wuZ2V0KHJlcXVpcmVkQ29udHJvbE5hbWUpIGFzIEFic3RyYWN0Q29udHJvbDtcbiAgICBjb25zdCB0b0NoZWNrID0gY29udHJvbC5nZXQoY29udHJvbFRvQ2hlY2tOYW1lKSBhcyBBYnN0cmFjdENvbnRyb2w7XG4gICAgaWYgKHJlcXVpcmVkPy52YWx1ZSB8fCAhdG9DaGVjaz8udmFsdWUpIHtcbiAgICAgIHJlbW92ZUVycm9ycyhyZXF1aXJlZCwgWydyZXF1aXJlZCddKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBlcnJvclZhbCA9IGBSZXF1aXJlZCAke3JlcXVpcmVkQ29udHJvbE5hbWV9IHdoZW4gaGF2aW5nICR7Y29udHJvbFRvQ2hlY2tOYW1lfS5gO1xuICAgICAgc2V0RXJyb3JzKHJlcXVpcmVkLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHJldHVybiB7IFtlcnJvclZhbF06IHRydWUgfTtcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgcmVxdWlyZWRJZk5vdCA9IChcbiAgcmVxdWlyZWRDb250cm9sTmFtZTogc3RyaW5nLFxuICBjb250cm9sVG9DaGVja05hbWU6IHN0cmluZ1xuKSA9PiB7XG4gIHJldHVybiAoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogVmFsaWRhdGlvbkVycm9ycyB8IG51bGwgPT4ge1xuICAgIGNvbnN0IHJlcXVpcmVkID0gY29udHJvbC5nZXQocmVxdWlyZWRDb250cm9sTmFtZSkgYXMgQWJzdHJhY3RDb250cm9sO1xuICAgIGNvbnN0IHRvQ2hlY2sgPSBjb250cm9sLmdldChjb250cm9sVG9DaGVja05hbWUpIGFzIEFic3RyYWN0Q29udHJvbDtcbiAgICBpZiAocmVxdWlyZWQ/LnZhbHVlIHx8IHRvQ2hlY2s/LnZhbHVlKSB7XG4gICAgICByZW1vdmVFcnJvcnMocmVxdWlyZWQsIFsncmVxdWlyZWQnXSk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgZXJyb3JWYWwgPSBgUmVxdWlyZWQgJHtyZXF1aXJlZENvbnRyb2xOYW1lfSB3aGVuIG5vdCBoYXZpbmcgJHtjb250cm9sVG9DaGVja05hbWV9LmA7XG4gICAgICBzZXRFcnJvcnMocmVxdWlyZWQsIHsgcmVxdWlyZWQ6IGVycm9yVmFsIH0pO1xuICAgICAgcmV0dXJuIHsgW2Vycm9yVmFsXTogdHJ1ZSB9O1xuICAgIH1cbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCByZXF1aXJlZEV0aGVyID0gKFxuICByZXF1aXJlZENvbnRyb2xOYW1lOiBzdHJpbmcsXG4gIGNvbnRyb2xUb0NoZWNrTmFtZTogc3RyaW5nXG4pID0+IHtcbiAgcmV0dXJuIChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiBWYWxpZGF0aW9uRXJyb3JzIHwgbnVsbCA9PiB7XG4gICAgY29uc3QgcmVxdWlyZWQgPSBjb250cm9sLmdldChyZXF1aXJlZENvbnRyb2xOYW1lKSBhcyBBYnN0cmFjdENvbnRyb2w7XG4gICAgY29uc3QgdG9DaGVjayA9IGNvbnRyb2wuZ2V0KGNvbnRyb2xUb0NoZWNrTmFtZSkgYXMgQWJzdHJhY3RDb250cm9sO1xuICAgIGlmIChyZXF1aXJlZD8udmFsdWUgfHwgdG9DaGVjaz8udmFsdWUpIHtcbiAgICAgIHJlbW92ZUVycm9ycyhyZXF1aXJlZCwgWydyZXF1aXJlZCddKTtcbiAgICAgIHJlbW92ZUVycm9ycyh0b0NoZWNrLCBbJ3JlcXVpcmVkJ10pO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVycm9yVmFsID0gYFJlcXVpcmVkIGVpdGhlciAke3JlcXVpcmVkQ29udHJvbE5hbWV9IG9yICR7Y29udHJvbFRvQ2hlY2tOYW1lfS5gO1xuICAgICAgc2V0RXJyb3JzKHJlcXVpcmVkLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHNldEVycm9ycyh0b0NoZWNrLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHJldHVybiB7IFtlcnJvclZhbF06IHRydWUgfTtcbiAgICB9XG4gIH07XG59OyJdfQ==","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/errors.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-form-group-validators.mjs","meta":{},"moduleSideEffects":false,"originalCode":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { removeErrors, setErrors } from \"./helpers/errors\";\nexport const requiredIf = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || !toCheck?.value) {\n            removeErrors(required, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required ${requiredControlName} when having ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\nexport const requiredIfNot = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || toCheck?.value) {\n            removeErrors(required, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required ${requiredControlName} when not having ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\nexport const requiredEther = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || toCheck?.value) {\n            removeErrors(required, ['required']);\n            removeErrors(toCheck, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required either ${requiredControlName} or ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            setErrors(toCheck, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZvcm0tZ3JvdXAtdmFsaWRhdG9ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL25neC1mb3JtLWdyb3VwLXZhbGlkYXRvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBR0gsT0FBTyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUUzRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FDeEIsbUJBQTJCLEVBQzNCLGtCQUEwQixFQUMxQixFQUFFO0lBQ0YsT0FBTyxDQUFDLE9BQXdCLEVBQTJCLEVBQUU7UUFDM0QsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBb0IsQ0FBQztRQUNyRSxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFvQixDQUFDO1FBQ25FLElBQUksUUFBUSxFQUFFLEtBQUssSUFBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQztZQUN2QyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNyQyxPQUFPLElBQUksQ0FBQztRQUNkLENBQUM7YUFBTSxDQUFDO1lBQ04sTUFBTSxRQUFRLEdBQUcsWUFBWSxtQkFBbUIsZ0JBQWdCLGtCQUFrQixHQUFHLENBQUM7WUFDdEYsU0FBUyxDQUFDLFFBQVEsRUFBRSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQzVDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDO1FBQzlCLENBQUM7SUFDSCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsQ0FDM0IsbUJBQTJCLEVBQzNCLGtCQUEwQixFQUMxQixFQUFFO0lBQ0YsT0FBTyxDQUFDLE9BQXdCLEVBQTJCLEVBQUU7UUFDM0QsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBb0IsQ0FBQztRQUNyRSxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFvQixDQUFDO1FBQ25FLElBQUksUUFBUSxFQUFFLEtBQUssSUFBSSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7WUFDdEMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDckMsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDO2FBQU0sQ0FBQztZQUNOLE1BQU0sUUFBUSxHQUFHLFlBQVksbUJBQW1CLG9CQUFvQixrQkFBa0IsR0FBRyxDQUFDO1lBQzFGLFNBQVMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUM1QyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUM5QixDQUFDO0lBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQzNCLG1CQUEyQixFQUMzQixrQkFBMEIsRUFDMUIsRUFBRTtJQUNGLE9BQU8sQ0FBQyxPQUF3QixFQUEyQixFQUFFO1FBQzNELE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQW9CLENBQUM7UUFDckUsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBb0IsQ0FBQztRQUNuRSxJQUFJLFFBQVEsRUFBRSxLQUFLLElBQUksT0FBTyxFQUFFLEtBQUssRUFBRSxDQUFDO1lBQ3RDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLFlBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQzthQUFNLENBQUM7WUFDTixNQUFNLFFBQVEsR0FBRyxtQkFBbUIsbUJBQW1CLE9BQU8sa0JBQWtCLEdBQUcsQ0FBQztZQUNwRixTQUFTLENBQUMsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7WUFDNUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQzNDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDO1FBQzlCLENBQUM7SUFDSCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgU2xhdmtvIE1paGFqbG92aWMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBJU0Mtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgYXQgaHR0cHM6Ly93d3cuaXNjLm9yZy9saWNlbnNlcy9cbiAqL1xuXG5pbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIFZhbGlkYXRpb25FcnJvcnMgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IHJlbW92ZUVycm9ycywgc2V0RXJyb3JzIH0gZnJvbSBcIi4vaGVscGVycy9lcnJvcnNcIjtcblxuZXhwb3J0IGNvbnN0IHJlcXVpcmVkSWYgPSAoXG4gIHJlcXVpcmVkQ29udHJvbE5hbWU6IHN0cmluZyxcbiAgY29udHJvbFRvQ2hlY2tOYW1lOiBzdHJpbmdcbikgPT4ge1xuICByZXR1cm4gKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IFZhbGlkYXRpb25FcnJvcnMgfCBudWxsID0+IHtcbiAgICBjb25zdCByZXF1aXJlZCA9IGNvbnRyb2wuZ2V0KHJlcXVpcmVkQ29udHJvbE5hbWUpIGFzIEFic3RyYWN0Q29udHJvbDtcbiAgICBjb25zdCB0b0NoZWNrID0gY29udHJvbC5nZXQoY29udHJvbFRvQ2hlY2tOYW1lKSBhcyBBYnN0cmFjdENvbnRyb2w7XG4gICAgaWYgKHJlcXVpcmVkPy52YWx1ZSB8fCAhdG9DaGVjaz8udmFsdWUpIHtcbiAgICAgIHJlbW92ZUVycm9ycyhyZXF1aXJlZCwgWydyZXF1aXJlZCddKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBlcnJvclZhbCA9IGBSZXF1aXJlZCAke3JlcXVpcmVkQ29udHJvbE5hbWV9IHdoZW4gaGF2aW5nICR7Y29udHJvbFRvQ2hlY2tOYW1lfS5gO1xuICAgICAgc2V0RXJyb3JzKHJlcXVpcmVkLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHJldHVybiB7IFtlcnJvclZhbF06IHRydWUgfTtcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgcmVxdWlyZWRJZk5vdCA9IChcbiAgcmVxdWlyZWRDb250cm9sTmFtZTogc3RyaW5nLFxuICBjb250cm9sVG9DaGVja05hbWU6IHN0cmluZ1xuKSA9PiB7XG4gIHJldHVybiAoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogVmFsaWRhdGlvbkVycm9ycyB8IG51bGwgPT4ge1xuICAgIGNvbnN0IHJlcXVpcmVkID0gY29udHJvbC5nZXQocmVxdWlyZWRDb250cm9sTmFtZSkgYXMgQWJzdHJhY3RDb250cm9sO1xuICAgIGNvbnN0IHRvQ2hlY2sgPSBjb250cm9sLmdldChjb250cm9sVG9DaGVja05hbWUpIGFzIEFic3RyYWN0Q29udHJvbDtcbiAgICBpZiAocmVxdWlyZWQ/LnZhbHVlIHx8IHRvQ2hlY2s/LnZhbHVlKSB7XG4gICAgICByZW1vdmVFcnJvcnMocmVxdWlyZWQsIFsncmVxdWlyZWQnXSk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgZXJyb3JWYWwgPSBgUmVxdWlyZWQgJHtyZXF1aXJlZENvbnRyb2xOYW1lfSB3aGVuIG5vdCBoYXZpbmcgJHtjb250cm9sVG9DaGVja05hbWV9LmA7XG4gICAgICBzZXRFcnJvcnMocmVxdWlyZWQsIHsgcmVxdWlyZWQ6IGVycm9yVmFsIH0pO1xuICAgICAgcmV0dXJuIHsgW2Vycm9yVmFsXTogdHJ1ZSB9O1xuICAgIH1cbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCByZXF1aXJlZEV0aGVyID0gKFxuICByZXF1aXJlZENvbnRyb2xOYW1lOiBzdHJpbmcsXG4gIGNvbnRyb2xUb0NoZWNrTmFtZTogc3RyaW5nXG4pID0+IHtcbiAgcmV0dXJuIChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiBWYWxpZGF0aW9uRXJyb3JzIHwgbnVsbCA9PiB7XG4gICAgY29uc3QgcmVxdWlyZWQgPSBjb250cm9sLmdldChyZXF1aXJlZENvbnRyb2xOYW1lKSBhcyBBYnN0cmFjdENvbnRyb2w7XG4gICAgY29uc3QgdG9DaGVjayA9IGNvbnRyb2wuZ2V0KGNvbnRyb2xUb0NoZWNrTmFtZSkgYXMgQWJzdHJhY3RDb250cm9sO1xuICAgIGlmIChyZXF1aXJlZD8udmFsdWUgfHwgdG9DaGVjaz8udmFsdWUpIHtcbiAgICAgIHJlbW92ZUVycm9ycyhyZXF1aXJlZCwgWydyZXF1aXJlZCddKTtcbiAgICAgIHJlbW92ZUVycm9ycyh0b0NoZWNrLCBbJ3JlcXVpcmVkJ10pO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVycm9yVmFsID0gYFJlcXVpcmVkIGVpdGhlciAke3JlcXVpcmVkQ29udHJvbE5hbWV9IG9yICR7Y29udHJvbFRvQ2hlY2tOYW1lfS5gO1xuICAgICAgc2V0RXJyb3JzKHJlcXVpcmVkLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHNldEVycm9ycyh0b0NoZWNrLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHJldHVybiB7IFtlcnJvclZhbF06IHRydWUgfTtcbiAgICB9XG4gIH07XG59OyJdfQ==","originalSourcemap":{"version":3,"file":"ngx-form-group-validators.js","sourceRoot":"","sources":["../../../../projects/ngx-validator-pack/src/lib/ngx-form-group-validators.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,9,0],[7,0,9,7],[9,0,9,9],[21,0,9,21],[23,0,9,23],[32,0,9,32],[34,0,9,34],[40,0,9,40],[58,0,9,58],[59,0,9,59]],[[0,0,11,0],[6,0,11,6],[7,0,11,7],[13,0,11,13],[23,0,11,23],[26,0,11,26],[27,0,12,2],[46,0,12,29],[48,0,13,2],[66,0,13,28],[68,0,14,2],[70,0,14,4]],[[4,0,15,2],[11,0,15,9],[12,0,15,10],[19,0,15,34],[21,0,15,61],[23,0,15,63]],[[8,0,16,4],[14,0,16,10],[22,0,16,18],[25,0,16,21],[32,0,16,28],[33,0,16,29],[36,0,16,32],[37,0,16,33],[56,0,16,52],[57,0,16,72],[58,0,16,73]],[[8,0,17,4],[14,0,17,10],[21,0,17,17],[24,0,17,20],[31,0,17,27],[32,0,17,28],[35,0,17,31],[36,0,17,32],[54,0,17,50],[55,0,17,70],[56,0,17,71]],[[8,0,18,4],[12,0,18,8],[20,0,18,16],[22,0,18,18],[27,0,18,23],[31,0,18,27],[32,0,18,28],[39,0,18,35],[41,0,18,37],[46,0,18,42],[48,0,18,44],[49,0,18,45]],[[12,0,19,6],[24,0,19,18],[25,0,19,19],[33,0,19,27],[35,0,19,29],[36,0,19,30],[46,0,19,40],[47,0,19,41],[48,0,19,42],[49,0,19,43]],[[12,0,20,6],[19,0,20,13],[23,0,20,17],[24,0,20,18]],[[8,0,21,4],[9,0,21,5]],[[13,0,21,11],[14,0,21,12]],[[12,0,22,6],[18,0,22,12],[26,0,22,20],[29,0,22,23],[41,0,22,35],[60,0,22,54],[76,0,22,70],[94,0,22,88],[97,0,22,91],[98,0,22,92]],[[12,0,23,6],[21,0,23,15],[22,0,23,16],[30,0,23,24],[32,0,23,26],[34,0,23,28],[42,0,23,36],[44,0,23,38],[52,0,23,46],[54,0,23,48],[55,0,23,49],[56,0,23,50]],[[12,0,24,6],[19,0,24,13],[21,0,24,15],[22,0,24,16],[30,0,24,24],[31,0,24,25],[33,0,24,27],[37,0,24,31],[39,0,24,33],[40,0,24,34]],[[8,0,25,4],[9,0,25,5]],[[4,0,26,2],[5,0,26,3],[6,0,26,4]],[[0,0,27,0],[1,0,27,1],[2,0,27,2]],[[0,0,29,0],[6,0,29,6],[7,0,29,7],[13,0,29,13],[26,0,29,26],[29,0,29,29],[30,0,30,2],[49,0,30,29],[51,0,31,2],[69,0,31,28],[71,0,32,2],[73,0,32,4]],[[4,0,33,2],[11,0,33,9],[12,0,33,10],[19,0,33,34],[21,0,33,61],[23,0,33,63]],[[8,0,34,4],[14,0,34,10],[22,0,34,18],[25,0,34,21],[32,0,34,28],[33,0,34,29],[36,0,34,32],[37,0,34,33],[56,0,34,52],[57,0,34,72],[58,0,34,73]],[[8,0,35,4],[14,0,35,10],[21,0,35,17],[24,0,35,20],[31,0,35,27],[32,0,35,28],[35,0,35,31],[36,0,35,32],[54,0,35,50],[55,0,35,70],[56,0,35,71]],[[8,0,36,4],[12,0,36,8],[20,0,36,16],[22,0,36,18],[27,0,36,23],[31,0,36,27],[38,0,36,34],[40,0,36,36],[45,0,36,41],[47,0,36,43],[48,0,36,44]],[[12,0,37,6],[24,0,37,18],[25,0,37,19],[33,0,37,27],[35,0,37,29],[36,0,37,30],[46,0,37,40],[47,0,37,41],[48,0,37,42],[49,0,37,43]],[[12,0,38,6],[19,0,38,13],[23,0,38,17],[24,0,38,18]],[[8,0,39,4],[9,0,39,5]],[[13,0,39,11],[14,0,39,12]],[[12,0,40,6],[18,0,40,12],[26,0,40,20],[29,0,40,23],[41,0,40,35],[60,0,40,54],[80,0,40,74],[98,0,40,92],[101,0,40,95],[102,0,40,96]],[[12,0,41,6],[21,0,41,15],[22,0,41,16],[30,0,41,24],[32,0,41,26],[34,0,41,28],[42,0,41,36],[44,0,41,38],[52,0,41,46],[54,0,41,48],[55,0,41,49],[56,0,41,50]],[[12,0,42,6],[19,0,42,13],[21,0,42,15],[22,0,42,16],[30,0,42,24],[31,0,42,25],[33,0,42,27],[37,0,42,31],[39,0,42,33],[40,0,42,34]],[[8,0,43,4],[9,0,43,5]],[[4,0,44,2],[5,0,44,3],[6,0,44,4]],[[0,0,45,0],[1,0,45,1],[2,0,45,2]],[[0,0,47,0],[6,0,47,6],[7,0,47,7],[13,0,47,13],[26,0,47,26],[29,0,47,29],[30,0,48,2],[49,0,48,29],[51,0,49,2],[69,0,49,28],[71,0,50,2],[73,0,50,4]],[[4,0,51,2],[11,0,51,9],[12,0,51,10],[19,0,51,34],[21,0,51,61],[23,0,51,63]],[[8,0,52,4],[14,0,52,10],[22,0,52,18],[25,0,52,21],[32,0,52,28],[33,0,52,29],[36,0,52,32],[37,0,52,33],[56,0,52,52],[57,0,52,72],[58,0,52,73]],[[8,0,53,4],[14,0,53,10],[21,0,53,17],[24,0,53,20],[31,0,53,27],[32,0,53,28],[35,0,53,31],[36,0,53,32],[54,0,53,50],[55,0,53,70],[56,0,53,71]],[[8,0,54,4],[12,0,54,8],[20,0,54,16],[22,0,54,18],[27,0,54,23],[31,0,54,27],[38,0,54,34],[40,0,54,36],[45,0,54,41],[47,0,54,43],[48,0,54,44]],[[12,0,55,6],[24,0,55,18],[25,0,55,19],[33,0,55,27],[35,0,55,29],[36,0,55,30],[46,0,55,40],[47,0,55,41],[48,0,55,42],[49,0,55,43]],[[12,0,56,6],[24,0,56,18],[25,0,56,19],[32,0,56,26],[34,0,56,28],[35,0,56,29],[45,0,56,39],[46,0,56,40],[47,0,56,41],[48,0,56,42]],[[12,0,57,6],[19,0,57,13],[23,0,57,17],[24,0,57,18]],[[8,0,58,4],[9,0,58,5]],[[13,0,58,11],[14,0,58,12]],[[12,0,59,6],[18,0,59,12],[26,0,59,20],[29,0,59,23],[48,0,59,42],[67,0,59,61],[74,0,59,68],[92,0,59,86],[95,0,59,89],[96,0,59,90]],[[12,0,60,6],[21,0,60,15],[22,0,60,16],[30,0,60,24],[32,0,60,26],[34,0,60,28],[42,0,60,36],[44,0,60,38],[52,0,60,46],[54,0,60,48],[55,0,60,49],[56,0,60,50]],[[12,0,61,6],[21,0,61,15],[22,0,61,16],[29,0,61,23],[31,0,61,25],[33,0,61,27],[41,0,61,35],[43,0,61,37],[51,0,61,45],[53,0,61,47],[54,0,61,48],[55,0,61,49]],[[12,0,62,6],[19,0,62,13],[21,0,62,15],[22,0,62,16],[30,0,62,24],[31,0,62,25],[33,0,62,27],[37,0,62,31],[39,0,62,33],[40,0,62,34]],[[8,0,63,4],[9,0,63,5]],[[4,0,64,2],[5,0,64,3],[6,0,64,4]],[[0,0,65,0],[1,0,65,1],[2,0,65,2]]],"sourcesContent":["/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\n\nimport { AbstractControl, ValidationErrors } from \"@angular/forms\";\nimport { removeErrors, setErrors } from \"./helpers/errors\";\n\nexport const requiredIf = (\n  requiredControlName: string,\n  controlToCheckName: string\n) => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const required = control.get(requiredControlName) as AbstractControl;\n    const toCheck = control.get(controlToCheckName) as AbstractControl;\n    if (required?.value || !toCheck?.value) {\n      removeErrors(required, ['required']);\n      return null;\n    } else {\n      const errorVal = `Required ${requiredControlName} when having ${controlToCheckName}.`;\n      setErrors(required, { required: errorVal });\n      return { [errorVal]: true };\n    }\n  };\n};\n\nexport const requiredIfNot = (\n  requiredControlName: string,\n  controlToCheckName: string\n) => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const required = control.get(requiredControlName) as AbstractControl;\n    const toCheck = control.get(controlToCheckName) as AbstractControl;\n    if (required?.value || toCheck?.value) {\n      removeErrors(required, ['required']);\n      return null;\n    } else {\n      const errorVal = `Required ${requiredControlName} when not having ${controlToCheckName}.`;\n      setErrors(required, { required: errorVal });\n      return { [errorVal]: true };\n    }\n  };\n};\n\nexport const requiredEther = (\n  requiredControlName: string,\n  controlToCheckName: string\n) => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const required = control.get(requiredControlName) as AbstractControl;\n    const toCheck = control.get(controlToCheckName) as AbstractControl;\n    if (required?.value || toCheck?.value) {\n      removeErrors(required, ['required']);\n      removeErrors(toCheck, ['required']);\n      return null;\n    } else {\n      const errorVal = `Required either ${requiredControlName} or ${controlToCheckName}.`;\n      setErrors(required, { required: errorVal });\n      setErrors(toCheck, { required: errorVal });\n      return { [errorVal]: true };\n    }\n  };\n};"]},"resolvedIds":{"./helpers/errors":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/errors.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1279,"body":[{"type":"ExportAllDeclaration","start":239,"end":276,"exported":null,"source":{"type":"Literal","start":253,"end":275,"value":"./lib/ngx-validators","raw":"'./lib/ngx-validators'"},"attributes":[]},{"type":"ExportAllDeclaration","start":277,"end":323,"exported":null,"source":{"type":"Literal","start":291,"end":322,"value":"./lib/ngx-prebuilt-validators","raw":"'./lib/ngx-prebuilt-validators'"},"attributes":[]},{"type":"ExportAllDeclaration","start":324,"end":372,"exported":null,"source":{"type":"Literal","start":338,"end":371,"value":"./lib/ngx-form-group-validators","raw":"'./lib/ngx-form-group-validators'"},"attributes":[]}],"_rollupRemoved":[{"end":1279,"start":373,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n *\n * Public API Surface of ngx-validator-pack\n */\nexport * from './lib/ngx-validators';\nexport * from './lib/ngx-prebuilt-validators';\nexport * from './lib/ngx-form-group-validators';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7R0FRRztBQUVILGNBQWMsc0JBQXNCLENBQUM7QUFDckMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLGlDQUFpQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFNsYXZrbyBNaWhhamxvdmljIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gSVNDLXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmlzYy5vcmcvbGljZW5zZXMvXG4gKiBcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBuZ3gtdmFsaWRhdG9yLXBhY2tcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtdmFsaWRhdG9ycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtcHJlYnVpbHQtdmFsaWRhdG9ycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtZm9ybS1ncm91cC12YWxpZGF0b3JzJztcbiJdfQ==","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-prebuilt-validators.mjs","/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-form-group-validators.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/public-api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n *\n * Public API Surface of ngx-validator-pack\n */\nexport * from './lib/ngx-validators';\nexport * from './lib/ngx-prebuilt-validators';\nexport * from './lib/ngx-form-group-validators';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7R0FRRztBQUVILGNBQWMsc0JBQXNCLENBQUM7QUFDckMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLGlDQUFpQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFNsYXZrbyBNaWhhamxvdmljIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gSVNDLXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmlzYy5vcmcvbGljZW5zZXMvXG4gKiBcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBuZ3gtdmFsaWRhdG9yLXBhY2tcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtdmFsaWRhdG9ycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtcHJlYnVpbHQtdmFsaWRhdG9ycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtZm9ybS1ncm91cC12YWxpZGF0b3JzJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"public-api.js","sourceRoot":"","sources":["../../../projects/ngx-validator-pack/src/public-api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[],[],[[3,0,8,3]],[[0,0,10,0],[14,0,10,14],[36,0,10,36],[37,0,10,37]],[[0,0,11,0],[14,0,11,14],[45,0,11,45],[46,0,11,46]],[[0,0,12,0],[14,0,12,14],[47,0,12,47],[48,0,12,48]]],"sourcesContent":["/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n * \n * Public API Surface of ngx-validator-pack\n */\n\nexport * from './lib/ngx-validators';\nexport * from './lib/ngx-prebuilt-validators';\nexport * from './lib/ngx-form-group-validators';\n"]},"resolvedIds":{"./lib/ngx-validators":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false},"./lib/ngx-prebuilt-validators":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-prebuilt-validators.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false},"./lib/ngx-form-group-validators":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-form-group-validators.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":528,"body":[{"type":"ExportAllDeclaration","start":48,"end":77,"exported":null,"source":{"type":"Literal","start":62,"end":76,"value":"./public-api","raw":"'./public-api'"},"attributes":[]}],"_rollupRemoved":[{"end":528,"start":78,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * Generated bundle index. Do not edit.\n */\nexport * from './public-api';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXZhbGlkYXRvci1wYWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvbmd4LXZhbGlkYXRvci1wYWNrL3NyYy9uZ3gtdmFsaWRhdG9yLXBhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/public-api.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/ngx-validator-pack.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\n * Generated bundle index. Do not edit.\n */\nexport * from './public-api';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXZhbGlkYXRvci1wYWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvbmd4LXZhbGlkYXRvci1wYWNrL3NyYy9uZ3gtdmFsaWRhdG9yLXBhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"ngx-validator-pack.js","sourceRoot":"","sources":["../../../projects/ngx-validator-pack/src/ngx-validator-pack.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"resolvedIds":{"./public-api":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/public-api.mjs","meta":{},"moduleSideEffects":true,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"json":{},"file-loader":{}}}