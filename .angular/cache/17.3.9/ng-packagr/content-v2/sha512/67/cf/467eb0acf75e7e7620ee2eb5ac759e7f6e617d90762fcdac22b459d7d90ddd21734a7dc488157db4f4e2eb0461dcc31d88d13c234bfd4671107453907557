{"modules":[{"ast":{"type":"Program","start":0,"end":5206,"body":[{"type":"ExportNamedDeclaration","start":0,"end":406,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7,"end":406,"kind":"const","declarations":[{"type":"VariableDeclarator","start":13,"end":405,"id":{"type":"Identifier","start":13,"end":29,"name":"prepareToCompare"},"init":{"type":"ArrowFunctionExpression","start":32,"end":405,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":33,"end":37,"name":"date"},{"type":"Identifier","start":39,"end":50,"name":"bufferYears"}],"body":{"type":"BlockStatement","start":55,"end":405,"body":[{"type":"IfStatement","start":61,"end":403,"test":{"type":"Identifier","start":65,"end":69,"name":"date"},"consequent":{"type":"BlockStatement","start":71,"end":368,"body":[{"type":"VariableDeclaration","start":81,"end":134,"kind":"const","declarations":[{"type":"VariableDeclarator","start":87,"end":133,"id":{"type":"Identifier","start":87,"end":91,"name":"year"},"init":{"type":"BinaryExpression","start":94,"end":133,"operator":"+","left":{"type":"CallExpression","start":94,"end":112,"optional":false,"callee":{"type":"MemberExpression","start":94,"end":110,"computed":false,"optional":false,"object":{"type":"Identifier","start":94,"end":98,"name":"date"},"property":{"type":"Identifier","start":99,"end":110,"name":"getFullYear"}},"arguments":[]},"right":{"type":"LogicalExpression","start":116,"end":132,"operator":"||","left":{"type":"Identifier","start":116,"end":127,"name":"bufferYears"},"right":{"type":"Literal","start":131,"end":132,"raw":"0","value":0}}}}]},{"type":"VariableDeclaration","start":143,"end":177,"kind":"const","declarations":[{"type":"VariableDeclarator","start":149,"end":176,"id":{"type":"Identifier","start":149,"end":154,"name":"month"},"init":{"type":"BinaryExpression","start":157,"end":176,"operator":"+","left":{"type":"CallExpression","start":157,"end":172,"optional":false,"callee":{"type":"MemberExpression","start":157,"end":170,"computed":false,"optional":false,"object":{"type":"Identifier","start":157,"end":161,"name":"date"},"property":{"type":"Identifier","start":162,"end":170,"name":"getMonth"}},"arguments":[]},"right":{"type":"Literal","start":175,"end":176,"raw":"1","value":1}}}]},{"type":"VariableDeclaration","start":186,"end":213,"kind":"const","declarations":[{"type":"VariableDeclarator","start":192,"end":212,"id":{"type":"Identifier","start":192,"end":195,"name":"day"},"init":{"type":"CallExpression","start":198,"end":212,"optional":false,"callee":{"type":"MemberExpression","start":198,"end":210,"computed":false,"optional":false,"object":{"type":"Identifier","start":198,"end":202,"name":"date"},"property":{"type":"Identifier","start":203,"end":210,"name":"getDate"}},"arguments":[]}}]},{"type":"ReturnStatement","start":222,"end":362,"argument":{"type":"CallExpression","start":229,"end":361,"optional":false,"callee":{"type":"MemberExpression","start":229,"end":244,"computed":false,"optional":false,"object":{"type":"Identifier","start":229,"end":235,"name":"Number"},"property":{"type":"Identifier","start":236,"end":244,"name":"parseInt"}},"arguments":[{"type":"TemplateLiteral","start":245,"end":360,"quasis":[{"type":"TemplateElement","start":246,"end":246,"tail":false,"value":{"cooked":"","raw":""}},{"type":"TemplateElement","start":253,"end":253,"tail":false,"value":{"cooked":"","raw":""}},{"type":"TemplateElement","start":313,"end":313,"tail":false,"value":{"cooked":"","raw":""}},{"type":"TemplateElement","start":359,"end":359,"tail":true,"value":{"cooked":"","raw":""}}],"expressions":[{"type":"Identifier","start":248,"end":252,"name":"year"},{"type":"ConditionalExpression","start":255,"end":312,"test":{"type":"BinaryExpression","start":255,"end":290,"operator":">","left":{"type":"MemberExpression","start":255,"end":286,"computed":false,"optional":false,"object":{"type":"MemberExpression","start":255,"end":279,"computed":false,"optional":false,"object":{"type":"CallExpression","start":255,"end":271,"optional":false,"callee":{"type":"MemberExpression","start":255,"end":269,"computed":false,"optional":false,"object":{"type":"Identifier","start":255,"end":260,"name":"month"},"property":{"type":"Identifier","start":261,"end":269,"name":"toString"}},"arguments":[]},"property":{"type":"Identifier","start":272,"end":279,"name":"replace"}},"property":{"type":"Identifier","start":280,"end":286,"name":"length"}},"right":{"type":"Literal","start":289,"end":290,"raw":"1","value":1}},"consequent":{"type":"Identifier","start":293,"end":298,"name":"month"},"alternate":{"type":"BinaryExpression","start":301,"end":312,"operator":"+","left":{"type":"Literal","start":301,"end":304,"value":"0","raw":"'0'"},"right":{"type":"Identifier","start":307,"end":312,"name":"month"}}},{"type":"ConditionalExpression","start":315,"end":358,"test":{"type":"BinaryExpression","start":315,"end":340,"operator":">","left":{"type":"MemberExpression","start":315,"end":336,"computed":false,"optional":false,"object":{"type":"CallExpression","start":315,"end":329,"optional":false,"callee":{"type":"MemberExpression","start":315,"end":327,"computed":false,"optional":false,"object":{"type":"Identifier","start":315,"end":318,"name":"day"},"property":{"type":"Identifier","start":319,"end":327,"name":"toString"}},"arguments":[]},"property":{"type":"Identifier","start":330,"end":336,"name":"length"}},"right":{"type":"Literal","start":339,"end":340,"raw":"1","value":1}},"consequent":{"type":"Identifier","start":343,"end":346,"name":"day"},"alternate":{"type":"BinaryExpression","start":349,"end":358,"operator":"+","left":{"type":"Literal","start":349,"end":352,"value":"0","raw":"'0'"},"right":{"type":"Identifier","start":355,"end":358,"name":"day"}}}]}]}}]},"alternate":{"type":"BlockStatement","start":378,"end":403,"body":[{"type":"ReturnStatement","start":388,"end":397,"argument":{"type":"Literal","start":395,"end":396,"raw":"0","value":0}}]}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":407,"end":521,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":414,"end":521,"kind":"const","declarations":[{"type":"VariableDeclarator","start":420,"end":520,"id":{"type":"Identifier","start":420,"end":432,"name":"compareDates"},"init":{"type":"ArrowFunctionExpression","start":435,"end":520,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":436,"end":441,"name":"date1"},{"type":"Identifier","start":443,"end":448,"name":"date2"},{"type":"AssignmentPattern","start":450,"end":467,"left":{"type":"Identifier","start":450,"end":459,"name":"operation"},"right":{"type":"Literal","start":462,"end":467,"value":"===","raw":"'==='"}}],"body":{"type":"BlockStatement","start":472,"end":520,"body":[{"type":"ReturnStatement","start":478,"end":518,"argument":{"type":"CallExpression","start":485,"end":517,"optional":false,"callee":{"type":"Identifier","start":485,"end":492,"name":"compare"},"arguments":[{"type":"Identifier","start":493,"end":498,"name":"date1"},{"type":"Identifier","start":500,"end":505,"name":"date2"},{"type":"Identifier","start":507,"end":516,"name":"operation"}]}}]},"id":null}}]}},{"type":"VariableDeclaration","start":522,"end":1059,"kind":"const","declarations":[{"type":"VariableDeclarator","start":528,"end":1058,"id":{"type":"Identifier","start":528,"end":535,"name":"compare"},"init":{"type":"ArrowFunctionExpression","start":538,"end":1058,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":539,"end":544,"name":"date1"},{"type":"Identifier","start":546,"end":551,"name":"date2"},{"type":"Identifier","start":553,"end":563,"name":"comparison"}],"body":{"type":"BlockStatement","start":568,"end":1058,"body":[{"type":"VariableDeclaration","start":574,"end":1007,"kind":"const","declarations":[{"type":"VariableDeclarator","start":580,"end":1006,"id":{"type":"Identifier","start":580,"end":590,"name":"operations"},"init":{"type":"ObjectExpression","start":593,"end":1006,"properties":[{"type":"Property","start":603,"end":659,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":603,"end":606,"value":"<","raw":"'<'"},"value":{"type":"ArrowFunctionExpression","start":608,"end":659,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":609,"end":610,"name":"a"},{"type":"Identifier","start":612,"end":613,"name":"b"}],"body":{"type":"BinaryExpression","start":618,"end":659,"operator":"<","left":{"type":"CallExpression","start":618,"end":637,"optional":false,"callee":{"type":"Identifier","start":618,"end":634,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":635,"end":636,"name":"a"}]},"right":{"type":"CallExpression","start":640,"end":659,"optional":false,"callee":{"type":"Identifier","start":640,"end":656,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":657,"end":658,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":669,"end":725,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":669,"end":672,"value":">","raw":"'>'"},"value":{"type":"ArrowFunctionExpression","start":674,"end":725,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":675,"end":676,"name":"a"},{"type":"Identifier","start":678,"end":679,"name":"b"}],"body":{"type":"BinaryExpression","start":684,"end":725,"operator":">","left":{"type":"CallExpression","start":684,"end":703,"optional":false,"callee":{"type":"Identifier","start":684,"end":700,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":701,"end":702,"name":"a"}]},"right":{"type":"CallExpression","start":706,"end":725,"optional":false,"callee":{"type":"Identifier","start":706,"end":722,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":723,"end":724,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":735,"end":793,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":735,"end":739,"value":"==","raw":"'=='"},"value":{"type":"ArrowFunctionExpression","start":741,"end":793,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":742,"end":743,"name":"a"},{"type":"Identifier","start":745,"end":746,"name":"b"}],"body":{"type":"BinaryExpression","start":751,"end":793,"operator":"==","left":{"type":"CallExpression","start":751,"end":770,"optional":false,"callee":{"type":"Identifier","start":751,"end":767,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":768,"end":769,"name":"a"}]},"right":{"type":"CallExpression","start":774,"end":793,"optional":false,"callee":{"type":"Identifier","start":774,"end":790,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":791,"end":792,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":803,"end":863,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":803,"end":808,"value":"===","raw":"'==='"},"value":{"type":"ArrowFunctionExpression","start":810,"end":863,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":811,"end":812,"name":"a"},{"type":"Identifier","start":814,"end":815,"name":"b"}],"body":{"type":"BinaryExpression","start":820,"end":863,"operator":"===","left":{"type":"CallExpression","start":820,"end":839,"optional":false,"callee":{"type":"Identifier","start":820,"end":836,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":837,"end":838,"name":"a"}]},"right":{"type":"CallExpression","start":844,"end":863,"optional":false,"callee":{"type":"Identifier","start":844,"end":860,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":861,"end":862,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":873,"end":931,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":873,"end":877,"value":"<=","raw":"'<='"},"value":{"type":"ArrowFunctionExpression","start":879,"end":931,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":880,"end":881,"name":"a"},{"type":"Identifier","start":883,"end":884,"name":"b"}],"body":{"type":"BinaryExpression","start":889,"end":931,"operator":"<=","left":{"type":"CallExpression","start":889,"end":908,"optional":false,"callee":{"type":"Identifier","start":889,"end":905,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":906,"end":907,"name":"a"}]},"right":{"type":"CallExpression","start":912,"end":931,"optional":false,"callee":{"type":"Identifier","start":912,"end":928,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":929,"end":930,"name":"b"}]}},"id":null},"kind":"init"},{"type":"Property","start":941,"end":999,"method":false,"shorthand":false,"computed":false,"key":{"type":"Literal","start":941,"end":945,"value":">=","raw":"'>='"},"value":{"type":"ArrowFunctionExpression","start":947,"end":999,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":948,"end":949,"name":"a"},{"type":"Identifier","start":951,"end":952,"name":"b"}],"body":{"type":"BinaryExpression","start":957,"end":999,"operator":">=","left":{"type":"CallExpression","start":957,"end":976,"optional":false,"callee":{"type":"Identifier","start":957,"end":973,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":974,"end":975,"name":"a"}]},"right":{"type":"CallExpression","start":980,"end":999,"optional":false,"callee":{"type":"Identifier","start":980,"end":996,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":997,"end":998,"name":"b"}]}},"id":null},"kind":"init"}]}}]},{"type":"ReturnStatement","start":1012,"end":1056,"argument":{"type":"CallExpression","start":1019,"end":1055,"optional":false,"callee":{"type":"MemberExpression","start":1019,"end":1041,"computed":true,"optional":false,"object":{"type":"Identifier","start":1019,"end":1029,"name":"operations"},"property":{"type":"Identifier","start":1030,"end":1040,"name":"comparison"}},"arguments":[{"type":"Identifier","start":1042,"end":1047,"name":"date1"},{"type":"Identifier","start":1049,"end":1054,"name":"date2"}]}}]},"id":null}}]}],"_rollupRemoved":[{"end":5206,"start":1060,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"export const prepareToCompare = (date, bufferYears) => {\n    if (date) {\n        const year = date.getFullYear() + (bufferYears || 0);\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return Number.parseInt(`${year}${month.toString().replace.length > 1 ? month : '0' + month}${day.toString().length > 1 ? day : '0' + day}`);\n    }\n    else {\n        return 0;\n    }\n};\nexport const compareDates = (date1, date2, operation = '===') => {\n    return compare(date1, date2, operation);\n};\nconst compare = (date1, date2, comparison) => {\n    const operations = {\n        '<': (a, b) => prepareToCompare(a) < prepareToCompare(b),\n        '>': (a, b) => prepareToCompare(a) > prepareToCompare(b),\n        '==': (a, b) => prepareToCompare(a) == prepareToCompare(b),\n        '===': (a, b) => prepareToCompare(a) === prepareToCompare(b),\n        '<=': (a, b) => prepareToCompare(a) <= prepareToCompare(b),\n        '>=': (a, b) => prepareToCompare(a) >= prepareToCompare(b),\n    };\n    return operations[comparison](date1, date2);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL2hlbHBlcnMvZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxDQUM1QixJQUFzQixFQUN0QixXQUFvQixFQUNkLEVBQUU7SUFDUixJQUFHLElBQUksRUFBRSxDQUFDO1FBQ04sTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3JELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDbEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzNCLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FDbEIsR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLEdBQUcsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUN0SCxDQUFDO0lBQ04sQ0FBQztTQUNJLENBQUM7UUFDRixPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7QUFDTCxDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFlBQWtDLEtBQUssRUFBVyxFQUFFO0lBQ3ZHLE9BQU8sT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDNUMsQ0FBQyxDQUFBO0FBRUQsTUFBTSxPQUFPLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFVBQWdDLEVBQVcsRUFBRTtJQUNwRixNQUFNLFVBQVUsR0FBRztRQUNmLEdBQUcsRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUNwRSxHQUFHLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDcEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQ3RFLEtBQUssRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxLQUFLLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUN4RSxJQUFJLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDdEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0tBQ3pFLENBQUE7SUFDRCxPQUFPLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDaEQsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgQ29tcGFyaXNvbk9wZXJhdGlvbnMgPSAnPCcgfCAnPicgfCAnPT0nIHwgJz09PScgfCAnPD0nIHwgJz49JztcblxuZXhwb3J0IGNvbnN0IHByZXBhcmVUb0NvbXBhcmUgPSAoXG4gICAgZGF0ZTogRGF0ZSB8IHVuZGVmaW5lZCxcbiAgICBidWZmZXJZZWFycz86IG51bWJlclxuKTogbnVtYmVyID0+IHtcbiAgICBpZihkYXRlKSB7XG4gICAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCkgKyAoYnVmZmVyWWVhcnMgfHwgMCk7XG4gICAgICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTtcbiAgICAgICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICBgJHt5ZWFyfSR7bW9udGgudG9TdHJpbmcoKS5yZXBsYWNlLmxlbmd0aCA+IDEgPyBtb250aCA6ICcwJyArIG1vbnRofSR7ZGF5LnRvU3RyaW5nKCkubGVuZ3RoID4gMSA/IGRheSA6ICcwJyArIGRheX1gXG4gICAgICAgICk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG59IFxuXG5leHBvcnQgY29uc3QgY29tcGFyZURhdGVzID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgb3BlcmF0aW9uOiBDb21wYXJpc29uT3BlcmF0aW9ucyA9ICc9PT0nKTogYm9vbGVhbiA9PiB7XG4gICAgcmV0dXJuIGNvbXBhcmUoZGF0ZTEsIGRhdGUyLCBvcGVyYXRpb24pO1xufVxuXG5jb25zdCBjb21wYXJlID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgY29tcGFyaXNvbjogQ29tcGFyaXNvbk9wZXJhdGlvbnMpOiBib29sZWFuID0+IHtcbiAgICBjb25zdCBvcGVyYXRpb25zID0ge1xuICAgICAgICAnPCc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpIDwgcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz4nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA+IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PSc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpID09IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PT0nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA9PT0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJzw9JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPD0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz49JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPj0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICB9XG4gICAgcmV0dXJuIG9wZXJhdGlvbnNbY29tcGFyaXNvbl0oZGF0ZTEsIGRhdGUyKTtcbn0iXX0=","customTransformCache":false,"dependencies":[],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/date.mjs","meta":{},"moduleSideEffects":true,"originalCode":"export const prepareToCompare = (date, bufferYears) => {\n    if (date) {\n        const year = date.getFullYear() + (bufferYears || 0);\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return Number.parseInt(`${year}${month.toString().replace.length > 1 ? month : '0' + month}${day.toString().length > 1 ? day : '0' + day}`);\n    }\n    else {\n        return 0;\n    }\n};\nexport const compareDates = (date1, date2, operation = '===') => {\n    return compare(date1, date2, operation);\n};\nconst compare = (date1, date2, comparison) => {\n    const operations = {\n        '<': (a, b) => prepareToCompare(a) < prepareToCompare(b),\n        '>': (a, b) => prepareToCompare(a) > prepareToCompare(b),\n        '==': (a, b) => prepareToCompare(a) == prepareToCompare(b),\n        '===': (a, b) => prepareToCompare(a) === prepareToCompare(b),\n        '<=': (a, b) => prepareToCompare(a) <= prepareToCompare(b),\n        '>=': (a, b) => prepareToCompare(a) >= prepareToCompare(b),\n    };\n    return operations[comparison](date1, date2);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL2hlbHBlcnMvZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxDQUM1QixJQUFzQixFQUN0QixXQUFvQixFQUNkLEVBQUU7SUFDUixJQUFHLElBQUksRUFBRSxDQUFDO1FBQ04sTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3JELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDbEMsTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzNCLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FDbEIsR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLEdBQUcsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUN0SCxDQUFDO0lBQ04sQ0FBQztTQUNJLENBQUM7UUFDRixPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7QUFDTCxDQUFDLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFlBQWtDLEtBQUssRUFBVyxFQUFFO0lBQ3ZHLE9BQU8sT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFDNUMsQ0FBQyxDQUFBO0FBRUQsTUFBTSxPQUFPLEdBQUcsQ0FBQyxLQUFXLEVBQUUsS0FBVyxFQUFFLFVBQWdDLEVBQVcsRUFBRTtJQUNwRixNQUFNLFVBQVUsR0FBRztRQUNmLEdBQUcsRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxHQUFHLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUNwRSxHQUFHLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsR0FBRyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDcEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO1FBQ3RFLEtBQUssRUFBRSxDQUFDLENBQU8sRUFBRSxDQUFPLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxLQUFLLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUN4RSxJQUFJLEVBQUUsQ0FBQyxDQUFPLEVBQUUsQ0FBTyxFQUFFLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDdEUsSUFBSSxFQUFFLENBQUMsQ0FBTyxFQUFFLENBQU8sRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLElBQUksZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0tBQ3pFLENBQUE7SUFDRCxPQUFPLFVBQVUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDaEQsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgQ29tcGFyaXNvbk9wZXJhdGlvbnMgPSAnPCcgfCAnPicgfCAnPT0nIHwgJz09PScgfCAnPD0nIHwgJz49JztcblxuZXhwb3J0IGNvbnN0IHByZXBhcmVUb0NvbXBhcmUgPSAoXG4gICAgZGF0ZTogRGF0ZSB8IHVuZGVmaW5lZCxcbiAgICBidWZmZXJZZWFycz86IG51bWJlclxuKTogbnVtYmVyID0+IHtcbiAgICBpZihkYXRlKSB7XG4gICAgICAgIGNvbnN0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCkgKyAoYnVmZmVyWWVhcnMgfHwgMCk7XG4gICAgICAgIGNvbnN0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTtcbiAgICAgICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoXG4gICAgICAgICAgICBgJHt5ZWFyfSR7bW9udGgudG9TdHJpbmcoKS5yZXBsYWNlLmxlbmd0aCA+IDEgPyBtb250aCA6ICcwJyArIG1vbnRofSR7ZGF5LnRvU3RyaW5nKCkubGVuZ3RoID4gMSA/IGRheSA6ICcwJyArIGRheX1gXG4gICAgICAgICk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG59IFxuXG5leHBvcnQgY29uc3QgY29tcGFyZURhdGVzID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgb3BlcmF0aW9uOiBDb21wYXJpc29uT3BlcmF0aW9ucyA9ICc9PT0nKTogYm9vbGVhbiA9PiB7XG4gICAgcmV0dXJuIGNvbXBhcmUoZGF0ZTEsIGRhdGUyLCBvcGVyYXRpb24pO1xufVxuXG5jb25zdCBjb21wYXJlID0gKGRhdGUxOiBEYXRlLCBkYXRlMjogRGF0ZSwgY29tcGFyaXNvbjogQ29tcGFyaXNvbk9wZXJhdGlvbnMpOiBib29sZWFuID0+IHtcbiAgICBjb25zdCBvcGVyYXRpb25zID0ge1xuICAgICAgICAnPCc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpIDwgcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz4nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA+IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PSc6IChhOiBEYXRlLCBiOiBEYXRlKSA9PiBwcmVwYXJlVG9Db21wYXJlKGEpID09IHByZXBhcmVUb0NvbXBhcmUoYiksXG4gICAgICAgICc9PT0nOiAoYTogRGF0ZSwgYjogRGF0ZSkgPT4gcHJlcGFyZVRvQ29tcGFyZShhKSA9PT0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJzw9JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPD0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICAgICAgJz49JzogKGE6IERhdGUsIGI6IERhdGUpID0+IHByZXBhcmVUb0NvbXBhcmUoYSkgPj0gcHJlcGFyZVRvQ29tcGFyZShiKSxcbiAgICB9XG4gICAgcmV0dXJuIG9wZXJhdGlvbnNbY29tcGFyaXNvbl0oZGF0ZTEsIGRhdGUyKTtcbn0iXX0=","originalSourcemap":{"version":3,"file":"date.js","sourceRoot":"","sources":["../../../../../projects/ngx-validator-pack/src/lib/helpers/date.ts"],"names":[],"mappings":[[[0,0,2,0],[6,0,2,6],[7,0,2,7],[13,0,2,13],[29,0,2,29],[32,0,2,32],[33,0,3,4],[37,0,3,26],[39,0,4,4],[50,0,4,24],[52,0,5,10],[54,0,5,12]],[[4,0,6,4],[8,0,6,7],[12,0,6,11],[14,0,6,13],[15,0,6,14]],[[8,0,7,8],[14,0,7,14],[18,0,7,18],[21,0,7,21],[25,0,7,25],[26,0,7,26],[37,0,7,37],[39,0,7,39],[42,0,7,42],[43,0,7,43],[54,0,7,54],[58,0,7,58],[59,0,7,59],[60,0,7,60],[61,0,7,61]],[[8,0,8,8],[14,0,8,14],[19,0,8,19],[22,0,8,22],[26,0,8,26],[27,0,8,27],[35,0,8,35],[37,0,8,37],[40,0,8,40],[41,0,8,41],[42,0,8,42]],[[8,0,9,8],[14,0,9,14],[17,0,9,17],[20,0,9,20],[24,0,9,24],[25,0,9,25],[32,0,9,32],[34,0,9,34],[35,0,9,35]],[[8,0,10,8],[15,0,10,15],[21,0,10,21],[22,0,10,22],[30,0,10,30],[31,0,11,12],[34,0,11,15],[38,0,11,19],[41,0,11,22],[46,0,11,27],[47,0,11,28],[55,0,11,36],[57,0,11,38],[58,0,11,39],[65,0,11,46],[66,0,11,47],[72,0,11,53],[75,0,11,56],[76,0,11,57],[77,0,11,58],[78,0,11,59],[79,0,11,60],[84,0,11,65],[85,0,11,66],[86,0,11,67],[87,0,11,68],[90,0,11,71],[93,0,11,74],[98,0,11,79],[101,0,11,82],[104,0,11,85],[105,0,11,86],[113,0,11,94],[115,0,11,96],[116,0,11,97],[122,0,11,103],[125,0,11,106],[126,0,11,107],[127,0,11,108],[128,0,11,109],[129,0,11,110],[132,0,11,113],[133,0,11,114],[134,0,11,115],[135,0,11,116],[138,0,11,119],[141,0,11,122],[144,0,11,125],[146,0,11,127],[147,0,12,9],[148,0,12,10]],[[4,0,13,4],[5,0,13,5]],[[9,0,14,9],[10,0,14,10]],[[8,0,15,8],[15,0,15,15],[16,0,15,16],[17,0,15,17]],[[4,0,16,4],[5,0,16,5]],[[0,0,17,0],[1,0,17,1],[2,0,17,1]],[[0,0,19,0],[6,0,19,6],[7,0,19,7],[13,0,19,13],[25,0,19,25],[28,0,19,28],[29,0,19,29],[34,0,19,40],[36,0,19,42],[41,0,19,53],[43,0,19,55],[55,0,19,89],[60,0,19,94],[62,0,19,105],[64,0,19,107]],[[4,0,20,4],[11,0,20,11],[18,0,20,18],[19,0,20,19],[24,0,20,24],[26,0,20,26],[31,0,20,31],[33,0,20,33],[42,0,20,42],[43,0,20,43],[44,0,20,44]],[[0,0,21,0],[1,0,21,1],[2,0,21,1]],[[0,0,23,0],[6,0,23,6],[13,0,23,13],[16,0,23,16],[17,0,23,17],[22,0,23,28],[24,0,23,30],[29,0,23,41],[31,0,23,43],[41,0,23,75],[43,0,23,86],[45,0,23,88]],[[4,0,24,4],[10,0,24,10],[20,0,24,20],[23,0,24,23]],[[8,0,25,8],[11,0,25,11],[13,0,25,13],[14,0,25,14],[15,0,25,21],[17,0,25,23],[18,0,25,30],[20,0,25,32],[22,0,25,34],[23,0,25,35],[39,0,25,51],[40,0,25,52],[41,0,25,53],[42,0,25,54],[45,0,25,57],[61,0,25,73],[62,0,25,74],[63,0,25,75],[64,0,25,76]],[[8,0,26,8],[11,0,26,11],[13,0,26,13],[14,0,26,14],[15,0,26,21],[17,0,26,23],[18,0,26,30],[20,0,26,32],[22,0,26,34],[23,0,26,35],[39,0,26,51],[40,0,26,52],[41,0,26,53],[42,0,26,54],[45,0,26,57],[61,0,26,73],[62,0,26,74],[63,0,26,75],[64,0,26,76]],[[8,0,27,8],[12,0,27,12],[14,0,27,14],[15,0,27,15],[16,0,27,22],[18,0,27,24],[19,0,27,31],[21,0,27,33],[23,0,27,35],[24,0,27,36],[40,0,27,52],[41,0,27,53],[42,0,27,54],[43,0,27,55],[47,0,27,59],[63,0,27,75],[64,0,27,76],[65,0,27,77],[66,0,27,78]],[[8,0,28,8],[13,0,28,13],[15,0,28,15],[16,0,28,16],[17,0,28,23],[19,0,28,25],[20,0,28,32],[22,0,28,34],[24,0,28,36],[25,0,28,37],[41,0,28,53],[42,0,28,54],[43,0,28,55],[44,0,28,56],[49,0,28,61],[65,0,28,77],[66,0,28,78],[67,0,28,79],[68,0,28,80]],[[8,0,29,8],[12,0,29,12],[14,0,29,14],[15,0,29,15],[16,0,29,22],[18,0,29,24],[19,0,29,31],[21,0,29,33],[23,0,29,35],[24,0,29,36],[40,0,29,52],[41,0,29,53],[42,0,29,54],[43,0,29,55],[47,0,29,59],[63,0,29,75],[64,0,29,76],[65,0,29,77],[66,0,29,78]],[[8,0,30,8],[12,0,30,12],[14,0,30,14],[15,0,30,15],[16,0,30,22],[18,0,30,24],[19,0,30,31],[21,0,30,33],[23,0,30,35],[24,0,30,36],[40,0,30,52],[41,0,30,53],[42,0,30,54],[43,0,30,55],[47,0,30,59],[63,0,30,75],[64,0,30,76],[65,0,30,77],[66,0,30,78]],[[5,0,31,5],[6,0,31,5]],[[4,0,32,4],[11,0,32,11],[21,0,32,21],[22,0,32,22],[32,0,32,32],[33,0,32,33],[34,0,32,34],[39,0,32,39],[41,0,32,41],[46,0,32,46],[47,0,32,47],[48,0,32,48]],[[0,0,33,0],[1,0,33,1],[2,0,33,1]]],"sourcesContent":["export type ComparisonOperations = '<' | '>' | '==' | '===' | '<=' | '>=';\n\nexport const prepareToCompare = (\n    date: Date | undefined,\n    bufferYears?: number\n): number => {\n    if(date) {\n        const year = date.getFullYear() + (bufferYears || 0);\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return Number.parseInt(\n            `${year}${month.toString().replace.length > 1 ? month : '0' + month}${day.toString().length > 1 ? day : '0' + day}`\n        );\n    }\n    else {\n        return 0;\n    }\n} \n\nexport const compareDates = (date1: Date, date2: Date, operation: ComparisonOperations = '==='): boolean => {\n    return compare(date1, date2, operation);\n}\n\nconst compare = (date1: Date, date2: Date, comparison: ComparisonOperations): boolean => {\n    const operations = {\n        '<': (a: Date, b: Date) => prepareToCompare(a) < prepareToCompare(b),\n        '>': (a: Date, b: Date) => prepareToCompare(a) > prepareToCompare(b),\n        '==': (a: Date, b: Date) => prepareToCompare(a) == prepareToCompare(b),\n        '===': (a: Date, b: Date) => prepareToCompare(a) === prepareToCompare(b),\n        '<=': (a: Date, b: Date) => prepareToCompare(a) <= prepareToCompare(b),\n        '>=': (a: Date, b: Date) => prepareToCompare(a) >= prepareToCompare(b),\n    }\n    return operations[comparison](date1, date2);\n}"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":27324,"body":[{"type":"ImportDeclaration","start":192,"end":257,"specifiers":[{"type":"ImportSpecifier","start":201,"end":213,"imported":{"type":"Identifier","start":201,"end":213,"name":"compareDates"},"local":{"type":"Identifier","start":201,"end":213,"name":"compareDates"}},{"type":"ImportSpecifier","start":215,"end":231,"imported":{"type":"Identifier","start":215,"end":231,"name":"prepareToCompare"},"local":{"type":"Identifier","start":215,"end":231,"name":"prepareToCompare"}}],"source":{"type":"Literal","start":240,"end":256,"value":"./helpers/date","raw":"\"./helpers/date\""},"attributes":[]},{"type":"ExportNamedDeclaration","start":639,"end":990,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":646,"end":990,"kind":"const","declarations":[{"type":"VariableDeclarator","start":652,"end":989,"id":{"type":"Identifier","start":652,"end":672,"name":"regexpMatchValidator"},"init":{"type":"ArrowFunctionExpression","start":675,"end":989,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":676,"end":682,"name":"regexp"},{"type":"Identifier","start":684,"end":693,"name":"errorName"},{"type":"Identifier","start":695,"end":700,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":705,"end":989,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":706,"end":713,"name":"control"}],"body":{"type":"BlockStatement","start":718,"end":989,"body":[{"type":"ExpressionStatement","start":724,"end":798,"expression":{"type":"AssignmentExpression","start":724,"end":797,"operator":"=","left":{"type":"Identifier","start":724,"end":729,"name":"error"},"right":{"type":"LogicalExpression","start":732,"end":797,"operator":"||","left":{"type":"Identifier","start":732,"end":737,"name":"error"},"right":{"type":"Literal","start":741,"end":797,"value":"This control did not match a given regular expression.","raw":"\"This control did not match a given regular expression.\""}}}},{"type":"VariableDeclaration","start":803,"end":914,"kind":"const","declarations":[{"type":"VariableDeclarator","start":809,"end":913,"id":{"type":"Identifier","start":809,"end":815,"name":"errors"},"init":{"type":"ConditionalExpression","start":818,"end":913,"test":{"type":"BinaryExpression","start":818,"end":843,"operator":"===","left":{"type":"UnaryExpression","start":818,"end":830,"operator":"typeof","argument":{"type":"Identifier","start":825,"end":830,"name":"error"},"prefix":true},"right":{"type":"Literal","start":835,"end":843,"value":"string","raw":"\"string\""}},"consequent":{"type":"ObjectExpression","start":854,"end":897,"properties":[{"type":"Property","start":856,"end":895,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":857,"end":887,"operator":"||","left":{"type":"Identifier","start":857,"end":866,"name":"errorName"},"right":{"type":"Literal","start":870,"end":887,"value":"regexpValidator","raw":"\"regexpValidator\""}},"value":{"type":"Identifier","start":890,"end":895,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":908,"end":913,"name":"error"}}}]},{"type":"ReturnStatement","start":919,"end":987,"argument":{"type":"ConditionalExpression","start":926,"end":986,"test":{"type":"LogicalExpression","start":926,"end":970,"operator":"||","left":{"type":"UnaryExpression","start":926,"end":940,"operator":"!","argument":{"type":"MemberExpression","start":927,"end":940,"computed":false,"optional":false,"object":{"type":"Identifier","start":927,"end":934,"name":"control"},"property":{"type":"Identifier","start":935,"end":940,"name":"value"}},"prefix":true},"right":{"type":"CallExpression","start":944,"end":970,"optional":false,"callee":{"type":"MemberExpression","start":944,"end":955,"computed":false,"optional":false,"object":{"type":"Identifier","start":944,"end":950,"name":"regexp"},"property":{"type":"Identifier","start":951,"end":955,"name":"test"}},"arguments":[{"type":"MemberExpression","start":956,"end":969,"computed":false,"optional":false,"object":{"type":"Identifier","start":956,"end":963,"name":"control"},"property":{"type":"Identifier","start":964,"end":969,"name":"value"}}]}},"consequent":{"type":"Literal","start":973,"end":977,"raw":"null","value":null},"alternate":{"type":"Identifier","start":980,"end":986,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":1372,"end":1722,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1379,"end":1722,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1385,"end":1721,"id":{"type":"Identifier","start":1385,"end":1409,"name":"regexpNotAMatchValidator"},"init":{"type":"ArrowFunctionExpression","start":1412,"end":1721,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":1413,"end":1419,"name":"regexp"},{"type":"Identifier","start":1421,"end":1430,"name":"errorName"},{"type":"Identifier","start":1432,"end":1437,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":1442,"end":1721,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":1443,"end":1450,"name":"control"}],"body":{"type":"BlockStatement","start":1455,"end":1721,"body":[{"type":"ExpressionStatement","start":1461,"end":1529,"expression":{"type":"AssignmentExpression","start":1461,"end":1528,"operator":"=","left":{"type":"Identifier","start":1461,"end":1466,"name":"error"},"right":{"type":"LogicalExpression","start":1469,"end":1528,"operator":"||","left":{"type":"Identifier","start":1469,"end":1474,"name":"error"},"right":{"type":"Literal","start":1478,"end":1528,"value":"This control matched a given regular expression.","raw":"\"This control matched a given regular expression.\""}}}},{"type":"VariableDeclaration","start":1534,"end":1645,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1540,"end":1644,"id":{"type":"Identifier","start":1540,"end":1546,"name":"errors"},"init":{"type":"ConditionalExpression","start":1549,"end":1644,"test":{"type":"BinaryExpression","start":1549,"end":1574,"operator":"===","left":{"type":"UnaryExpression","start":1549,"end":1561,"operator":"typeof","argument":{"type":"Identifier","start":1556,"end":1561,"name":"error"},"prefix":true},"right":{"type":"Literal","start":1566,"end":1574,"value":"string","raw":"\"string\""}},"consequent":{"type":"ObjectExpression","start":1585,"end":1628,"properties":[{"type":"Property","start":1587,"end":1626,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":1588,"end":1618,"operator":"||","left":{"type":"Identifier","start":1588,"end":1597,"name":"errorName"},"right":{"type":"Literal","start":1601,"end":1618,"value":"regexpValidator","raw":"\"regexpValidator\""}},"value":{"type":"Identifier","start":1621,"end":1626,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":1639,"end":1644,"name":"error"}}}]},{"type":"ReturnStatement","start":1650,"end":1719,"argument":{"type":"ConditionalExpression","start":1657,"end":1718,"test":{"type":"LogicalExpression","start":1657,"end":1702,"operator":"||","left":{"type":"UnaryExpression","start":1657,"end":1671,"operator":"!","argument":{"type":"MemberExpression","start":1658,"end":1671,"computed":false,"optional":false,"object":{"type":"Identifier","start":1658,"end":1665,"name":"control"},"property":{"type":"Identifier","start":1666,"end":1671,"name":"value"}},"prefix":true},"right":{"type":"UnaryExpression","start":1675,"end":1702,"operator":"!","argument":{"type":"CallExpression","start":1676,"end":1702,"optional":false,"callee":{"type":"MemberExpression","start":1676,"end":1687,"computed":false,"optional":false,"object":{"type":"Identifier","start":1676,"end":1682,"name":"regexp"},"property":{"type":"Identifier","start":1683,"end":1687,"name":"test"}},"arguments":[{"type":"MemberExpression","start":1688,"end":1701,"computed":false,"optional":false,"object":{"type":"Identifier","start":1688,"end":1695,"name":"control"},"property":{"type":"Identifier","start":1696,"end":1701,"name":"value"}}]},"prefix":true}},"consequent":{"type":"Literal","start":1705,"end":1709,"raw":"null","value":null},"alternate":{"type":"Identifier","start":1712,"end":1718,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":2184,"end":2564,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":2191,"end":2564,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2197,"end":2563,"id":{"type":"Identifier","start":2197,"end":2217,"name":"earlierThenValidator"},"init":{"type":"ArrowFunctionExpression","start":2220,"end":2563,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":2221,"end":2225,"name":"date"},{"type":"Identifier","start":2227,"end":2236,"name":"errorName"},{"type":"Identifier","start":2238,"end":2243,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":2248,"end":2563,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":2249,"end":2256,"name":"control"}],"body":{"type":"BlockStatement","start":2261,"end":2563,"body":[{"type":"ExpressionStatement","start":2267,"end":2347,"expression":{"type":"AssignmentExpression","start":2267,"end":2346,"operator":"=","left":{"type":"Identifier","start":2267,"end":2272,"name":"error"},"right":{"type":"LogicalExpression","start":2283,"end":2346,"operator":"||","left":{"type":"Identifier","start":2283,"end":2288,"name":"error"},"right":{"type":"TemplateLiteral","start":2292,"end":2346,"quasis":[{"type":"TemplateElement","start":2293,"end":2337,"tail":false,"value":{"cooked":"This control must have a value earlier then ","raw":"This control must have a value earlier then "}},{"type":"TemplateElement","start":2344,"end":2345,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":2339,"end":2343,"name":"date"}]}}}},{"type":"VariableDeclaration","start":2352,"end":2459,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2358,"end":2458,"id":{"type":"Identifier","start":2358,"end":2364,"name":"errors"},"init":{"type":"ConditionalExpression","start":2367,"end":2458,"test":{"type":"BinaryExpression","start":2367,"end":2392,"operator":"===","left":{"type":"UnaryExpression","start":2367,"end":2379,"operator":"typeof","argument":{"type":"Identifier","start":2374,"end":2379,"name":"error"},"prefix":true},"right":{"type":"Literal","start":2384,"end":2392,"value":"string","raw":"\"string\""}},"consequent":{"type":"ObjectExpression","start":2403,"end":2442,"properties":[{"type":"Property","start":2405,"end":2440,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":2406,"end":2432,"operator":"||","left":{"type":"Identifier","start":2406,"end":2415,"name":"errorName"},"right":{"type":"Literal","start":2419,"end":2432,"value":"earlierThen","raw":"\"earlierThen\""}},"value":{"type":"Identifier","start":2435,"end":2440,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":2453,"end":2458,"name":"error"}}}]},{"type":"ReturnStatement","start":2464,"end":2561,"argument":{"type":"ConditionalExpression","start":2471,"end":2560,"test":{"type":"BinaryExpression","start":2471,"end":2528,"operator":"<","left":{"type":"CallExpression","start":2471,"end":2503,"optional":false,"callee":{"type":"Identifier","start":2471,"end":2487,"name":"prepareToCompare"},"arguments":[{"type":"ChainExpression","start":2488,"end":2502,"expression":{"type":"MemberExpression","start":2488,"end":2502,"computed":false,"optional":true,"object":{"type":"Identifier","start":2488,"end":2495,"name":"control"},"property":{"type":"Identifier","start":2497,"end":2502,"name":"value"}}}]},"right":{"type":"CallExpression","start":2506,"end":2528,"optional":false,"callee":{"type":"Identifier","start":2506,"end":2522,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":2523,"end":2527,"name":"date"}]}},"consequent":{"type":"Literal","start":2539,"end":2543,"raw":"null","value":null},"alternate":{"type":"Identifier","start":2554,"end":2560,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":3026,"end":3384,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3033,"end":3384,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3039,"end":3383,"id":{"type":"Identifier","start":3039,"end":3057,"name":"laterThenValidator"},"init":{"type":"ArrowFunctionExpression","start":3060,"end":3383,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":3061,"end":3065,"name":"date"},{"type":"Identifier","start":3067,"end":3076,"name":"errorName"},{"type":"Identifier","start":3078,"end":3083,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":3088,"end":3383,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":3089,"end":3096,"name":"control"}],"body":{"type":"BlockStatement","start":3101,"end":3383,"body":[{"type":"ExpressionStatement","start":3107,"end":3185,"expression":{"type":"AssignmentExpression","start":3107,"end":3184,"operator":"=","left":{"type":"Identifier","start":3107,"end":3112,"name":"error"},"right":{"type":"LogicalExpression","start":3123,"end":3184,"operator":"||","left":{"type":"Identifier","start":3123,"end":3128,"name":"error"},"right":{"type":"TemplateLiteral","start":3132,"end":3184,"quasis":[{"type":"TemplateElement","start":3133,"end":3175,"tail":false,"value":{"cooked":"This control must have a value later then ","raw":"This control must have a value later then "}},{"type":"TemplateElement","start":3182,"end":3183,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":3177,"end":3181,"name":"date"}]}}}},{"type":"VariableDeclaration","start":3190,"end":3279,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3196,"end":3278,"id":{"type":"Identifier","start":3196,"end":3202,"name":"errors"},"init":{"type":"ConditionalExpression","start":3205,"end":3278,"test":{"type":"BinaryExpression","start":3205,"end":3230,"operator":"===","left":{"type":"UnaryExpression","start":3205,"end":3217,"operator":"typeof","argument":{"type":"Identifier","start":3212,"end":3217,"name":"error"},"prefix":true},"right":{"type":"Literal","start":3222,"end":3230,"value":"string","raw":"\"string\""}},"consequent":{"type":"ObjectExpression","start":3233,"end":3270,"properties":[{"type":"Property","start":3235,"end":3268,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":3236,"end":3260,"operator":"||","left":{"type":"Identifier","start":3236,"end":3245,"name":"errorName"},"right":{"type":"Literal","start":3249,"end":3260,"value":"laterThen","raw":"\"laterThen\""}},"value":{"type":"Identifier","start":3263,"end":3268,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":3273,"end":3278,"name":"error"}}}]},{"type":"ReturnStatement","start":3284,"end":3381,"argument":{"type":"ConditionalExpression","start":3291,"end":3380,"test":{"type":"BinaryExpression","start":3291,"end":3348,"operator":">","left":{"type":"CallExpression","start":3291,"end":3323,"optional":false,"callee":{"type":"Identifier","start":3291,"end":3307,"name":"prepareToCompare"},"arguments":[{"type":"ChainExpression","start":3308,"end":3322,"expression":{"type":"MemberExpression","start":3308,"end":3322,"computed":false,"optional":true,"object":{"type":"Identifier","start":3308,"end":3315,"name":"control"},"property":{"type":"Identifier","start":3317,"end":3322,"name":"value"}}}]},"right":{"type":"CallExpression","start":3326,"end":3348,"optional":false,"callee":{"type":"Identifier","start":3326,"end":3342,"name":"prepareToCompare"},"arguments":[{"type":"Identifier","start":3343,"end":3347,"name":"date"}]}},"consequent":{"type":"Literal","start":3359,"end":3363,"raw":"null","value":null},"alternate":{"type":"Identifier","start":3374,"end":3380,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":3877,"end":4344,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3884,"end":4344,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3890,"end":4343,"id":{"type":"Identifier","start":3890,"end":3908,"name":"compareToValidator"},"init":{"type":"ArrowFunctionExpression","start":3911,"end":4343,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":3912,"end":3921,"name":"filedName"},{"type":"Identifier","start":3923,"end":3933,"name":"comparison"},{"type":"Identifier","start":3935,"end":3944,"name":"errorName"},{"type":"Identifier","start":3946,"end":3951,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":3956,"end":4343,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":3957,"end":3964,"name":"control"}],"body":{"type":"BlockStatement","start":3969,"end":4343,"body":[{"type":"VariableDeclaration","start":3975,"end":4026,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3981,"end":4025,"id":{"type":"Identifier","start":3981,"end":3985,"name":"date"},"init":{"type":"ChainExpression","start":3988,"end":4025,"expression":{"type":"MemberExpression","start":3988,"end":4025,"computed":false,"optional":true,"object":{"type":"CallExpression","start":3988,"end":4018,"optional":false,"callee":{"type":"MemberExpression","start":3988,"end":4007,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":3988,"end":4002,"computed":false,"optional":false,"object":{"type":"Identifier","start":3988,"end":3995,"name":"control"},"property":{"type":"Identifier","start":3996,"end":4002,"name":"parent"}},"property":{"type":"Identifier","start":4004,"end":4007,"name":"get"}},"arguments":[{"type":"Identifier","start":4008,"end":4017,"name":"filedName"}]},"property":{"type":"Identifier","start":4020,"end":4025,"name":"value"}}}}]},{"type":"ExpressionStatement","start":4031,"end":4095,"expression":{"type":"AssignmentExpression","start":4031,"end":4094,"operator":"=","left":{"type":"Identifier","start":4031,"end":4036,"name":"error"},"right":{"type":"LogicalExpression","start":4039,"end":4094,"operator":"||","left":{"type":"Identifier","start":4039,"end":4044,"name":"error"},"right":{"type":"TemplateLiteral","start":4048,"end":4094,"quasis":[{"type":"TemplateElement","start":4049,"end":4071,"tail":false,"value":{"cooked":"Value comparison with ","raw":"Value comparison with "}},{"type":"TemplateElement","start":4085,"end":4093,"tail":true,"value":{"cooked":" failed.","raw":" failed."}}],"expressions":[{"type":"ChainExpression","start":4073,"end":4084,"expression":{"type":"MemberExpression","start":4073,"end":4084,"computed":false,"optional":true,"object":{"type":"Identifier","start":4073,"end":4077,"name":"date"},"property":{"type":"Identifier","start":4079,"end":4084,"name":"value"}}}]}}}},{"type":"VariableDeclaration","start":4100,"end":4210,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4106,"end":4209,"id":{"type":"Identifier","start":4106,"end":4112,"name":"errors"},"init":{"type":"ConditionalExpression","start":4115,"end":4209,"test":{"type":"BinaryExpression","start":4115,"end":4140,"operator":"===","left":{"type":"UnaryExpression","start":4115,"end":4127,"operator":"typeof","argument":{"type":"Identifier","start":4122,"end":4127,"name":"error"},"prefix":true},"right":{"type":"Literal","start":4132,"end":4140,"value":"string","raw":"\"string\""}},"consequent":{"type":"ObjectExpression","start":4151,"end":4193,"properties":[{"type":"Property","start":4153,"end":4191,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":4154,"end":4183,"operator":"||","left":{"type":"Identifier","start":4154,"end":4163,"name":"errorName"},"right":{"type":"Literal","start":4167,"end":4183,"value":"dateComparison","raw":"\"dateComparison\""}},"value":{"type":"Identifier","start":4186,"end":4191,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":4204,"end":4209,"name":"error"}}}]},{"type":"ReturnStatement","start":4215,"end":4341,"argument":{"type":"ConditionalExpression","start":4222,"end":4340,"test":{"type":"LogicalExpression","start":4222,"end":4308,"operator":"&&","left":{"type":"LogicalExpression","start":4222,"end":4251,"operator":"&&","left":{"type":"MemberExpression","start":4222,"end":4235,"computed":false,"optional":false,"object":{"type":"Identifier","start":4222,"end":4229,"name":"control"},"property":{"type":"Identifier","start":4230,"end":4235,"name":"value"}},"right":{"type":"Identifier","start":4247,"end":4251,"name":"date"}},"right":{"type":"CallExpression","start":4263,"end":4308,"optional":false,"callee":{"type":"Identifier","start":4263,"end":4275,"name":"compareDates"},"arguments":[{"type":"MemberExpression","start":4276,"end":4289,"computed":false,"optional":false,"object":{"type":"Identifier","start":4276,"end":4283,"name":"control"},"property":{"type":"Identifier","start":4284,"end":4289,"name":"value"}},{"type":"Identifier","start":4291,"end":4295,"name":"date"},{"type":"Identifier","start":4297,"end":4307,"name":"comparison"}]}},"consequent":{"type":"Literal","start":4319,"end":4323,"raw":"null","value":null},"alternate":{"type":"Identifier","start":4334,"end":4340,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":4712,"end":5120,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4719,"end":5120,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4725,"end":5119,"id":{"type":"Identifier","start":4725,"end":4746,"name":"requiredWhenValidator"},"init":{"type":"ArrowFunctionExpression","start":4749,"end":5119,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":4750,"end":4761,"name":"conditional"},{"type":"Identifier","start":4763,"end":4772,"name":"errorName"},{"type":"Identifier","start":4774,"end":4779,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":4784,"end":5119,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":4785,"end":4792,"name":"control"}],"body":{"type":"BlockStatement","start":4797,"end":5119,"body":[{"type":"ExpressionStatement","start":4803,"end":4864,"expression":{"type":"AssignmentExpression","start":4803,"end":4863,"operator":"=","left":{"type":"Identifier","start":4803,"end":4808,"name":"error"},"right":{"type":"LogicalExpression","start":4811,"end":4863,"operator":"||","left":{"type":"Identifier","start":4811,"end":4816,"name":"error"},"right":{"type":"Literal","start":4820,"end":4863,"value":"This control has a conditional set on it.","raw":"\"This control has a conditional set on it.\""}}}},{"type":"VariableDeclaration","start":4869,"end":4977,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4875,"end":4976,"id":{"type":"Identifier","start":4875,"end":4881,"name":"errors"},"init":{"type":"ConditionalExpression","start":4884,"end":4976,"test":{"type":"BinaryExpression","start":4884,"end":4909,"operator":"===","left":{"type":"UnaryExpression","start":4884,"end":4896,"operator":"typeof","argument":{"type":"Identifier","start":4891,"end":4896,"name":"error"},"prefix":true},"right":{"type":"Literal","start":4901,"end":4909,"value":"string","raw":"\"string\""}},"consequent":{"type":"ObjectExpression","start":4920,"end":4960,"properties":[{"type":"Property","start":4922,"end":4958,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":4923,"end":4950,"operator":"||","left":{"type":"Identifier","start":4923,"end":4932,"name":"errorName"},"right":{"type":"Literal","start":4936,"end":4950,"value":"requiredWhen","raw":"\"requiredWhen\""}},"value":{"type":"Identifier","start":4953,"end":4958,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":4971,"end":4976,"name":"error"}}}]},{"type":"VariableDeclaration","start":4982,"end":5062,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4988,"end":5061,"id":{"type":"Identifier","start":4988,"end":4995,"name":"outcome"},"init":{"type":"ConditionalExpression","start":4998,"end":5061,"test":{"type":"BinaryExpression","start":4998,"end":5031,"operator":"===","left":{"type":"UnaryExpression","start":4998,"end":5016,"operator":"typeof","argument":{"type":"Identifier","start":5005,"end":5016,"name":"conditional"},"prefix":true},"right":{"type":"Literal","start":5021,"end":5031,"value":"function","raw":"\"function\""}},"consequent":{"type":"CallExpression","start":5034,"end":5047,"optional":false,"callee":{"type":"Identifier","start":5034,"end":5045,"name":"conditional"},"arguments":[]},"alternate":{"type":"Identifier","start":5050,"end":5061,"name":"conditional"}}}]},{"type":"ReturnStatement","start":5067,"end":5117,"argument":{"type":"ConditionalExpression","start":5074,"end":5116,"test":{"type":"LogicalExpression","start":5074,"end":5100,"operator":"||","left":{"type":"UnaryExpression","start":5074,"end":5088,"operator":"!","argument":{"type":"MemberExpression","start":5075,"end":5088,"computed":false,"optional":false,"object":{"type":"Identifier","start":5075,"end":5082,"name":"control"},"property":{"type":"Identifier","start":5083,"end":5088,"name":"value"}},"prefix":true},"right":{"type":"UnaryExpression","start":5092,"end":5100,"operator":"!","argument":{"type":"Identifier","start":5093,"end":5100,"name":"outcome"},"prefix":true}},"consequent":{"type":"Literal","start":5103,"end":5107,"raw":"null","value":null},"alternate":{"type":"Identifier","start":5110,"end":5116,"name":"errors"}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":5587,"end":5933,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":5594,"end":5933,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5600,"end":5932,"id":{"type":"Identifier","start":5600,"end":5615,"name":"linkToValidator"},"init":{"type":"ArrowFunctionExpression","start":5618,"end":5932,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":5619,"end":5625,"name":"linkTo"},{"type":"Identifier","start":5627,"end":5636,"name":"errorName"},{"type":"Identifier","start":5638,"end":5643,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":5648,"end":5932,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":5649,"end":5656,"name":"control"}],"body":{"type":"BlockStatement","start":5661,"end":5932,"body":[{"type":"ExpressionStatement","start":5667,"end":5724,"expression":{"type":"AssignmentExpression","start":5667,"end":5723,"operator":"=","left":{"type":"Identifier","start":5667,"end":5672,"name":"error"},"right":{"type":"LogicalExpression","start":5675,"end":5723,"operator":"||","left":{"type":"Identifier","start":5675,"end":5680,"name":"error"},"right":{"type":"TemplateLiteral","start":5684,"end":5723,"quasis":[{"type":"TemplateElement","start":5685,"end":5712,"tail":false,"value":{"cooked":"This control has a link to ","raw":"This control has a link to "}},{"type":"TemplateElement","start":5721,"end":5722,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":5714,"end":5720,"name":"linkTo"}]}}}},{"type":"VariableDeclaration","start":5729,"end":5815,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5735,"end":5814,"id":{"type":"Identifier","start":5735,"end":5741,"name":"errors"},"init":{"type":"ConditionalExpression","start":5744,"end":5814,"test":{"type":"BinaryExpression","start":5744,"end":5769,"operator":"===","left":{"type":"UnaryExpression","start":5744,"end":5756,"operator":"typeof","argument":{"type":"Identifier","start":5751,"end":5756,"name":"error"},"prefix":true},"right":{"type":"Literal","start":5761,"end":5769,"value":"string","raw":"\"string\""}},"consequent":{"type":"ObjectExpression","start":5772,"end":5806,"properties":[{"type":"Property","start":5774,"end":5804,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":5775,"end":5796,"operator":"||","left":{"type":"Identifier","start":5775,"end":5784,"name":"errorName"},"right":{"type":"Literal","start":5788,"end":5796,"value":"linkTo","raw":"\"linkTo\""}},"value":{"type":"Identifier","start":5799,"end":5804,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":5809,"end":5814,"name":"error"}}}]},{"type":"VariableDeclaration","start":5820,"end":5865,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5826,"end":5864,"id":{"type":"Identifier","start":5826,"end":5834,"name":"linkedTo"},"init":{"type":"ChainExpression","start":5837,"end":5864,"expression":{"type":"CallExpression","start":5837,"end":5864,"optional":false,"callee":{"type":"MemberExpression","start":5837,"end":5856,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":5837,"end":5851,"computed":false,"optional":false,"object":{"type":"Identifier","start":5837,"end":5844,"name":"control"},"property":{"type":"Identifier","start":5845,"end":5851,"name":"parent"}},"property":{"type":"Identifier","start":5853,"end":5856,"name":"get"}},"arguments":[{"type":"Identifier","start":5857,"end":5863,"name":"linkTo"}]}}}]},{"type":"ReturnStatement","start":5870,"end":5930,"argument":{"type":"ConditionalExpression","start":5877,"end":5929,"test":{"type":"LogicalExpression","start":5877,"end":5913,"operator":"&&","left":{"type":"UnaryExpression","start":5877,"end":5892,"operator":"!","argument":{"type":"ChainExpression","start":5878,"end":5892,"expression":{"type":"MemberExpression","start":5878,"end":5892,"computed":false,"optional":true,"object":{"type":"Identifier","start":5878,"end":5885,"name":"control"},"property":{"type":"Identifier","start":5887,"end":5892,"name":"value"}}},"prefix":true},"right":{"type":"UnaryExpression","start":5896,"end":5913,"operator":"!","argument":{"type":"UnaryExpression","start":5897,"end":5913,"operator":"!","argument":{"type":"ChainExpression","start":5898,"end":5913,"expression":{"type":"MemberExpression","start":5898,"end":5913,"computed":false,"optional":true,"object":{"type":"Identifier","start":5898,"end":5906,"name":"linkedTo"},"property":{"type":"Identifier","start":5908,"end":5913,"name":"value"}}},"prefix":true},"prefix":true}},"consequent":{"type":"Identifier","start":5916,"end":5922,"name":"errors"},"alternate":{"type":"Literal","start":5925,"end":5929,"raw":"null","value":null}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":6487,"end":6830,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":6494,"end":6830,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6500,"end":6829,"id":{"type":"Identifier","start":6500,"end":6517,"name":"linkedToValidator"},"init":{"type":"ArrowFunctionExpression","start":6520,"end":6829,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":6521,"end":6529,"name":"linkedTo"},{"type":"Identifier","start":6531,"end":6540,"name":"errorName"},{"type":"Identifier","start":6542,"end":6547,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":6552,"end":6829,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":6553,"end":6560,"name":"control"}],"body":{"type":"BlockStatement","start":6565,"end":6829,"body":[{"type":"ExpressionStatement","start":6571,"end":6629,"expression":{"type":"AssignmentExpression","start":6571,"end":6628,"operator":"=","left":{"type":"Identifier","start":6571,"end":6576,"name":"error"},"right":{"type":"LogicalExpression","start":6579,"end":6628,"operator":"||","left":{"type":"Identifier","start":6579,"end":6584,"name":"error"},"right":{"type":"TemplateLiteral","start":6588,"end":6628,"quasis":[{"type":"TemplateElement","start":6589,"end":6615,"tail":false,"value":{"cooked":"This control is linked to ","raw":"This control is linked to "}},{"type":"TemplateElement","start":6626,"end":6627,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":6617,"end":6625,"name":"linkedTo"}]}}}},{"type":"VariableDeclaration","start":6634,"end":6720,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6640,"end":6719,"id":{"type":"Identifier","start":6640,"end":6646,"name":"errors"},"init":{"type":"ConditionalExpression","start":6649,"end":6719,"test":{"type":"BinaryExpression","start":6649,"end":6674,"operator":"===","left":{"type":"UnaryExpression","start":6649,"end":6661,"operator":"typeof","argument":{"type":"Identifier","start":6656,"end":6661,"name":"error"},"prefix":true},"right":{"type":"Literal","start":6666,"end":6674,"value":"string","raw":"\"string\""}},"consequent":{"type":"ObjectExpression","start":6677,"end":6711,"properties":[{"type":"Property","start":6679,"end":6709,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":6680,"end":6701,"operator":"||","left":{"type":"Identifier","start":6680,"end":6689,"name":"errorName"},"right":{"type":"Literal","start":6693,"end":6701,"value":"linkTo","raw":"\"linkTo\""}},"value":{"type":"Identifier","start":6704,"end":6709,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":6714,"end":6719,"name":"error"}}}]},{"type":"VariableDeclaration","start":6725,"end":6768,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6731,"end":6767,"id":{"type":"Identifier","start":6731,"end":6735,"name":"link"},"init":{"type":"ChainExpression","start":6738,"end":6767,"expression":{"type":"CallExpression","start":6738,"end":6767,"optional":false,"callee":{"type":"MemberExpression","start":6738,"end":6757,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":6738,"end":6752,"computed":false,"optional":false,"object":{"type":"Identifier","start":6738,"end":6745,"name":"control"},"property":{"type":"Identifier","start":6746,"end":6752,"name":"parent"}},"property":{"type":"Identifier","start":6754,"end":6757,"name":"get"}},"arguments":[{"type":"Identifier","start":6758,"end":6766,"name":"linkedTo"}]}}}]},{"type":"ReturnStatement","start":6773,"end":6827,"argument":{"type":"ConditionalExpression","start":6780,"end":6826,"test":{"type":"LogicalExpression","start":6780,"end":6810,"operator":"&&","left":{"type":"ChainExpression","start":6780,"end":6794,"expression":{"type":"MemberExpression","start":6780,"end":6794,"computed":false,"optional":true,"object":{"type":"Identifier","start":6780,"end":6787,"name":"control"},"property":{"type":"Identifier","start":6789,"end":6794,"name":"value"}}},"right":{"type":"UnaryExpression","start":6798,"end":6810,"operator":"!","argument":{"type":"ChainExpression","start":6799,"end":6810,"expression":{"type":"MemberExpression","start":6799,"end":6810,"computed":false,"optional":true,"object":{"type":"Identifier","start":6799,"end":6803,"name":"link"},"property":{"type":"Identifier","start":6805,"end":6810,"name":"value"}}},"prefix":true}},"consequent":{"type":"Identifier","start":6813,"end":6819,"name":"errors"},"alternate":{"type":"Literal","start":6822,"end":6826,"raw":"null","value":null}}}]},"id":null},"id":null}}]}},{"type":"ExportNamedDeclaration","start":7295,"end":7941,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7302,"end":7941,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7308,"end":7940,"id":{"type":"Identifier","start":7308,"end":7324,"name":"etherOrValidator"},"init":{"type":"ArrowFunctionExpression","start":7327,"end":7940,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":7328,"end":7335,"name":"toCheck"},{"type":"Identifier","start":7337,"end":7346,"name":"errorName"},{"type":"Identifier","start":7348,"end":7353,"name":"error"}],"body":{"type":"ArrowFunctionExpression","start":7358,"end":7940,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":7359,"end":7366,"name":"control"}],"body":{"type":"BlockStatement","start":7371,"end":7940,"body":[{"type":"ExpressionStatement","start":7377,"end":7448,"expression":{"type":"AssignmentExpression","start":7377,"end":7447,"operator":"=","left":{"type":"Identifier","start":7377,"end":7382,"name":"error"},"right":{"type":"LogicalExpression","start":7385,"end":7447,"operator":"||","left":{"type":"Identifier","start":7385,"end":7390,"name":"error"},"right":{"type":"TemplateLiteral","start":7394,"end":7447,"quasis":[{"type":"TemplateElement","start":7395,"end":7417,"tail":false,"value":{"cooked":"Ether this control or ","raw":"Ether this control or "}},{"type":"TemplateElement","start":7427,"end":7446,"tail":true,"value":{"cooked":" has to have value.","raw":" has to have value."}}],"expressions":[{"type":"Identifier","start":7419,"end":7426,"name":"toCheck"}]}}}},{"type":"VariableDeclaration","start":7453,"end":7540,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7459,"end":7539,"id":{"type":"Identifier","start":7459,"end":7465,"name":"errors"},"init":{"type":"ConditionalExpression","start":7468,"end":7539,"test":{"type":"BinaryExpression","start":7468,"end":7493,"operator":"===","left":{"type":"UnaryExpression","start":7468,"end":7480,"operator":"typeof","argument":{"type":"Identifier","start":7475,"end":7480,"name":"error"},"prefix":true},"right":{"type":"Literal","start":7485,"end":7493,"value":"string","raw":"\"string\""}},"consequent":{"type":"ObjectExpression","start":7496,"end":7531,"properties":[{"type":"Property","start":7498,"end":7529,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":7499,"end":7521,"operator":"||","left":{"type":"Identifier","start":7499,"end":7508,"name":"errorName"},"right":{"type":"Literal","start":7512,"end":7521,"value":"etherOr","raw":"\"etherOr\""}},"value":{"type":"Identifier","start":7524,"end":7529,"name":"error"},"kind":"init"}]},"alternate":{"type":"Identifier","start":7534,"end":7539,"name":"error"}}}]},{"type":"VariableDeclaration","start":7545,"end":7588,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7551,"end":7587,"id":{"type":"Identifier","start":7551,"end":7556,"name":"check"},"init":{"type":"ChainExpression","start":7559,"end":7587,"expression":{"type":"CallExpression","start":7559,"end":7587,"optional":false,"callee":{"type":"MemberExpression","start":7559,"end":7578,"computed":false,"optional":true,"object":{"type":"MemberExpression","start":7559,"end":7573,"computed":false,"optional":false,"object":{"type":"Identifier","start":7559,"end":7566,"name":"control"},"property":{"type":"Identifier","start":7567,"end":7573,"name":"parent"}},"property":{"type":"Identifier","start":7575,"end":7578,"name":"get"}},"arguments":[{"type":"Identifier","start":7579,"end":7586,"name":"toCheck"}]}}}]},{"type":"IfStatement","start":7593,"end":7938,"test":{"type":"LogicalExpression","start":7597,"end":7638,"operator":"&&","left":{"type":"LogicalExpression","start":7597,"end":7621,"operator":"&&","left":{"type":"Identifier","start":7597,"end":7602,"name":"check"},"right":{"type":"UnaryExpression","start":7606,"end":7621,"operator":"!","argument":{"type":"ChainExpression","start":7607,"end":7621,"expression":{"type":"MemberExpression","start":7607,"end":7621,"computed":false,"optional":true,"object":{"type":"Identifier","start":7607,"end":7614,"name":"control"},"property":{"type":"Identifier","start":7616,"end":7621,"name":"value"}}},"prefix":true}},"right":{"type":"UnaryExpression","start":7625,"end":7638,"operator":"!","argument":{"type":"ChainExpression","start":7626,"end":7638,"expression":{"type":"MemberExpression","start":7626,"end":7638,"computed":false,"optional":true,"object":{"type":"Identifier","start":7626,"end":7631,"name":"check"},"property":{"type":"Identifier","start":7633,"end":7638,"name":"value"}}},"prefix":true}},"consequent":{"type":"BlockStatement","start":7640,"end":7781,"body":[{"type":"ExpressionStatement","start":7650,"end":7669,"expression":{"type":"CallExpression","start":7650,"end":7668,"optional":false,"callee":{"type":"MemberExpression","start":7650,"end":7661,"computed":false,"optional":false,"object":{"type":"Identifier","start":7650,"end":7657,"name":"console"},"property":{"type":"Identifier","start":7658,"end":7661,"name":"log"}},"arguments":[{"type":"Literal","start":7662,"end":7667,"value":"prc","raw":"'prc'"}]}},{"type":"ExpressionStatement","start":7678,"end":7752,"expression":{"type":"CallExpression","start":7678,"end":7751,"optional":false,"callee":{"type":"MemberExpression","start":7678,"end":7693,"computed":false,"optional":false,"object":{"type":"Identifier","start":7678,"end":7683,"name":"check"},"property":{"type":"Identifier","start":7684,"end":7693,"name":"setErrors"}},"arguments":[{"type":"ObjectExpression","start":7694,"end":7750,"properties":[{"type":"Property","start":7708,"end":7739,"method":false,"shorthand":false,"computed":true,"key":{"type":"LogicalExpression","start":7709,"end":7731,"operator":"||","left":{"type":"Identifier","start":7709,"end":7718,"name":"errorName"},"right":{"type":"Literal","start":7722,"end":7731,"value":"etherOr","raw":"\"etherOr\""}},"value":{"type":"Identifier","start":7734,"end":7739,"name":"error"},"kind":"init"}]}]}},{"type":"ReturnStatement","start":7761,"end":7775,"argument":{"type":"Identifier","start":7768,"end":7774,"name":"errors"}}]},"alternate":{"type":"BlockStatement","start":7791,"end":7938,"body":[{"type":"IfStatement","start":7801,"end":7858,"test":{"type":"Identifier","start":7805,"end":7810,"name":"check"},"consequent":{"type":"BlockStatement","start":7812,"end":7858,"body":[{"type":"ExpressionStatement","start":7826,"end":7848,"expression":{"type":"CallExpression","start":7826,"end":7847,"optional":false,"callee":{"type":"MemberExpression","start":7826,"end":7841,"computed":false,"optional":false,"object":{"type":"Identifier","start":7826,"end":7831,"name":"check"},"property":{"type":"Identifier","start":7832,"end":7841,"name":"setErrors"}},"arguments":[{"type":"Literal","start":7842,"end":7846,"raw":"null","value":null}]}}]},"alternate":null},{"type":"ReturnStatement","start":7867,"end":7932,"argument":{"type":"ConditionalExpression","start":7874,"end":7931,"test":{"type":"LogicalExpression","start":7874,"end":7915,"operator":"&&","left":{"type":"LogicalExpression","start":7874,"end":7898,"operator":"&&","left":{"type":"Identifier","start":7874,"end":7879,"name":"check"},"right":{"type":"UnaryExpression","start":7883,"end":7898,"operator":"!","argument":{"type":"ChainExpression","start":7884,"end":7898,"expression":{"type":"MemberExpression","start":7884,"end":7898,"computed":false,"optional":true,"object":{"type":"Identifier","start":7884,"end":7891,"name":"control"},"property":{"type":"Identifier","start":7893,"end":7898,"name":"value"}}},"prefix":true}},"right":{"type":"UnaryExpression","start":7902,"end":7915,"operator":"!","argument":{"type":"ChainExpression","start":7903,"end":7915,"expression":{"type":"MemberExpression","start":7903,"end":7915,"computed":false,"optional":true,"object":{"type":"Identifier","start":7903,"end":7908,"name":"check"},"property":{"type":"Identifier","start":7910,"end":7915,"name":"value"}}},"prefix":true}},"consequent":{"type":"Identifier","start":7918,"end":7924,"name":"errors"},"alternate":{"type":"Literal","start":7927,"end":7931,"raw":"null","value":null}}}]}}]},"id":null},"id":null}}]}}],"_rollupRemoved":[{"end":27324,"start":7942,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { compareDates, prepareToCompare, } from \"./helpers/date\";\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || \"This control did not match a given regular expression.\";\n    const errors = typeof error === \"string\"\n        ? { [errorName || \"regexpValidator\"]: error }\n        : error;\n    return !control.value || regexp.test(control.value) ? null : errors;\n};\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpNotAMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || \"This control matched a given regular expression.\";\n    const errors = typeof error === \"string\"\n        ? { [errorName || \"regexpValidator\"]: error }\n        : error;\n    return !control.value || !regexp.test(control.value) ? null : errors;\n};\n/**\n * Checks if the date in the given FromControl / AbstractControl is earlier then\n * the value in the specified FromControl / AbstractControl\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const earlierThenValidator = (date, errorName, error) => (control) => {\n    error =\n        error || `This control must have a value earlier then ${date}.`;\n    const errors = typeof error === \"string\"\n        ? { [errorName || \"earlierThen\"]: error }\n        : error;\n    return prepareToCompare(control?.value) < prepareToCompare(date)\n        ? null\n        : errors;\n};\n/**\n * Checks if the date in the given FromControl / AbstractControl is greater then\n * the value in the specified FromControl / AbstractControl\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const laterThenValidator = (date, errorName, error) => (control) => {\n    error =\n        error || `This control must have a value later then ${date}.`;\n    const errors = typeof error === \"string\" ? { [errorName || \"laterThen\"]: error } : error;\n    return prepareToCompare(control?.value) > prepareToCompare(date)\n        ? null\n        : errors;\n};\n/**\n * Compares the date values of the given FromControl / AbstractControl and\n * specified FromControl / AbstractControl\n *\n * @param {string}                    - name of the filed to compare against\n * @param {ComparisonOperations}      - comparison to preform\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const compareToValidator = (filedName, comparison, errorName, error) => (control) => {\n    const date = control.parent?.get(filedName)?.value;\n    error = error || `Value comparison with ${date?.value} failed.`;\n    const errors = typeof error === \"string\"\n        ? { [errorName || \"dateComparison\"]: error }\n        : error;\n    return control.value &&\n        date &&\n        compareDates(control.value, date, comparison)\n        ? null\n        : errors;\n};\n/**\n * Returns a validation error if a condition is met\n *\n * @param {Function | boolean}        - conditional function or a boolean value\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const requiredWhenValidator = (conditional, errorName, error) => (control) => {\n    error = error || \"This control has a conditional set on it.\";\n    const errors = typeof error === \"string\"\n        ? { [errorName || \"requiredWhen\"]: error }\n        : error;\n    const outcome = typeof conditional === \"function\" ? conditional() : conditional;\n    return !control.value || !outcome ? null : errors;\n};\n/**\n * Returns a validation error if a given FromControl / AbstractControl has no value\n * and specified FromControl / AbstractControl has it\n *\n * @param {string}                    - name of the FromControl / AbstractControl to link to\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const linkToValidator = (linkTo, errorName, error) => (control) => {\n    error = error || `This control has a link to ${linkTo}.`;\n    const errors = typeof error === \"string\" ? { [errorName || \"linkTo\"]: error } : error;\n    const linkedTo = control.parent?.get(linkTo);\n    return !control?.value && !!linkedTo?.value ? errors : null;\n};\n/**\n * Returns a validation error if a given FromControl / AbstractControl has a value\n * and specified FromControl / AbstractControl does not\n *\n * @param {string}                    - name of the FromControl / AbstractControl\n *                                      which a given FromControl / AbstractControl is linked to\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const linkedToValidator = (linkedTo, errorName, error) => (control) => {\n    error = error || `This control is linked to ${linkedTo}.`;\n    const errors = typeof error === \"string\" ? { [errorName || \"linkTo\"]: error } : error;\n    const link = control.parent?.get(linkedTo);\n    return control?.value && !link?.value ? errors : null;\n};\n/**\n * Returns a validation error if a nether the given FromControl / AbstractControl nor\n * the specified FromControl / AbstractControl has values\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const etherOrValidator = (toCheck, errorName, error) => (control) => {\n    error = error || `Ether this control or ${toCheck} has to have value.`;\n    const errors = typeof error === \"string\" ? { [errorName || \"etherOr\"]: error } : error;\n    const check = control.parent?.get(toCheck);\n    if (check && !control?.value && !check?.value) {\n        console.log('prc');\n        check.setErrors({\n            [errorName || \"etherOr\"]: error,\n        });\n        return errors;\n    }\n    else {\n        if (check) {\n            check.setErrors(null);\n        }\n        return check && !control?.value && !check?.value ? errors : null;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/date.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","meta":{},"moduleSideEffects":false,"originalCode":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { compareDates, prepareToCompare, } from \"./helpers/date\";\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || \"This control did not match a given regular expression.\";\n    const errors = typeof error === \"string\"\n        ? { [errorName || \"regexpValidator\"]: error }\n        : error;\n    return !control.value || regexp.test(control.value) ? null : errors;\n};\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpNotAMatchValidator = (regexp, errorName, error) => (control) => {\n    error = error || \"This control matched a given regular expression.\";\n    const errors = typeof error === \"string\"\n        ? { [errorName || \"regexpValidator\"]: error }\n        : error;\n    return !control.value || !regexp.test(control.value) ? null : errors;\n};\n/**\n * Checks if the date in the given FromControl / AbstractControl is earlier then\n * the value in the specified FromControl / AbstractControl\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const earlierThenValidator = (date, errorName, error) => (control) => {\n    error =\n        error || `This control must have a value earlier then ${date}.`;\n    const errors = typeof error === \"string\"\n        ? { [errorName || \"earlierThen\"]: error }\n        : error;\n    return prepareToCompare(control?.value) < prepareToCompare(date)\n        ? null\n        : errors;\n};\n/**\n * Checks if the date in the given FromControl / AbstractControl is greater then\n * the value in the specified FromControl / AbstractControl\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const laterThenValidator = (date, errorName, error) => (control) => {\n    error =\n        error || `This control must have a value later then ${date}.`;\n    const errors = typeof error === \"string\" ? { [errorName || \"laterThen\"]: error } : error;\n    return prepareToCompare(control?.value) > prepareToCompare(date)\n        ? null\n        : errors;\n};\n/**\n * Compares the date values of the given FromControl / AbstractControl and\n * specified FromControl / AbstractControl\n *\n * @param {string}                    - name of the filed to compare against\n * @param {ComparisonOperations}      - comparison to preform\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const compareToValidator = (filedName, comparison, errorName, error) => (control) => {\n    const date = control.parent?.get(filedName)?.value;\n    error = error || `Value comparison with ${date?.value} failed.`;\n    const errors = typeof error === \"string\"\n        ? { [errorName || \"dateComparison\"]: error }\n        : error;\n    return control.value &&\n        date &&\n        compareDates(control.value, date, comparison)\n        ? null\n        : errors;\n};\n/**\n * Returns a validation error if a condition is met\n *\n * @param {Function | boolean}        - conditional function or a boolean value\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const requiredWhenValidator = (conditional, errorName, error) => (control) => {\n    error = error || \"This control has a conditional set on it.\";\n    const errors = typeof error === \"string\"\n        ? { [errorName || \"requiredWhen\"]: error }\n        : error;\n    const outcome = typeof conditional === \"function\" ? conditional() : conditional;\n    return !control.value || !outcome ? null : errors;\n};\n/**\n * Returns a validation error if a given FromControl / AbstractControl has no value\n * and specified FromControl / AbstractControl has it\n *\n * @param {string}                    - name of the FromControl / AbstractControl to link to\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const linkToValidator = (linkTo, errorName, error) => (control) => {\n    error = error || `This control has a link to ${linkTo}.`;\n    const errors = typeof error === \"string\" ? { [errorName || \"linkTo\"]: error } : error;\n    const linkedTo = control.parent?.get(linkTo);\n    return !control?.value && !!linkedTo?.value ? errors : null;\n};\n/**\n * Returns a validation error if a given FromControl / AbstractControl has a value\n * and specified FromControl / AbstractControl does not\n *\n * @param {string}                    - name of the FromControl / AbstractControl\n *                                      which a given FromControl / AbstractControl is linked to\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const linkedToValidator = (linkedTo, errorName, error) => (control) => {\n    error = error || `This control is linked to ${linkedTo}.`;\n    const errors = typeof error === \"string\" ? { [errorName || \"linkTo\"]: error } : error;\n    const link = control.parent?.get(linkedTo);\n    return control?.value && !link?.value ? errors : null;\n};\n/**\n * Returns a validation error if a nether the given FromControl / AbstractControl nor\n * the specified FromControl / AbstractControl has values\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const etherOrValidator = (toCheck, errorName, error) => (control) => {\n    error = error || `Ether this control or ${toCheck} has to have value.`;\n    const errors = typeof error === \"string\" ? { [errorName || \"etherOr\"]: error } : error;\n    const check = control.parent?.get(toCheck);\n    if (check && !control?.value && !check?.value) {\n        console.log('prc');\n        check.setErrors({\n            [errorName || \"etherOr\"]: error,\n        });\n        return errors;\n    }\n    else {\n        if (check) {\n            check.setErrors(null);\n        }\n        return check && !control?.value && !check?.value ? errors : null;\n    }\n};\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"ngx-validators.js","sourceRoot":"","sources":["../../../../projects/ngx-validator-pack/src/lib/ngx-validators.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,9,0],[7,0,9,7],[9,0,10,2],[21,0,10,14],[23,0,12,2],[39,0,12,18],[42,0,13,1],[48,0,13,7],[64,0,13,23],[65,0,13,24]],[[0,0,15,0]],[],[],[],[],[],[],[[3,0,22,3]],[[0,0,23,0],[6,0,23,6],[7,0,23,7],[13,0,23,13],[33,0,23,33],[36,0,24,2],[37,0,25,4],[43,0,25,18],[45,0,26,4],[54,0,26,22],[56,0,27,4],[61,0,27,37],[63,0,28,17],[65,0,28,19],[66,0,29,2],[67,0,29,3],[74,0,29,27],[76,0,29,54],[78,0,29,56]],[[4,0,30,4],[9,0,30,9],[12,0,30,12],[17,0,30,17],[21,0,30,21],[77,0,30,77],[78,0,30,78]],[[4,0,31,4],[10,0,31,10],[16,0,31,16],[19,0,32,6],[26,0,32,13],[31,0,32,18],[36,0,32,23],[44,0,32,31]],[[8,0,33,8],[9,0,33,9],[10,0,33,10],[12,0,33,12],[13,0,33,13],[22,0,33,22],[26,0,33,26],[43,0,33,43],[44,0,33,44],[46,0,33,46],[51,0,33,51],[53,0,33,53]],[[8,0,34,8],[9,0,34,9],[10,0,34,10],[15,0,34,15],[16,0,34,16]],[[4,0,36,4],[11,0,36,11],[12,0,36,12],[19,0,36,19],[20,0,36,20],[25,0,36,25],[29,0,36,29],[35,0,36,35],[36,0,36,36],[40,0,36,40],[41,0,36,41],[48,0,36,48],[49,0,36,49],[54,0,36,54],[55,0,36,55],[56,0,36,56],[57,0,36,57],[58,0,36,58],[62,0,36,62],[63,0,36,63],[64,0,36,64],[65,0,36,65],[71,0,36,71],[72,0,36,72]],[[0,0,37,2],[1,0,37,3],[2,0,37,4]],[[0,0,39,0]],[],[],[],[],[],[],[[3,0,46,3]],[[0,0,47,0],[6,0,47,6],[7,0,47,7],[13,0,47,13],[37,0,47,37],[40,0,48,2],[41,0,49,4],[47,0,49,18],[49,0,50,4],[58,0,50,22],[60,0,51,4],[65,0,51,37],[67,0,52,17],[69,0,52,19],[70,0,53,2],[71,0,53,3],[78,0,53,27],[80,0,53,54],[82,0,53,56]],[[4,0,54,4],[9,0,54,9],[12,0,54,12],[17,0,54,17],[21,0,54,21],[71,0,54,71],[72,0,54,72]],[[4,0,55,4],[10,0,55,10],[16,0,55,16],[19,0,56,6],[26,0,56,13],[31,0,56,18],[36,0,56,23],[44,0,56,31]],[[8,0,57,8],[9,0,57,9],[10,0,57,10],[12,0,57,12],[13,0,57,13],[22,0,57,22],[26,0,57,26],[43,0,57,43],[44,0,57,44],[46,0,57,46],[51,0,57,51],[53,0,57,53]],[[8,0,58,8],[9,0,58,9],[10,0,58,10],[15,0,58,15],[16,0,58,16]],[[4,0,60,4],[11,0,60,11],[12,0,60,12],[19,0,60,19],[20,0,60,20],[25,0,60,25],[29,0,60,29],[30,0,60,30],[36,0,60,36],[37,0,60,37],[41,0,60,41],[42,0,60,42],[49,0,60,49],[50,0,60,50],[55,0,60,55],[56,0,60,56],[57,0,60,57],[58,0,60,58],[59,0,60,59],[63,0,60,63],[64,0,60,64],[65,0,60,65],[66,0,60,66],[72,0,60,72],[73,0,60,73]],[[0,0,61,2],[1,0,61,3],[2,0,61,4]],[[0,0,63,0]],[],[],[],[],[],[],[],[[3,0,71,3]],[[0,0,72,0],[6,0,72,6],[7,0,72,7],[13,0,72,13],[33,0,72,33],[36,0,73,2],[37,0,74,4],[41,0,74,14],[43,0,75,4],[52,0,75,22],[54,0,76,4],[59,0,76,37],[61,0,77,17],[63,0,77,19],[64,0,78,2],[65,0,78,3],[72,0,78,27],[74,0,78,54],[76,0,78,56]],[[4,0,79,4],[9,0,79,9]],[[8,0,80,6],[13,0,80,11],[17,0,80,15],[64,0,80,62],[68,0,80,66],[71,0,80,69],[72,0,80,70]],[[4,0,81,4],[10,0,81,10],[16,0,81,16],[19,0,82,6],[26,0,82,13],[31,0,82,18],[36,0,82,23],[44,0,82,31]],[[8,0,83,8],[9,0,83,9],[10,0,83,10],[12,0,83,12],[13,0,83,13],[22,0,83,22],[26,0,83,26],[39,0,83,39],[40,0,83,40],[42,0,83,42],[47,0,83,47],[49,0,83,49]],[[8,0,84,8],[9,0,84,9],[10,0,84,10],[15,0,84,15],[16,0,84,16]],[[4,0,86,4],[11,0,86,11],[27,0,86,27],[28,0,86,28],[35,0,86,35],[37,0,86,37],[42,0,86,42],[43,0,86,43],[46,0,86,46],[62,0,86,62],[63,0,86,63],[67,0,86,67],[68,0,86,68]],[[8,0,87,6],[9,0,87,7],[10,0,87,8],[14,0,87,12]],[[8,0,88,6],[9,0,88,7],[10,0,88,8],[16,0,88,14],[17,0,88,15]],[[0,0,89,2],[1,0,89,3],[2,0,89,4]],[[0,0,91,0]],[],[],[],[],[],[],[],[[3,0,99,3]],[[0,0,100,0],[6,0,100,6],[7,0,100,7],[13,0,100,13],[31,0,100,31],[34,0,101,2],[35,0,102,4],[39,0,102,14],[41,0,103,4],[50,0,103,22],[52,0,104,4],[57,0,104,37],[59,0,105,17],[61,0,105,19],[62,0,106,2],[63,0,106,3],[70,0,106,27],[72,0,106,54],[74,0,106,56]],[[4,0,107,4],[9,0,107,9]],[[8,0,108,6],[13,0,108,11],[17,0,108,15],[62,0,108,60],[66,0,108,64],[69,0,108,67],[70,0,108,68]],[[4,0,109,4],[10,0,109,10],[16,0,109,16],[19,0,110,6],[26,0,110,13],[31,0,110,18],[36,0,110,23],[44,0,110,31],[45,0,110,32],[46,0,110,33],[47,0,110,34],[49,0,110,36],[50,0,110,37],[59,0,110,46],[63,0,110,50],[74,0,110,61],[75,0,110,62],[77,0,110,64],[82,0,110,69],[84,0,110,71],[85,0,110,72],[86,0,110,73],[87,0,110,74],[92,0,110,79],[93,0,110,80]],[[4,0,112,4],[11,0,112,11],[27,0,112,27],[28,0,112,28],[35,0,112,35],[37,0,112,37],[42,0,112,42],[43,0,112,43],[46,0,112,46],[62,0,112,62],[63,0,112,63],[67,0,112,67],[68,0,112,68]],[[8,0,113,6],[9,0,113,7],[10,0,113,8],[14,0,113,12]],[[8,0,114,6],[9,0,114,7],[10,0,114,8],[16,0,114,14],[17,0,114,15]],[[0,0,115,2],[1,0,115,3],[2,0,115,4]],[[0,0,117,0]],[],[],[],[],[],[],[],[],[[3,0,126,3]],[[0,0,127,0],[6,0,127,6],[7,0,127,7],[13,0,127,13],[31,0,127,31],[34,0,128,2],[35,0,129,4],[44,0,129,21],[46,0,130,4],[56,0,130,36],[58,0,131,4],[67,0,131,22],[69,0,132,4],[74,0,132,37],[76,0,133,17],[78,0,133,19],[79,0,134,2],[80,0,134,3],[87,0,134,27],[89,0,134,54],[91,0,134,56]],[[4,0,135,4],[10,0,135,10],[14,0,135,14],[17,0,135,17],[24,0,135,24],[25,0,135,25],[31,0,135,31],[33,0,135,33],[36,0,135,36],[37,0,135,37],[46,0,135,46],[47,0,135,47],[49,0,135,49],[54,0,135,54],[55,0,135,55]],[[4,0,136,4],[9,0,136,9],[12,0,136,12],[17,0,136,17],[21,0,136,21],[46,0,136,46],[50,0,136,50],[52,0,136,52],[57,0,136,57],[67,0,136,67],[68,0,136,68]],[[4,0,137,4],[10,0,137,10],[16,0,137,16],[19,0,138,6],[26,0,138,13],[31,0,138,18],[36,0,138,23],[44,0,138,31]],[[8,0,139,8],[9,0,139,9],[10,0,139,10],[12,0,139,12],[13,0,139,13],[22,0,139,22],[26,0,139,26],[42,0,139,42],[43,0,139,43],[45,0,139,45],[50,0,139,50],[52,0,139,52]],[[8,0,140,8],[9,0,140,9],[10,0,140,10],[15,0,140,15],[16,0,140,16]],[[4,0,141,4],[11,0,141,11],[18,0,141,18],[19,0,141,19],[24,0,141,24]],[[8,0,142,6],[12,0,142,10]],[[8,0,143,6],[20,0,143,18],[21,0,143,19],[28,0,143,26],[29,0,143,27],[34,0,143,32],[36,0,143,34],[40,0,143,38],[42,0,143,40],[52,0,143,50],[53,0,143,51]],[[8,0,144,6],[9,0,144,7],[10,0,144,8],[14,0,144,12]],[[8,0,145,6],[9,0,145,7],[10,0,145,8],[16,0,145,14],[17,0,145,15]],[[0,0,146,2],[1,0,146,3],[2,0,146,4]],[[0,0,148,0]],[],[],[],[],[],[],[[3,0,155,3]],[[0,0,156,0],[6,0,156,6],[7,0,156,7],[13,0,156,13],[34,0,156,34],[37,0,157,2],[38,0,158,4],[49,0,158,52],[51,0,159,4],[60,0,159,22],[62,0,160,4],[67,0,160,37],[69,0,161,17],[71,0,161,19],[72,0,162,2],[73,0,162,3],[80,0,162,27],[82,0,162,54],[84,0,162,56]],[[4,0,163,4],[9,0,163,9],[12,0,163,12],[17,0,163,17],[21,0,163,21],[64,0,163,64],[65,0,163,65]],[[4,0,164,4],[10,0,164,10],[16,0,164,16],[19,0,165,6],[26,0,165,13],[31,0,165,18],[36,0,165,23],[44,0,165,31]],[[8,0,166,8],[9,0,166,9],[10,0,166,10],[12,0,166,12],[13,0,166,13],[22,0,166,22],[26,0,166,26],[40,0,166,40],[41,0,166,41],[43,0,166,43],[48,0,166,48],[50,0,166,50]],[[8,0,167,8],[9,0,167,9],[10,0,167,10],[15,0,167,15],[16,0,167,16]],[[4,0,169,4],[10,0,169,10],[17,0,169,17],[20,0,170,6],[27,0,170,13],[38,0,170,24],[43,0,170,29],[53,0,170,39],[54,0,170,40],[55,0,170,41],[56,0,170,42],[67,0,170,53],[69,0,170,55],[70,0,170,56],[71,0,170,57],[72,0,170,58],[83,0,170,69],[84,0,170,70]],[[4,0,171,4],[11,0,171,11],[12,0,171,12],[19,0,171,19],[20,0,171,20],[25,0,171,25],[29,0,171,29],[30,0,171,30],[37,0,171,37],[38,0,171,38],[39,0,171,39],[40,0,171,40],[44,0,171,44],[45,0,171,45],[46,0,171,46],[47,0,171,47],[53,0,171,53],[54,0,171,54]],[[0,0,172,2],[1,0,172,3],[2,0,172,4]],[[0,0,174,0]],[],[],[],[],[],[],[],[[3,0,182,3]],[[0,0,183,0],[6,0,183,6],[7,0,183,7],[13,0,183,13],[28,0,183,28],[31,0,184,2],[32,0,185,4],[38,0,185,18],[40,0,186,4],[49,0,186,22],[51,0,187,4],[56,0,187,37],[58,0,188,17],[60,0,188,19],[61,0,189,2],[62,0,189,3],[69,0,189,27],[71,0,189,54],[73,0,189,56]],[[4,0,190,4],[9,0,190,9],[12,0,190,12],[17,0,190,17],[21,0,190,21],[51,0,190,51],[57,0,190,57],[60,0,190,60],[61,0,190,61]],[[4,0,191,4],[10,0,191,10],[16,0,191,16],[19,0,192,6],[26,0,192,13],[31,0,192,18],[36,0,192,23],[44,0,192,31],[45,0,192,32],[46,0,192,33],[47,0,192,34],[49,0,192,36],[50,0,192,37],[59,0,192,46],[63,0,192,50],[71,0,192,58],[72,0,192,59],[74,0,192,61],[79,0,192,66],[81,0,192,68],[82,0,192,69],[83,0,192,70],[84,0,192,71],[89,0,192,76],[90,0,192,77]],[[4,0,194,4],[10,0,194,10],[18,0,194,18],[21,0,194,21],[28,0,194,28],[29,0,194,29],[35,0,194,35],[37,0,194,37],[40,0,194,40],[41,0,194,41],[47,0,194,47],[48,0,194,48],[49,0,194,49]],[[4,0,195,4],[11,0,195,11],[12,0,195,12],[19,0,195,19],[21,0,195,21],[26,0,195,26],[30,0,195,30],[31,0,195,31],[32,0,195,32],[40,0,195,40],[42,0,195,42],[47,0,195,47],[48,0,195,48],[49,0,195,49],[50,0,195,50],[56,0,195,56],[57,0,195,57],[58,0,195,58],[59,0,195,59],[63,0,195,63],[64,0,195,64]],[[0,0,196,2],[1,0,196,3],[2,0,196,4]],[[0,0,198,0]],[],[],[],[],[],[],[],[],[[3,0,207,3]],[[0,0,208,0],[6,0,208,6],[7,0,208,7],[13,0,208,13],[30,0,208,30],[33,0,209,2],[34,0,210,4],[42,0,210,20],[44,0,211,4],[53,0,211,22],[55,0,212,4],[60,0,212,37],[62,0,213,17],[64,0,213,19],[65,0,214,2],[66,0,214,3],[73,0,214,27],[75,0,214,54],[77,0,214,56]],[[4,0,215,4],[9,0,215,9],[12,0,215,12],[17,0,215,17],[21,0,215,21],[50,0,215,50],[58,0,215,58],[61,0,215,61],[62,0,215,62]],[[4,0,216,4],[10,0,216,10],[16,0,216,16],[19,0,217,6],[26,0,217,13],[31,0,217,18],[36,0,217,23],[44,0,217,31],[45,0,217,32],[46,0,217,33],[47,0,217,34],[49,0,217,36],[50,0,217,37],[59,0,217,46],[63,0,217,50],[71,0,217,58],[72,0,217,59],[74,0,217,61],[79,0,217,66],[81,0,217,68],[82,0,217,69],[83,0,217,70],[84,0,217,71],[89,0,217,76],[90,0,217,77]],[[4,0,219,4],[10,0,219,10],[14,0,219,14],[17,0,219,17],[24,0,219,24],[25,0,219,25],[31,0,219,31],[33,0,219,33],[36,0,219,36],[37,0,219,37],[45,0,219,45],[46,0,219,46],[47,0,219,47]],[[4,0,220,4],[11,0,220,11],[18,0,220,18],[20,0,220,20],[25,0,220,25],[29,0,220,29],[30,0,220,30],[34,0,220,34],[36,0,220,36],[41,0,220,41],[42,0,220,42],[43,0,220,43],[44,0,220,44],[50,0,220,50],[51,0,220,51],[52,0,220,52],[53,0,220,53],[57,0,220,57],[58,0,220,58]],[[0,0,221,2],[1,0,221,3],[2,0,221,4]],[[0,0,223,0]],[],[],[],[],[],[],[],[[3,0,231,3]],[[0,0,232,0],[6,0,232,6],[7,0,232,7],[13,0,232,13],[29,0,232,29],[32,0,233,2],[33,0,234,4],[40,0,234,19],[42,0,235,4],[51,0,235,22],[53,0,236,4],[58,0,236,37],[60,0,237,17],[62,0,237,19],[63,0,238,2],[64,0,238,3],[71,0,238,27],[73,0,238,54],[75,0,238,56]],[[4,0,239,4],[9,0,239,9],[12,0,239,12],[17,0,239,17],[21,0,239,21],[46,0,239,46],[53,0,239,53],[74,0,239,74],[75,0,239,75]],[[4,0,240,4],[10,0,240,10],[16,0,240,16],[19,0,241,6],[26,0,241,13],[31,0,241,18],[36,0,241,23],[44,0,241,31],[45,0,241,32],[46,0,241,33],[47,0,241,34],[49,0,241,36],[50,0,241,37],[59,0,241,46],[63,0,241,50],[72,0,241,59],[73,0,241,60],[75,0,241,62],[80,0,241,67],[82,0,241,69],[83,0,241,70],[84,0,241,71],[85,0,241,72],[90,0,241,77],[91,0,241,78]],[[4,0,243,4],[10,0,243,10],[15,0,243,15],[18,0,243,18],[25,0,243,25],[26,0,243,26],[32,0,243,32],[34,0,243,34],[37,0,243,37],[38,0,243,38],[45,0,243,45],[46,0,243,65],[47,0,243,66]],[[4,0,244,4],[8,0,244,8],[13,0,244,13],[17,0,244,17],[18,0,244,18],[25,0,244,25],[27,0,244,27],[32,0,244,32],[36,0,244,36],[37,0,244,37],[42,0,244,42],[44,0,244,44],[49,0,244,49],[51,0,244,51],[52,0,244,52]],[[8,0,245,6],[15,0,245,13],[16,0,245,14],[19,0,245,17],[20,0,245,18],[25,0,245,23],[26,0,245,24],[27,0,245,24]],[[8,0,246,6],[13,0,246,11],[14,0,246,12],[23,0,246,21],[24,0,246,22]],[[12,0,247,8],[13,0,247,9],[22,0,247,18],[26,0,247,22],[35,0,247,31],[36,0,247,32],[38,0,247,34],[43,0,247,39]],[[9,0,248,7],[10,0,248,8],[11,0,248,9]],[[8,0,249,6],[15,0,249,13],[21,0,249,19],[22,0,249,20]],[[4,0,250,4],[5,0,250,5]],[[9,0,250,11],[10,0,250,12]],[[8,0,251,6],[12,0,251,10],[17,0,251,15],[19,0,251,17],[20,0,251,18]],[[12,0,252,8],[17,0,252,13],[18,0,252,14],[27,0,252,23],[28,0,252,24],[32,0,252,28],[33,0,252,29],[34,0,252,30]],[[8,0,253,6],[9,0,253,7]],[[8,0,254,6],[15,0,254,13],[20,0,254,18],[24,0,254,22],[25,0,254,23],[32,0,254,30],[34,0,254,32],[39,0,254,37],[43,0,254,41],[44,0,254,42],[49,0,254,47],[51,0,254,49],[56,0,254,54],[57,0,254,55],[58,0,254,56],[59,0,254,57],[65,0,254,63],[66,0,254,64],[67,0,254,65],[68,0,254,66],[72,0,254,70],[73,0,254,71]],[[4,0,255,4],[5,0,255,5]],[[0,0,256,2],[1,0,256,3],[2,0,256,4]]],"sourcesContent":["/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\n\nimport { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\nimport {\n  compareDates,\n  ComparisonOperations,\n  prepareToCompare,\n} from \"./helpers/date\";\n\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpMatchValidator =\n  (\n    regexp: RegExp,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || \"This control did not match a given regular expression.\";\n    const errors: ValidationErrors =\n      typeof error === \"string\"\n        ? { [errorName || \"regexpValidator\"]: error }\n        : error;\n\n    return !control.value || regexp.test(control.value) ? null : errors;\n  };\n\n/**\n * Preforms a RegEx check on value in the given FromControl / AbstractControl\n *\n * @param {RegExp}                    - Regular expression to check\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const regexpNotAMatchValidator =\n  (\n    regexp: RegExp,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || \"This control matched a given regular expression.\";\n    const errors: ValidationErrors =\n      typeof error === \"string\"\n        ? { [errorName || \"regexpValidator\"]: error }\n        : error;\n\n    return !control.value || !regexp.test(control.value) ? null : errors;\n  };\n\n/**\n * Checks if the date in the given FromControl / AbstractControl is earlier then\n * the value in the specified FromControl / AbstractControl\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const earlierThenValidator =\n  (\n    date: Date,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error =\n      error || `This control must have a value earlier then ${date}.`;\n    const errors: ValidationErrors =\n      typeof error === \"string\"\n        ? { [errorName || \"earlierThen\"]: error }\n        : error;\n\n    return prepareToCompare(control?.value) < prepareToCompare(date)\n      ? null\n      : errors;\n  };\n\n/**\n * Checks if the date in the given FromControl / AbstractControl is greater then\n * the value in the specified FromControl / AbstractControl\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const laterThenValidator =\n  (\n    date: Date,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error =\n      error || `This control must have a value later then ${date}.`;\n    const errors: ValidationErrors =\n      typeof error === \"string\" ? { [errorName || \"laterThen\"]: error } : error;\n\n    return prepareToCompare(control?.value) > prepareToCompare(date)\n      ? null\n      : errors;\n  };\n\n/**\n * Compares the date values of the given FromControl / AbstractControl and\n * specified FromControl / AbstractControl\n *\n * @param {string}                    - name of the filed to compare against\n * @param {ComparisonOperations}      - comparison to preform\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const compareToValidator =\n  (\n    filedName: string,\n    comparison: ComparisonOperations,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    const date = control.parent?.get(filedName)?.value;\n    error = error || `Value comparison with ${date?.value} failed.`;\n    const errors: ValidationErrors =\n      typeof error === \"string\"\n        ? { [errorName || \"dateComparison\"]: error }\n        : error;\n    return control.value &&\n      date &&\n      compareDates(control.value, date, comparison)\n      ? null\n      : errors;\n  };\n\n/**\n * Returns a validation error if a condition is met\n *\n * @param {Function | boolean}        - conditional function or a boolean value\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const requiredWhenValidator =\n  (\n    conditional: (() => boolean | boolean) | boolean,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || \"This control has a conditional set on it.\";\n    const errors: ValidationErrors =\n      typeof error === \"string\"\n        ? { [errorName || \"requiredWhen\"]: error }\n        : error;\n\n    const outcome =\n      typeof conditional === \"function\" ? conditional() : conditional;\n    return !control.value || !outcome ? null : errors;\n  };\n\n/**\n * Returns a validation error if a given FromControl / AbstractControl has no value\n * and specified FromControl / AbstractControl has it\n *\n * @param {string}                    - name of the FromControl / AbstractControl to link to\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const linkToValidator =\n  (\n    linkTo: string,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `This control has a link to ${linkTo}.`;\n    const errors: ValidationErrors =\n      typeof error === \"string\" ? { [errorName || \"linkTo\"]: error } : error;\n\n    const linkedTo = control.parent?.get(linkTo);\n    return !control?.value && !!linkedTo?.value ? errors : null;\n  };\n\n/**\n * Returns a validation error if a given FromControl / AbstractControl has a value\n * and specified FromControl / AbstractControl does not\n *\n * @param {string}                    - name of the FromControl / AbstractControl\n *                                      which a given FromControl / AbstractControl is linked to\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const linkedToValidator =\n  (\n    linkedTo: string,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `This control is linked to ${linkedTo}.`;\n    const errors: ValidationErrors =\n      typeof error === \"string\" ? { [errorName || \"linkTo\"]: error } : error;\n\n    const link = control.parent?.get(linkedTo);\n    return control?.value && !link?.value ? errors : null;\n  };\n\n/**\n * Returns a validation error if a nether the given FromControl / AbstractControl nor\n * the specified FromControl / AbstractControl has values\n *\n * @param {AbstractControl}           - AbstractControl to preform the check against\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const etherOrValidator =\n  (\n    toCheck: string,\n    errorName?: string,\n    error?: ValidationErrors | string\n  ): ValidatorFn =>\n  (control: AbstractControl): ValidationErrors | null => {\n    error = error || `Ether this control or ${toCheck} has to have value.`;\n    const errors: ValidationErrors =\n      typeof error === \"string\" ? { [errorName || \"etherOr\"]: error } : error;\n\n    const check = control.parent?.get(toCheck) as AbstractControl;\n    if (check && !control?.value && !check?.value) {\n      console.log('prc')\n      check.setErrors({\n        [errorName || \"etherOr\"]: error,\n      });\n      return errors;\n    } else {\n      if (check) {\n        check.setErrors(null);\n      }\n      return check && !control?.value && !check?.value ? errors : null;\n    }\n  };\n"]},"resolvedIds":{"./helpers/date":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/date.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":14388,"body":[{"type":"ExportNamedDeclaration","start":85,"end":176,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":92,"end":176,"kind":"const","declarations":[{"type":"VariableDeclarator","start":98,"end":175,"id":{"type":"Identifier","start":98,"end":105,"name":"address"},"init":{"type":"Literal","start":108,"end":175,"raw":"/^(\\d{1,}) [a-zA-Z0-9\\s]+(\\,)? [a-zA-Z]+(\\,)? [A-Z]{2} [0-9]{5,6}$/","regex":{"flags":"","pattern":"^(\\d{1,}) [a-zA-Z0-9\\s]+(\\,)? [a-zA-Z]+(\\,)? [A-Z]{2} [0-9]{5,6}$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":214,"end":296,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":221,"end":296,"kind":"const","declarations":[{"type":"VariableDeclarator","start":227,"end":295,"id":{"type":"Identifier","start":227,"end":241,"name":"dateYYYY_MM_DD"},"init":{"type":"Literal","start":244,"end":295,"raw":"/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/","regex":{"flags":"","pattern":"([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":391,"end":748,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":398,"end":748,"kind":"const","declarations":[{"type":"VariableDeclarator","start":404,"end":747,"id":{"type":"Identifier","start":404,"end":418,"name":"dateDD_MM_YYYY"},"init":{"type":"Literal","start":421,"end":747,"raw":"/^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/","regex":{"flags":"","pattern":"^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":780,"end":920,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":787,"end":920,"kind":"const","declarations":[{"type":"VariableDeclarator","start":793,"end":919,"id":{"type":"Identifier","start":793,"end":798,"name":"email"},"init":{"type":"Literal","start":801,"end":919,"raw":"/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i","regex":{"flags":"i","pattern":"^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":960,"end":1095,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":967,"end":1095,"kind":"const","declarations":[{"type":"VariableDeclarator","start":973,"end":1094,"id":{"type":"Identifier","start":973,"end":984,"name":"IPAddressV4"},"init":{"type":"Literal","start":987,"end":1094,"raw":"/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/","regex":{"flags":"","pattern":"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":1135,"end":1824,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1142,"end":1824,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1148,"end":1823,"id":{"type":"Identifier","start":1148,"end":1159,"name":"IPAddressV6"},"init":{"type":"Literal","start":1162,"end":1823,"raw":"/(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/","regex":{"flags":"","pattern":"(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":1872,"end":3106,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1879,"end":3106,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1885,"end":3105,"id":{"type":"Identifier","start":1885,"end":1901,"name":"IPAddressV4AndV6"},"init":{"type":"Literal","start":1904,"end":3105,"raw":"/((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/","regex":{"flags":"","pattern":"((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3154,"end":3195,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3161,"end":3195,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3167,"end":3194,"id":{"type":"Identifier","start":3167,"end":3178,"name":"lettersOnly"},"init":{"type":"Literal","start":3181,"end":3194,"raw":"/^[A-Za-z]+$/","regex":{"flags":"","pattern":"^[A-Za-z]+$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3268,"end":3332,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3275,"end":3332,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3281,"end":3331,"id":{"type":"Identifier","start":3281,"end":3311,"name":"lettersPeriodsHyphensAndSpaces"},"init":{"type":"Literal","start":3314,"end":3331,"raw":"/^[a-zA-Z\\s.-]+$/","regex":{"flags":"","pattern":"^[a-zA-Z\\s.-]+$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3384,"end":3427,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3391,"end":3427,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3397,"end":3426,"id":{"type":"Identifier","start":3397,"end":3406,"name":"noSpecial"},"init":{"type":"Literal","start":3409,"end":3426,"raw":"/^[A-Za-z0-9 ]+$/","regex":{"flags":"","pattern":"^[A-Za-z0-9 ]+$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3475,"end":3510,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3482,"end":3510,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3488,"end":3509,"id":{"type":"Identifier","start":3488,"end":3499,"name":"numbersOnly"},"init":{"type":"Literal","start":3502,"end":3509,"raw":"/^\\d+$/","regex":{"flags":"","pattern":"^\\d+$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3552,"end":3610,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3559,"end":3610,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3565,"end":3609,"id":{"type":"Identifier","start":3565,"end":3573,"name":"passport"},"init":{"type":"Literal","start":3576,"end":3609,"raw":"/^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$/","regex":{"flags":"","pattern":"^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3763,"end":3892,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3770,"end":3892,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3776,"end":3891,"id":{"type":"Identifier","start":3776,"end":3792,"name":"passwordStrength"},"init":{"type":"Literal","start":3795,"end":3891,"raw":"/(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/","regex":{"flags":"","pattern":"(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":3937,"end":4015,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3944,"end":4015,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3950,"end":4014,"id":{"type":"Identifier","start":3950,"end":3961,"name":"phoneNumber"},"init":{"type":"Literal","start":3964,"end":4014,"raw":"/^(\\()?[2-9]{1}\\d{2}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/","regex":{"flags":"","pattern":"^(\\()?[2-9]{1}\\d{2}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4055,"end":4089,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4062,"end":4089,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4068,"end":4088,"id":{"type":"Identifier","start":4068,"end":4079,"name":"singleSpace"},"init":{"type":"Literal","start":4082,"end":4088,"raw":"/[\\s]/","regex":{"flags":"","pattern":"[\\s]"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4160,"end":4213,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4167,"end":4213,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4173,"end":4212,"id":{"type":"Identifier","start":4173,"end":4189,"name":"spaceRestriction"},"init":{"type":"Literal","start":4192,"end":4212,"raw":"/^\\S$|^\\S[\\s\\S]*\\S$/","regex":{"flags":"","pattern":"^\\S$|^\\S[\\s\\S]*\\S$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4272,"end":4526,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4279,"end":4526,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4285,"end":4525,"id":{"type":"Identifier","start":4285,"end":4288,"name":"ssn"},"init":{"type":"Literal","start":4291,"end":4525,"raw":"/^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$/","regex":{"flags":"","pattern":"^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4591,"end":4667,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4598,"end":4667,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4604,"end":4666,"id":{"type":"Identifier","start":4604,"end":4616,"name":"timeHH_MM_12"},"init":{"type":"Literal","start":4619,"end":4666,"raw":"/((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))/","regex":{"flags":"","pattern":"((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4732,"end":4804,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4739,"end":4804,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4745,"end":4803,"id":{"type":"Identifier","start":4745,"end":4757,"name":"timeHH_MM_24"},"init":{"type":"Literal","start":4760,"end":4803,"raw":"/^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/","regex":{"flags":"","pattern":"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4848,"end":4930,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4855,"end":4930,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4861,"end":4929,"id":{"type":"Identifier","start":4861,"end":4876,"name":"timeHH_MM_SS_24"},"init":{"type":"Literal","start":4879,"end":4929,"raw":"/(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)/","regex":{"flags":"","pattern":"(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":4959,"end":5066,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4966,"end":5066,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4972,"end":5065,"id":{"type":"Identifier","start":4972,"end":4975,"name":"url"},"init":{"type":"Literal","start":4978,"end":5065,"raw":"/(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/","regex":{"flags":"","pattern":"(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?"},"value":{}}}]}},{"type":"ExportNamedDeclaration","start":5122,"end":5173,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":5129,"end":5173,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5135,"end":5172,"id":{"type":"Identifier","start":5135,"end":5142,"name":"zipCode"},"init":{"type":"Literal","start":5145,"end":5172,"raw":"/(^\\d{5}$)|(^\\d{5}-\\d{4}$)/","regex":{"flags":"","pattern":"(^\\d{5}$)|(^\\d{5}-\\d{4}$)"},"value":{}}}]}}],"_rollupRemoved":[{"end":14388,"start":5174,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"// Checks id an input in a format of Street number Street Name, City, State ZIP code\nexport const address = /^(\\d{1,}) [a-zA-Z0-9\\s]+(\\,)? [a-zA-Z]+(\\,)? [A-Z]{2} [0-9]{5,6}$/;\n// Checks for date format YYYY-MM-dd\nexport const dateYYYY_MM_DD = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n// Checks for date format  dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY\n// with check for leap year\nexport const dateDD_MM_YYYY = /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\n// Checks if input is an email\nexport const email = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n// Checks if input is in a IPv4 format\nexport const IPAddressV4 = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n// Checks if input is in a IPv6 format\nexport const IPAddressV6 = /(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/;\n// Checks if input is in a IPv4 or IPv6 format\nexport const IPAddressV4AndV6 = /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/;\n// Checks if an input consists of letters only\nexport const lettersOnly = /^[A-Za-z]+$/;\n// Checks if the input consists of letters, periods, hyphens and spaces\nexport const lettersPeriodsHyphensAndSpaces = /^[a-zA-Z\\s.-]+$/;\n// Checks if input contains any special characters\nexport const noSpecial = /^[A-Za-z0-9 ]+$/;\n// Checks if an input consists of numbers only\nexport const numbersOnly = /^\\d+$/;\n// Checks if input is in passport format\nexport const passport = /^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$/;\n// Checks if input consist of at least 1 lowercase letter, 1 uppercase letter,\n// 1 number, 1 special character and has length of at least 8 characters\nexport const passwordStrength = /(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/;\n// Checks for a (000) 000 0000 phone format\nexport const phoneNumber = /^(\\()?[2-9]{1}\\d{2}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/;\n// Checks for a single space character\nexport const singleSpace = /[\\s]/;\n// Restrict only spaces, spaces at the beginning and end of the field\nexport const spaceRestriction = /^\\S$|^\\S[\\s\\S]*\\S$/;\n// Checks if input is in an Social Security Number format\nexport const ssn = /^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$/;\n// Checks for Time Format HH:MM 12-hour with optional leading 0\nexport const timeHH_MM_12 = /((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))/;\n// Checks for Time Format HH:MM 24-hour with optional leading 0\nexport const timeHH_MM_24 = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;\n// Checks for Time Format HH:MM:SS 24-hour\nexport const timeHH_MM_SS_24 = /(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)/;\n// Checks if input is a url\nexport const url = /(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/;\n// Checks of a zip code in formats 00000 or 00000-0000\nexport const zipCode = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtdmFsaWRhdG9yLXBhY2svc3JjL2xpYi9jb25zdGFudC9yZWdleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvRkFBb0Y7QUFDcEYsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLG1FQUFtRSxDQUFDO0FBQzNGLG9DQUFvQztBQUNwQyxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQ3pCLG1EQUFtRCxDQUFDO0FBQ3RELGlFQUFpRTtBQUNqRSwyQkFBMkI7QUFDM0IsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUN6QixzVUFBc1UsQ0FBQztBQUN6VSw4QkFBOEI7QUFDOUIsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUNoQixzSEFBc0gsQ0FBQztBQUN6SCxzQ0FBc0M7QUFDdEMsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUN0QiwyR0FBMkcsQ0FBQztBQUM5RyxzQ0FBc0M7QUFDdEMsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUN0QixxcEJBQXFwQixDQUFDO0FBQ3hwQiw4Q0FBOEM7QUFDOUMsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQzNCLGlyQ0FBaXJDLENBQUM7QUFDcHJDLDhDQUE4QztBQUM5QyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDO0FBQ3pDLHVFQUF1RTtBQUN2RSxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBRyxpQkFBaUIsQ0FBQztBQUNoRSxrREFBa0Q7QUFDbEQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLGlCQUFpQixDQUFDO0FBQzNDLDhDQUE4QztBQUM5QyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDO0FBQ25DLHdDQUF3QztBQUN4QyxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsaUNBQWlDLENBQUM7QUFDMUQsOEVBQThFO0FBQzlFLHdFQUF3RTtBQUN4RSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FDM0IsZ0dBQWdHLENBQUM7QUFDbkcsMkNBQTJDO0FBQzNDLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxrREFBa0QsQ0FBQztBQUM5RSxzQ0FBc0M7QUFDdEMsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQztBQUNsQyxxRUFBcUU7QUFDckUsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsb0JBQW9CLENBQUM7QUFDckQseURBQXlEO0FBQ3pELE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FDZCwwT0FBME8sQ0FBQztBQUM3TywrREFBK0Q7QUFDL0QsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLCtDQUErQyxDQUFDO0FBQzVFLCtEQUErRDtBQUMvRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsMkNBQTJDLENBQUM7QUFDeEUsMENBQTBDO0FBQzFDLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FDMUIsa0RBQWtELENBQUM7QUFDckQsMkJBQTJCO0FBQzNCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FDZCx1RkFBdUYsQ0FBQztBQUMxRixzREFBc0Q7QUFDdEQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLDJCQUEyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ2hlY2tzIGlkIGFuIGlucHV0IGluIGEgZm9ybWF0IG9mIFN0cmVldCBudW1iZXIgU3RyZWV0IE5hbWUsIENpdHksIFN0YXRlIFpJUCBjb2RlXG5leHBvcnQgY29uc3QgYWRkcmVzcyA9IC9eKFxcZHsxLH0pIFthLXpBLVowLTlcXHNdKyhcXCwpPyBbYS16QS1aXSsoXFwsKT8gW0EtWl17Mn0gWzAtOV17NSw2fSQvO1xuLy8gQ2hlY2tzIGZvciBkYXRlIGZvcm1hdCBZWVlZLU1NLWRkXG5leHBvcnQgY29uc3QgZGF0ZVlZWVlfTU1fREQgPVxuICAvKFsxMl1cXGR7M30tKDBbMS05XXwxWzAtMl0pLSgwWzEtOV18WzEyXVxcZHwzWzAxXSkpLztcbi8vIENoZWNrcyBmb3IgZGF0ZSBmb3JtYXQgIGRkLU1NLVlZWVkgb3IgZGQuTU0uWVlZWSBvciBkZC9NTS9ZWVlZXG4vLyB3aXRoIGNoZWNrIGZvciBsZWFwIHllYXJcbmV4cG9ydCBjb25zdCBkYXRlRERfTU1fWVlZWSA9XG4gIC9eKD86KD86MzEoXFwvfC18XFwuKSg/OjA/WzEzNTc4XXwxWzAyXSkpXFwxfCg/Oig/OjI5fDMwKShcXC98LXxcXC4pKD86MD9bMSwzLTldfDFbMC0yXSlcXDIpKSg/Oig/OjFbNi05XXxbMi05XVxcZCk/XFxkezJ9KSR8Xig/OjI5KFxcL3wtfFxcLikwPzJcXDMoPzooPzooPzoxWzYtOV18WzItOV1cXGQpPyg/OjBbNDhdfFsyNDY4XVswNDhdfFsxMzU3OV1bMjZdKXwoPzooPzoxNnxbMjQ2OF1bMDQ4XXxbMzU3OV1bMjZdKTAwKSkpKSR8Xig/OjA/WzEtOV18MVxcZHwyWzAtOF0pKFxcL3wtfFxcLikoPzooPzowP1sxLTldKXwoPzoxWzAtMl0pKVxcNCg/Oig/OjFbNi05XXxbMi05XVxcZCk/XFxkezJ9KSQvO1xuLy8gQ2hlY2tzIGlmIGlucHV0IGlzIGFuIGVtYWlsXG5leHBvcnQgY29uc3QgZW1haWwgPVxuICAvXigoW148PigpW1xcXVxcLiw7Olxcc0BcXFwiXSsoXFwuW148PigpW1xcXVxcLiw7Olxcc0BcXFwiXSspKil8KFxcXCIuK1xcXCIpKUAoKFtePD4oKVtcXF1cXC4sOzpcXHNAXFxcIl0rXFwuKStbXjw+KClbXFxdXFwuLDs6XFxzQFxcXCJdezIsfSkkL2k7XG4vLyBDaGVja3MgaWYgaW5wdXQgaXMgaW4gYSBJUHY0IGZvcm1hdFxuZXhwb3J0IGNvbnN0IElQQWRkcmVzc1Y0ID1cbiAgL14oKFswLTldfFsxLTldWzAtOV18MVswLTldezJ9fDJbMC00XVswLTldfDI1WzAtNV0pXFwuKXszfShbMC05XXxbMS05XVswLTldfDFbMC05XXsyfXwyWzAtNF1bMC05XXwyNVswLTVdKSQvO1xuLy8gQ2hlY2tzIGlmIGlucHV0IGlzIGluIGEgSVB2NiBmb3JtYXRcbmV4cG9ydCBjb25zdCBJUEFkZHJlc3NWNiA9XG4gIC8oKFswLTlhLWZBLUZdezEsNH06KXs3LDd9WzAtOWEtZkEtRl17MSw0fXwoWzAtOWEtZkEtRl17MSw0fTopezEsN306fChbMC05YS1mQS1GXXsxLDR9Oil7MSw2fTpbMC05YS1mQS1GXXsxLDR9fChbMC05YS1mQS1GXXsxLDR9Oil7MSw1fSg6WzAtOWEtZkEtRl17MSw0fSl7MSwyfXwoWzAtOWEtZkEtRl17MSw0fTopezEsNH0oOlswLTlhLWZBLUZdezEsNH0pezEsM318KFswLTlhLWZBLUZdezEsNH06KXsxLDN9KDpbMC05YS1mQS1GXXsxLDR9KXsxLDR9fChbMC05YS1mQS1GXXsxLDR9Oil7MSwyfSg6WzAtOWEtZkEtRl17MSw0fSl7MSw1fXxbMC05YS1mQS1GXXsxLDR9OigoOlswLTlhLWZBLUZdezEsNH0pezEsNn0pfDooKDpbMC05YS1mQS1GXXsxLDR9KXsxLDd9fDopfGZlODA6KDpbMC05YS1mQS1GXXswLDR9KXswLDR9JVswLTlhLXpBLVpdezEsfXw6OihmZmZmKDowezEsNH0pezAsMX06KXswLDF9KCgyNVswLTVdfCgyWzAtNF18MXswLDF9WzAtOV0pezAsMX1bMC05XSlcXC4pezMsM30oMjVbMC01XXwoMlswLTRdfDF7MCwxfVswLTldKXswLDF9WzAtOV0pfChbMC05YS1mQS1GXXsxLDR9Oil7MSw0fTooKDI1WzAtNV18KDJbMC00XXwxezAsMX1bMC05XSl7MCwxfVswLTldKVxcLil7MywzfSgyNVswLTVdfCgyWzAtNF18MXswLDF9WzAtOV0pezAsMX1bMC05XSkpLztcbi8vIENoZWNrcyBpZiBpbnB1dCBpcyBpbiBhIElQdjQgb3IgSVB2NiBmb3JtYXRcbmV4cG9ydCBjb25zdCBJUEFkZHJlc3NWNEFuZFY2ID1cbiAgLygoXlxccyooKChbMC05XXxbMS05XVswLTldfDFbMC05XXsyfXwyWzAtNF1bMC05XXwyNVswLTVdKVxcLil7M30oWzAtOV18WzEtOV1bMC05XXwxWzAtOV17Mn18MlswLTRdWzAtOV18MjVbMC01XSkpXFxzKiQpfCheXFxzKigoKFswLTlBLUZhLWZdezEsNH06KXs3fShbMC05QS1GYS1mXXsxLDR9fDopKXwoKFswLTlBLUZhLWZdezEsNH06KXs2fSg6WzAtOUEtRmEtZl17MSw0fXwoKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKShcXC4oMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKXszfSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezV9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsMn0pfDooKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKShcXC4oMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKXszfSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezR9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsM30pfCgoOlswLTlBLUZhLWZdezEsNH0pPzooKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKShcXC4oMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKXszfSkpfDopKXwoKFswLTlBLUZhLWZdezEsNH06KXszfSgoKDpbMC05QS1GYS1mXXsxLDR9KXsxLDR9KXwoKDpbMC05QS1GYS1mXXsxLDR9KXswLDJ9OigoMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKFxcLigyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkpezN9KSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezJ9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsNX0pfCgoOlswLTlBLUZhLWZdezEsNH0pezAsM306KCgyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkoXFwuKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKSl7M30pKXw6KSl8KChbMC05QS1GYS1mXXsxLDR9Oil7MX0oKCg6WzAtOUEtRmEtZl17MSw0fSl7MSw2fSl8KCg6WzAtOUEtRmEtZl17MSw0fSl7MCw0fTooKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKShcXC4oMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKXszfSkpfDopKXwoOigoKDpbMC05QS1GYS1mXXsxLDR9KXsxLDd9KXwoKDpbMC05QS1GYS1mXXsxLDR9KXswLDV9OigoMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKFxcLigyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkpezN9KSl8OikpKSglLispP1xccyokKSkvO1xuLy8gQ2hlY2tzIGlmIGFuIGlucHV0IGNvbnNpc3RzIG9mIGxldHRlcnMgb25seVxuZXhwb3J0IGNvbnN0IGxldHRlcnNPbmx5ID0gL15bQS1aYS16XSskLztcbi8vIENoZWNrcyBpZiB0aGUgaW5wdXQgY29uc2lzdHMgb2YgbGV0dGVycywgcGVyaW9kcywgaHlwaGVucyBhbmQgc3BhY2VzXG5leHBvcnQgY29uc3QgbGV0dGVyc1BlcmlvZHNIeXBoZW5zQW5kU3BhY2VzID0gL15bYS16QS1aXFxzLi1dKyQvO1xuLy8gQ2hlY2tzIGlmIGlucHV0IGNvbnRhaW5zIGFueSBzcGVjaWFsIGNoYXJhY3RlcnNcbmV4cG9ydCBjb25zdCBub1NwZWNpYWwgPSAvXltBLVphLXowLTkgXSskLztcbi8vIENoZWNrcyBpZiBhbiBpbnB1dCBjb25zaXN0cyBvZiBudW1iZXJzIG9ubHlcbmV4cG9ydCBjb25zdCBudW1iZXJzT25seSA9IC9eXFxkKyQvO1xuLy8gQ2hlY2tzIGlmIGlucHV0IGlzIGluIHBhc3Nwb3J0IGZvcm1hdFxuZXhwb3J0IGNvbnN0IHBhc3Nwb3J0ID0gL15bQS1QUi1XWV1bMS05XVxcZFxccz9cXGR7NH1bMS05XSQvO1xuLy8gQ2hlY2tzIGlmIGlucHV0IGNvbnNpc3Qgb2YgYXQgbGVhc3QgMSBsb3dlcmNhc2UgbGV0dGVyLCAxIHVwcGVyY2FzZSBsZXR0ZXIsXG4vLyAxIG51bWJlciwgMSBzcGVjaWFsIGNoYXJhY3RlciBhbmQgaGFzIGxlbmd0aCBvZiBhdCBsZWFzdCA4IGNoYXJhY3RlcnNcbmV4cG9ydCBjb25zdCBwYXNzd29yZFN0cmVuZ3RoID1cbiAgLyg/PSguKlswLTldKSkoPz0uKltcXCFAIyQlXiYqKClcXFxcW1xcXXt9XFwtXys9fmB8OjtcIic8PiwuLz9dKSg/PS4qW2Etel0pKD89KC4qW0EtWl0pKSg/PSguKikpLns4LH0vO1xuLy8gQ2hlY2tzIGZvciBhICgwMDApIDAwMCAwMDAwIHBob25lIGZvcm1hdFxuZXhwb3J0IGNvbnN0IHBob25lTnVtYmVyID0gL14oXFwoKT9bMi05XXsxfVxcZHsyfShcXCkpPygtfFxccyk/XFxkezN9KC18XFxzKVxcZHs0fSQvO1xuLy8gQ2hlY2tzIGZvciBhIHNpbmdsZSBzcGFjZSBjaGFyYWN0ZXJcbmV4cG9ydCBjb25zdCBzaW5nbGVTcGFjZSA9IC9bXFxzXS87XG4vLyBSZXN0cmljdCBvbmx5IHNwYWNlcywgc3BhY2VzIGF0IHRoZSBiZWdpbm5pbmcgYW5kIGVuZCBvZiB0aGUgZmllbGRcbmV4cG9ydCBjb25zdCBzcGFjZVJlc3RyaWN0aW9uID0gL15cXFMkfF5cXFNbXFxzXFxTXSpcXFMkLztcbi8vIENoZWNrcyBpZiBpbnB1dCBpcyBpbiBhbiBTb2NpYWwgU2VjdXJpdHkgTnVtYmVyIGZvcm1hdFxuZXhwb3J0IGNvbnN0IHNzbiA9XG4gIC9eKCg/ITIxOS0wOS05OTk5fDA3OC0wNS0xMTIwKSg/ITY2NnwwMDB8OVxcZHsyfSlcXGR7M30tKD8hMDApXFxkezJ9LSg/ITB7NH0pXFxkezR9KXwoKD8hMjE5IDA5IDk5OTl8MDc4IDA1IDExMjApKD8hNjY2fDAwMHw5XFxkezJ9KVxcZHszfSAoPyEwMClcXGR7Mn0gKD8hMHs0fSlcXGR7NH0pfCgoPyEyMTkwOTk5OTl8MDc4MDUxMTIwKSg/ITY2NnwwMDB8OVxcZHsyfSlcXGR7M30oPyEwMClcXGR7Mn0oPyEwezR9KVxcZHs0fSkkLztcbi8vIENoZWNrcyBmb3IgVGltZSBGb3JtYXQgSEg6TU0gMTItaG91ciB3aXRoIG9wdGlvbmFsIGxlYWRpbmcgMFxuZXhwb3J0IGNvbnN0IHRpbWVISF9NTV8xMiA9IC8oKDFbMC0yXXwwP1sxLTldKTooWzAtNV1bMC05XSkgPyhbQWFQcF1bTW1dKSkvO1xuLy8gQ2hlY2tzIGZvciBUaW1lIEZvcm1hdCBISDpNTSAyNC1ob3VyIHdpdGggb3B0aW9uYWwgbGVhZGluZyAwXG5leHBvcnQgY29uc3QgdGltZUhIX01NXzI0ID0gL14oWzAtOV18MFswLTldfDFbMC05XXwyWzAtM10pOlswLTVdWzAtOV0kLztcbi8vIENoZWNrcyBmb3IgVGltZSBGb3JtYXQgSEg6TU06U1MgMjQtaG91clxuZXhwb3J0IGNvbnN0IHRpbWVISF9NTV9TU18yNCA9XG4gIC8oPzpbMDFdXFxkfDJbMDEyM10pOig/OlswMTIzNDVdXFxkKTooPzpbMDEyMzQ1XVxcZCkvO1xuLy8gQ2hlY2tzIGlmIGlucHV0IGlzIGEgdXJsXG5leHBvcnQgY29uc3QgdXJsID1cbiAgLyhodHRwfGZ0cHxodHRwcyk6XFwvXFwvW1xcdy1dKyhcXC5bXFx3LV0rKSsoW1xcdy4sQD9ePSUmYW1wOzpcXC9+KyMtXSpbXFx3QD9ePSUmYW1wO1xcL34rIy1dKT8vO1xuLy8gQ2hlY2tzIG9mIGEgemlwIGNvZGUgaW4gZm9ybWF0cyAwMDAwMCBvciAwMDAwMC0wMDAwXG5leHBvcnQgY29uc3QgemlwQ29kZSA9IC8oXlxcZHs1fSQpfCheXFxkezV9LVxcZHs0fSQpLztcbiJdfQ==","customTransformCache":false,"dependencies":[],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/constant/regex.mjs","meta":{},"moduleSideEffects":false,"originalCode":"// Checks id an input in a format of Street number Street Name, City, State ZIP code\nexport const address = /^(\\d{1,}) [a-zA-Z0-9\\s]+(\\,)? [a-zA-Z]+(\\,)? [A-Z]{2} [0-9]{5,6}$/;\n// Checks for date format YYYY-MM-dd\nexport const dateYYYY_MM_DD = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n// Checks for date format  dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY\n// with check for leap year\nexport const dateDD_MM_YYYY = /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\n// Checks if input is an email\nexport const email = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n// Checks if input is in a IPv4 format\nexport const IPAddressV4 = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n// Checks if input is in a IPv6 format\nexport const IPAddressV6 = /(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/;\n// Checks if input is in a IPv4 or IPv6 format\nexport const IPAddressV4AndV6 = /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/;\n// Checks if an input consists of letters only\nexport const lettersOnly = /^[A-Za-z]+$/;\n// Checks if the input consists of letters, periods, hyphens and spaces\nexport const lettersPeriodsHyphensAndSpaces = /^[a-zA-Z\\s.-]+$/;\n// Checks if input contains any special characters\nexport const noSpecial = /^[A-Za-z0-9 ]+$/;\n// Checks if an input consists of numbers only\nexport const numbersOnly = /^\\d+$/;\n// Checks if input is in passport format\nexport const passport = /^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$/;\n// Checks if input consist of at least 1 lowercase letter, 1 uppercase letter,\n// 1 number, 1 special character and has length of at least 8 characters\nexport const passwordStrength = /(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/;\n// Checks for a (000) 000 0000 phone format\nexport const phoneNumber = /^(\\()?[2-9]{1}\\d{2}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/;\n// Checks for a single space character\nexport const singleSpace = /[\\s]/;\n// Restrict only spaces, spaces at the beginning and end of the field\nexport const spaceRestriction = /^\\S$|^\\S[\\s\\S]*\\S$/;\n// Checks if input is in an Social Security Number format\nexport const ssn = /^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$/;\n// Checks for Time Format HH:MM 12-hour with optional leading 0\nexport const timeHH_MM_12 = /((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))/;\n// Checks for Time Format HH:MM 24-hour with optional leading 0\nexport const timeHH_MM_24 = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;\n// Checks for Time Format HH:MM:SS 24-hour\nexport const timeHH_MM_SS_24 = /(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)/;\n// Checks if input is a url\nexport const url = /(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/;\n// Checks of a zip code in formats 00000 or 00000-0000\nexport const zipCode = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"regex.js","sourceRoot":"","sources":["../../../../../projects/ngx-validator-pack/src/lib/constant/regex.ts"],"names":[],"mappings":[[[0,0,0,0],[84,0,0,84]],[[0,0,1,0],[6,0,1,6],[7,0,1,7],[13,0,1,13],[20,0,1,20],[23,0,1,23],[90,0,1,90],[91,0,1,91]],[[0,0,2,0],[36,0,2,36]],[[0,0,3,0],[6,0,3,6],[7,0,3,7],[13,0,3,13],[27,0,3,27],[30,0,4,2],[81,0,4,53],[82,0,4,54]],[[0,0,5,0],[65,0,5,65]],[[0,0,6,0],[27,0,6,27]],[[0,0,7,0],[6,0,7,6],[7,0,7,7],[13,0,7,13],[27,0,7,27],[30,0,8,2],[356,0,8,328],[357,0,8,329]],[[0,0,9,0],[30,0,9,30]],[[0,0,10,0],[6,0,10,6],[7,0,10,7],[13,0,10,13],[18,0,10,18],[21,0,11,2],[139,0,11,120],[140,0,11,121]],[[0,0,12,0],[38,0,12,38]],[[0,0,13,0],[6,0,13,6],[7,0,13,7],[13,0,13,13],[24,0,13,24],[27,0,14,2],[134,0,14,109],[135,0,14,110]],[[0,0,15,0],[38,0,15,38]],[[0,0,16,0],[6,0,16,6],[7,0,16,7],[13,0,16,13],[24,0,16,24],[27,0,17,2],[688,0,17,663],[689,0,17,664]],[[0,0,18,0],[46,0,18,46]],[[0,0,19,0],[6,0,19,6],[7,0,19,7],[13,0,19,13],[29,0,19,29],[32,0,20,2],[1233,0,20,1203],[1234,0,20,1204]],[[0,0,21,0],[46,0,21,46]],[[0,0,22,0],[6,0,22,6],[7,0,22,7],[13,0,22,13],[24,0,22,24],[27,0,22,27],[40,0,22,40],[41,0,22,41]],[[0,0,23,0],[71,0,23,71]],[[0,0,24,0],[6,0,24,6],[7,0,24,7],[13,0,24,13],[43,0,24,43],[46,0,24,46],[63,0,24,63],[64,0,24,64]],[[0,0,25,0],[50,0,25,50]],[[0,0,26,0],[6,0,26,6],[7,0,26,7],[13,0,26,13],[22,0,26,22],[25,0,26,25],[42,0,26,42],[43,0,26,43]],[[0,0,27,0],[46,0,27,46]],[[0,0,28,0],[6,0,28,6],[7,0,28,7],[13,0,28,13],[24,0,28,24],[27,0,28,27],[34,0,28,34],[35,0,28,35]],[[0,0,29,0],[40,0,29,40]],[[0,0,30,0],[6,0,30,6],[7,0,30,7],[13,0,30,13],[21,0,30,21],[24,0,30,24],[57,0,30,57],[58,0,30,58]],[[0,0,31,0],[78,0,31,78]],[[0,0,32,0],[72,0,32,72]],[[0,0,33,0],[6,0,33,6],[7,0,33,7],[13,0,33,13],[29,0,33,29],[32,0,34,2],[128,0,34,98],[129,0,34,99]],[[0,0,35,0],[43,0,35,43]],[[0,0,36,0],[6,0,36,6],[7,0,36,7],[13,0,36,13],[24,0,36,24],[27,0,36,27],[77,0,36,77],[78,0,36,78]],[[0,0,37,0],[38,0,37,38]],[[0,0,38,0],[6,0,38,6],[7,0,38,7],[13,0,38,13],[24,0,38,24],[27,0,38,27],[33,0,38,33],[34,0,38,34]],[[0,0,39,0],[69,0,39,69]],[[0,0,40,0],[6,0,40,6],[7,0,40,7],[13,0,40,13],[29,0,40,29],[32,0,40,32],[52,0,40,52],[53,0,40,53]],[[0,0,41,0],[57,0,41,57]],[[0,0,42,0],[6,0,42,6],[7,0,42,7],[13,0,42,13],[16,0,42,16],[19,0,43,2],[253,0,43,236],[254,0,43,237]],[[0,0,44,0],[63,0,44,63]],[[0,0,45,0],[6,0,45,6],[7,0,45,7],[13,0,45,13],[25,0,45,25],[28,0,45,28],[75,0,45,75],[76,0,45,76]],[[0,0,46,0],[63,0,46,63]],[[0,0,47,0],[6,0,47,6],[7,0,47,7],[13,0,47,13],[25,0,47,25],[28,0,47,28],[71,0,47,71],[72,0,47,72]],[[0,0,48,0],[42,0,48,42]],[[0,0,49,0],[6,0,49,6],[7,0,49,7],[13,0,49,13],[28,0,49,28],[31,0,50,2],[81,0,50,52],[82,0,50,53]],[[0,0,51,0],[27,0,51,27]],[[0,0,52,0],[6,0,52,6],[7,0,52,7],[13,0,52,13],[16,0,52,16],[19,0,53,2],[106,0,53,89],[107,0,53,90]],[[0,0,54,0],[54,0,54,54]],[[0,0,55,0],[6,0,55,6],[7,0,55,7],[13,0,55,13],[20,0,55,20],[23,0,55,23],[50,0,55,50],[51,0,55,51]]],"sourcesContent":["// Checks id an input in a format of Street number Street Name, City, State ZIP code\nexport const address = /^(\\d{1,}) [a-zA-Z0-9\\s]+(\\,)? [a-zA-Z]+(\\,)? [A-Z]{2} [0-9]{5,6}$/;\n// Checks for date format YYYY-MM-dd\nexport const dateYYYY_MM_DD =\n  /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n// Checks for date format  dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY\n// with check for leap year\nexport const dateDD_MM_YYYY =\n  /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\n// Checks if input is an email\nexport const email =\n  /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n// Checks if input is in a IPv4 format\nexport const IPAddressV4 =\n  /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n// Checks if input is in a IPv6 format\nexport const IPAddressV6 =\n  /(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/;\n// Checks if input is in a IPv4 or IPv6 format\nexport const IPAddressV4AndV6 =\n  /((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))/;\n// Checks if an input consists of letters only\nexport const lettersOnly = /^[A-Za-z]+$/;\n// Checks if the input consists of letters, periods, hyphens and spaces\nexport const lettersPeriodsHyphensAndSpaces = /^[a-zA-Z\\s.-]+$/;\n// Checks if input contains any special characters\nexport const noSpecial = /^[A-Za-z0-9 ]+$/;\n// Checks if an input consists of numbers only\nexport const numbersOnly = /^\\d+$/;\n// Checks if input is in passport format\nexport const passport = /^[A-PR-WY][1-9]\\d\\s?\\d{4}[1-9]$/;\n// Checks if input consist of at least 1 lowercase letter, 1 uppercase letter,\n// 1 number, 1 special character and has length of at least 8 characters\nexport const passwordStrength =\n  /(?=(.*[0-9]))(?=.*[\\!@#$%^&*()\\\\[\\]{}\\-_+=~`|:;\"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/;\n// Checks for a (000) 000 0000 phone format\nexport const phoneNumber = /^(\\()?[2-9]{1}\\d{2}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/;\n// Checks for a single space character\nexport const singleSpace = /[\\s]/;\n// Restrict only spaces, spaces at the beginning and end of the field\nexport const spaceRestriction = /^\\S$|^\\S[\\s\\S]*\\S$/;\n// Checks if input is in an Social Security Number format\nexport const ssn =\n  /^((?!219-09-9999|078-05-1120)(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\\d{2})\\d{3} (?!00)\\d{2} (?!0{4})\\d{4})|((?!219099999|078051120)(?!666|000|9\\d{2})\\d{3}(?!00)\\d{2}(?!0{4})\\d{4})$/;\n// Checks for Time Format HH:MM 12-hour with optional leading 0\nexport const timeHH_MM_12 = /((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))/;\n// Checks for Time Format HH:MM 24-hour with optional leading 0\nexport const timeHH_MM_24 = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;\n// Checks for Time Format HH:MM:SS 24-hour\nexport const timeHH_MM_SS_24 =\n  /(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)/;\n// Checks if input is a url\nexport const url =\n  /(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/;\n// Checks of a zip code in formats 00000 or 00000-0000\nexport const zipCode = /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/;\n"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":36995,"body":[{"type":"ImportDeclaration","start":192,"end":275,"specifiers":[{"type":"ImportSpecifier","start":201,"end":221,"imported":{"type":"Identifier","start":201,"end":221,"name":"regexpMatchValidator"},"local":{"type":"Identifier","start":201,"end":221,"name":"regexpMatchValidator"}},{"type":"ImportSpecifier","start":223,"end":247,"imported":{"type":"Identifier","start":223,"end":247,"name":"regexpNotAMatchValidator"},"local":{"type":"Identifier","start":223,"end":247,"name":"regexpNotAMatchValidator"}}],"source":{"type":"Literal","start":256,"end":274,"value":"./ngx-validators","raw":"\"./ngx-validators\""},"attributes":[]},{"type":"ImportDeclaration","start":276,"end":576,"specifiers":[{"type":"ImportSpecifier","start":285,"end":292,"imported":{"type":"Identifier","start":285,"end":292,"name":"address"},"local":{"type":"Identifier","start":285,"end":292,"name":"address"}},{"type":"ImportSpecifier","start":294,"end":308,"imported":{"type":"Identifier","start":294,"end":308,"name":"dateDD_MM_YYYY"},"local":{"type":"Identifier","start":294,"end":308,"name":"dateDD_MM_YYYY"}},{"type":"ImportSpecifier","start":310,"end":324,"imported":{"type":"Identifier","start":310,"end":324,"name":"dateYYYY_MM_DD"},"local":{"type":"Identifier","start":310,"end":324,"name":"dateYYYY_MM_DD"}},{"type":"ImportSpecifier","start":326,"end":331,"imported":{"type":"Identifier","start":326,"end":331,"name":"email"},"local":{"type":"Identifier","start":326,"end":331,"name":"email"}},{"type":"ImportSpecifier","start":333,"end":344,"imported":{"type":"Identifier","start":333,"end":344,"name":"IPAddressV4"},"local":{"type":"Identifier","start":333,"end":344,"name":"IPAddressV4"}},{"type":"ImportSpecifier","start":346,"end":362,"imported":{"type":"Identifier","start":346,"end":362,"name":"IPAddressV4AndV6"},"local":{"type":"Identifier","start":346,"end":362,"name":"IPAddressV4AndV6"}},{"type":"ImportSpecifier","start":364,"end":375,"imported":{"type":"Identifier","start":364,"end":375,"name":"IPAddressV6"},"local":{"type":"Identifier","start":364,"end":375,"name":"IPAddressV6"}},{"type":"ImportSpecifier","start":377,"end":388,"imported":{"type":"Identifier","start":377,"end":388,"name":"lettersOnly"},"local":{"type":"Identifier","start":377,"end":388,"name":"lettersOnly"}},{"type":"ImportSpecifier","start":390,"end":399,"imported":{"type":"Identifier","start":390,"end":399,"name":"noSpecial"},"local":{"type":"Identifier","start":390,"end":399,"name":"noSpecial"}},{"type":"ImportSpecifier","start":401,"end":412,"imported":{"type":"Identifier","start":401,"end":412,"name":"numbersOnly"},"local":{"type":"Identifier","start":401,"end":412,"name":"numbersOnly"}},{"type":"ImportSpecifier","start":414,"end":422,"imported":{"type":"Identifier","start":414,"end":422,"name":"passport"},"local":{"type":"Identifier","start":414,"end":422,"name":"passport"}},{"type":"ImportSpecifier","start":424,"end":440,"imported":{"type":"Identifier","start":424,"end":440,"name":"passwordStrength"},"local":{"type":"Identifier","start":424,"end":440,"name":"passwordStrength"}},{"type":"ImportSpecifier","start":442,"end":453,"imported":{"type":"Identifier","start":442,"end":453,"name":"phoneNumber"},"local":{"type":"Identifier","start":442,"end":453,"name":"phoneNumber"}},{"type":"ImportSpecifier","start":455,"end":466,"imported":{"type":"Identifier","start":455,"end":466,"name":"singleSpace"},"local":{"type":"Identifier","start":455,"end":466,"name":"singleSpace"}},{"type":"ImportSpecifier","start":468,"end":484,"imported":{"type":"Identifier","start":468,"end":484,"name":"spaceRestriction"},"local":{"type":"Identifier","start":468,"end":484,"name":"spaceRestriction"}},{"type":"ImportSpecifier","start":486,"end":489,"imported":{"type":"Identifier","start":486,"end":489,"name":"ssn"},"local":{"type":"Identifier","start":486,"end":489,"name":"ssn"}},{"type":"ImportSpecifier","start":491,"end":503,"imported":{"type":"Identifier","start":491,"end":503,"name":"timeHH_MM_12"},"local":{"type":"Identifier","start":491,"end":503,"name":"timeHH_MM_12"}},{"type":"ImportSpecifier","start":505,"end":517,"imported":{"type":"Identifier","start":505,"end":517,"name":"timeHH_MM_24"},"local":{"type":"Identifier","start":505,"end":517,"name":"timeHH_MM_24"}},{"type":"ImportSpecifier","start":519,"end":534,"imported":{"type":"Identifier","start":519,"end":534,"name":"timeHH_MM_SS_24"},"local":{"type":"Identifier","start":519,"end":534,"name":"timeHH_MM_SS_24"}},{"type":"ImportSpecifier","start":536,"end":539,"imported":{"type":"Identifier","start":536,"end":539,"name":"url"},"local":{"type":"Identifier","start":536,"end":539,"name":"url"}},{"type":"ImportSpecifier","start":541,"end":548,"imported":{"type":"Identifier","start":541,"end":548,"name":"zipCode"},"local":{"type":"Identifier","start":541,"end":548,"name":"zipCode"}}],"source":{"type":"Literal","start":557,"end":575,"value":"./constant/regex","raw":"\"./constant/regex\""},"attributes":[]},{"type":"ExportNamedDeclaration","start":1010,"end":1221,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1017,"end":1221,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1023,"end":1220,"id":{"type":"Identifier","start":1023,"end":1039,"name":"addressValidator"},"init":{"type":"ArrowFunctionExpression","start":1042,"end":1220,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":1043,"end":1052,"name":"errorName"},{"type":"Identifier","start":1054,"end":1059,"name":"error"}],"body":{"type":"CallExpression","start":1064,"end":1220,"optional":false,"callee":{"type":"Identifier","start":1064,"end":1084,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":1085,"end":1092,"name":"address"},{"type":"AssignmentExpression","start":1095,"end":1116,"operator":"=","left":{"type":"Identifier","start":1095,"end":1104,"name":"errorName"},"right":{"type":"Literal","start":1107,"end":1116,"value":"address","raw":"\"address\""}},{"type":"AssignmentExpression","start":1120,"end":1218,"operator":"=","left":{"type":"Identifier","start":1120,"end":1125,"name":"error"},"right":{"type":"Literal","start":1132,"end":1218,"value":"Please input a value in a format of: Street number Street Name, City, State ZIP code","raw":"\"Please input a value in a format of: Street number Street Name, City, State ZIP code\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":1564,"end":1740,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1571,"end":1740,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1577,"end":1739,"id":{"type":"Identifier","start":1577,"end":1598,"name":"alphabetOnlyValidator"},"init":{"type":"ArrowFunctionExpression","start":1601,"end":1739,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":1602,"end":1611,"name":"errorName"},{"type":"Identifier","start":1613,"end":1618,"name":"error"}],"body":{"type":"CallExpression","start":1623,"end":1739,"optional":false,"callee":{"type":"Identifier","start":1623,"end":1643,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":1644,"end":1655,"name":"lettersOnly"},{"type":"AssignmentExpression","start":1658,"end":1684,"operator":"=","left":{"type":"Identifier","start":1658,"end":1667,"name":"errorName"},"right":{"type":"Literal","start":1670,"end":1684,"value":"alphabetOnly","raw":"\"alphabetOnly\""}},{"type":"AssignmentExpression","start":1688,"end":1737,"operator":"=","left":{"type":"Identifier","start":1688,"end":1693,"name":"error"},"right":{"type":"Literal","start":1696,"end":1737,"value":"Only alphabetic characters are allowed.","raw":"\"Only alphabetic characters are allowed.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":2117,"end":2355,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":2124,"end":2355,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2130,"end":2354,"id":{"type":"Identifier","start":2130,"end":2153,"name":"dateDD_MM_YYYYValidator"},"init":{"type":"ArrowFunctionExpression","start":2156,"end":2354,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":2157,"end":2166,"name":"errorName"},{"type":"Identifier","start":2168,"end":2173,"name":"error"}],"body":{"type":"CallExpression","start":2178,"end":2354,"optional":false,"callee":{"type":"Identifier","start":2178,"end":2198,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":2199,"end":2213,"name":"dateDD_MM_YYYY"},{"type":"AssignmentExpression","start":2216,"end":2244,"operator":"=","left":{"type":"Identifier","start":2216,"end":2225,"name":"errorName"},"right":{"type":"Literal","start":2228,"end":2244,"value":"dateDD_MM_YYYY","raw":"\"dateDD_MM_YYYY\""}},{"type":"AssignmentExpression","start":2248,"end":2352,"operator":"=","left":{"type":"Identifier","start":2248,"end":2253,"name":"error"},"right":{"type":"Literal","start":2260,"end":2352,"value":"Please input a value one of the following formats: dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY.","raw":"\"Please input a value one of the following formats: dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":2696,"end":2885,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":2703,"end":2885,"kind":"const","declarations":[{"type":"VariableDeclarator","start":2709,"end":2884,"id":{"type":"Identifier","start":2709,"end":2732,"name":"dateYYYY_MM_DDValidator"},"init":{"type":"ArrowFunctionExpression","start":2735,"end":2884,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":2736,"end":2745,"name":"errorName"},{"type":"Identifier","start":2747,"end":2752,"name":"error"}],"body":{"type":"CallExpression","start":2757,"end":2884,"optional":false,"callee":{"type":"Identifier","start":2757,"end":2777,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":2778,"end":2792,"name":"dateYYYY_MM_DD"},{"type":"AssignmentExpression","start":2795,"end":2823,"operator":"=","left":{"type":"Identifier","start":2795,"end":2804,"name":"errorName"},"right":{"type":"Literal","start":2807,"end":2823,"value":"dateYYYY_MM_DD","raw":"\"dateYYYY_MM_DD\""}},{"type":"AssignmentExpression","start":2827,"end":2882,"operator":"=","left":{"type":"Identifier","start":2827,"end":2832,"name":"error"},"right":{"type":"Literal","start":2835,"end":2882,"value":"Please input a value in a format: YYYY-MM-dd.","raw":"\"Please input a value in a format: YYYY-MM-dd.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":3237,"end":3409,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3244,"end":3409,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3250,"end":3408,"id":{"type":"Identifier","start":3250,"end":3264,"name":"emailValidator"},"init":{"type":"ArrowFunctionExpression","start":3267,"end":3408,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":3268,"end":3277,"name":"errorName"},{"type":"Identifier","start":3279,"end":3284,"name":"error"}],"body":{"type":"CallExpression","start":3289,"end":3408,"optional":false,"callee":{"type":"Identifier","start":3289,"end":3309,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":3310,"end":3315,"name":"email"},{"type":"AssignmentExpression","start":3318,"end":3337,"operator":"=","left":{"type":"Identifier","start":3318,"end":3327,"name":"errorName"},"right":{"type":"Literal","start":3330,"end":3337,"value":"email","raw":"\"email\""}},{"type":"AssignmentExpression","start":3341,"end":3406,"operator":"=","left":{"type":"Identifier","start":3341,"end":3346,"name":"error"},"right":{"type":"Literal","start":3349,"end":3406,"value":"Please input a value in a format: local-part@domain.com","raw":"\"Please input a value in a format: local-part@domain.com\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":3776,"end":3993,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":3783,"end":3993,"kind":"const","declarations":[{"type":"VariableDeclarator","start":3789,"end":3992,"id":{"type":"Identifier","start":3789,"end":3807,"name":"ipAddressValidator"},"init":{"type":"ArrowFunctionExpression","start":3810,"end":3992,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":3811,"end":3820,"name":"errorName"},{"type":"Identifier","start":3822,"end":3827,"name":"error"}],"body":{"type":"CallExpression","start":3832,"end":3992,"optional":false,"callee":{"type":"Identifier","start":3832,"end":3852,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":3853,"end":3869,"name":"IPAddressV4AndV6"},{"type":"AssignmentExpression","start":3872,"end":3895,"operator":"=","left":{"type":"Identifier","start":3872,"end":3881,"name":"errorName"},"right":{"type":"Literal","start":3884,"end":3895,"value":"ipAddress","raw":"\"ipAddress\""}},{"type":"AssignmentExpression","start":3899,"end":3990,"operator":"=","left":{"type":"Identifier","start":3899,"end":3904,"name":"error"},"right":{"type":"Literal","start":3911,"end":3990,"value":"Please input a value one of the following formats: x.x.x.x or y:y:y:y:y:y:y:y","raw":"\"Please input a value one of the following formats: x.x.x.x or y:y:y:y:y:y:y:y\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":4331,"end":4493,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4338,"end":4493,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4344,"end":4492,"id":{"type":"Identifier","start":4344,"end":4357,"name":"iPv4Validator"},"init":{"type":"ArrowFunctionExpression","start":4360,"end":4492,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":4361,"end":4370,"name":"errorName"},{"type":"Identifier","start":4372,"end":4377,"name":"error"}],"body":{"type":"CallExpression","start":4382,"end":4492,"optional":false,"callee":{"type":"Identifier","start":4382,"end":4402,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":4403,"end":4414,"name":"IPAddressV4"},{"type":"AssignmentExpression","start":4417,"end":4435,"operator":"=","left":{"type":"Identifier","start":4417,"end":4426,"name":"errorName"},"right":{"type":"Literal","start":4429,"end":4435,"value":"iPv4","raw":"\"iPv4\""}},{"type":"AssignmentExpression","start":4439,"end":4490,"operator":"=","left":{"type":"Identifier","start":4439,"end":4444,"name":"error"},"right":{"type":"Literal","start":4447,"end":4490,"value":"Please input a value in a format: x.x.x.x","raw":"\"Please input a value in a format: x.x.x.x\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":4839,"end":5009,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":4846,"end":5009,"kind":"const","declarations":[{"type":"VariableDeclarator","start":4852,"end":5008,"id":{"type":"Identifier","start":4852,"end":4865,"name":"iPv6Validator"},"init":{"type":"ArrowFunctionExpression","start":4868,"end":5008,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":4869,"end":4878,"name":"errorName"},{"type":"Identifier","start":4880,"end":4885,"name":"error"}],"body":{"type":"CallExpression","start":4890,"end":5008,"optional":false,"callee":{"type":"Identifier","start":4890,"end":4910,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":4911,"end":4922,"name":"IPAddressV6"},{"type":"AssignmentExpression","start":4925,"end":4943,"operator":"=","left":{"type":"Identifier","start":4925,"end":4934,"name":"errorName"},"right":{"type":"Literal","start":4937,"end":4943,"value":"iPv6","raw":"\"iPv6\""}},{"type":"AssignmentExpression","start":4947,"end":5006,"operator":"=","left":{"type":"Identifier","start":4947,"end":4952,"name":"error"},"right":{"type":"Literal","start":4955,"end":5006,"value":"Please input a value in a format: y:y:y:y:y:y:y:y","raw":"\"Please input a value in a format: y:y:y:y:y:y:y:y\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":5349,"end":5522,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":5356,"end":5522,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5362,"end":5521,"id":{"type":"Identifier","start":5362,"end":5383,"name":"numericsOnlyValidator"},"init":{"type":"ArrowFunctionExpression","start":5386,"end":5521,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":5387,"end":5396,"name":"errorName"},{"type":"Identifier","start":5398,"end":5403,"name":"error"}],"body":{"type":"CallExpression","start":5408,"end":5521,"optional":false,"callee":{"type":"Identifier","start":5408,"end":5428,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":5429,"end":5440,"name":"numbersOnly"},{"type":"AssignmentExpression","start":5443,"end":5469,"operator":"=","left":{"type":"Identifier","start":5443,"end":5452,"name":"errorName"},"right":{"type":"Literal","start":5455,"end":5469,"value":"numericsOnly","raw":"\"numericsOnly\""}},{"type":"AssignmentExpression","start":5473,"end":5519,"operator":"=","left":{"type":"Identifier","start":5473,"end":5478,"name":"error"},"right":{"type":"Literal","start":5481,"end":5519,"value":"Only numeric characters are allowed.","raw":"\"Only numeric characters are allowed.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":5850,"end":6015,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":5857,"end":6015,"kind":"const","declarations":[{"type":"VariableDeclarator","start":5863,"end":6014,"id":{"type":"Identifier","start":5863,"end":5882,"name":"noSpecialsValidator"},"init":{"type":"ArrowFunctionExpression","start":5885,"end":6014,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":5886,"end":5895,"name":"errorName"},{"type":"Identifier","start":5897,"end":5902,"name":"error"}],"body":{"type":"CallExpression","start":5907,"end":6014,"optional":false,"callee":{"type":"Identifier","start":5907,"end":5927,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":5928,"end":5937,"name":"noSpecial"},{"type":"AssignmentExpression","start":5940,"end":5964,"operator":"=","left":{"type":"Identifier","start":5940,"end":5949,"name":"errorName"},"right":{"type":"Literal","start":5952,"end":5964,"value":"noSpecials","raw":"\"noSpecials\""}},{"type":"AssignmentExpression","start":5968,"end":6012,"operator":"=","left":{"type":"Identifier","start":5968,"end":5973,"name":"error"},"right":{"type":"Literal","start":5976,"end":6012,"value":"No special characters are allowed.","raw":"\"No special characters are allowed.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":6346,"end":6498,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":6353,"end":6498,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6359,"end":6497,"id":{"type":"Identifier","start":6359,"end":6376,"name":"passportValidator"},"init":{"type":"ArrowFunctionExpression","start":6379,"end":6497,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":6380,"end":6389,"name":"errorName"},{"type":"Identifier","start":6391,"end":6396,"name":"error"}],"body":{"type":"CallExpression","start":6401,"end":6497,"optional":false,"callee":{"type":"Identifier","start":6401,"end":6421,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":6422,"end":6430,"name":"passport"},{"type":"AssignmentExpression","start":6433,"end":6455,"operator":"=","left":{"type":"Identifier","start":6433,"end":6442,"name":"errorName"},"right":{"type":"Literal","start":6445,"end":6455,"value":"passport","raw":"\"passport\""}},{"type":"AssignmentExpression","start":6459,"end":6495,"operator":"=","left":{"type":"Identifier","start":6459,"end":6464,"name":"error"},"right":{"type":"Literal","start":6467,"end":6495,"value":"Incorrect passport format.","raw":"\"Incorrect passport format.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":6961,"end":7215,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":6968,"end":7215,"kind":"const","declarations":[{"type":"VariableDeclarator","start":6974,"end":7214,"id":{"type":"Identifier","start":6974,"end":6991,"name":"passwordValidator"},"init":{"type":"ArrowFunctionExpression","start":6994,"end":7214,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":6995,"end":7004,"name":"errorName"},{"type":"Identifier","start":7006,"end":7011,"name":"error"}],"body":{"type":"CallExpression","start":7016,"end":7214,"optional":false,"callee":{"type":"Identifier","start":7016,"end":7036,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":7037,"end":7053,"name":"passwordStrength"},{"type":"AssignmentExpression","start":7056,"end":7078,"operator":"=","left":{"type":"Identifier","start":7056,"end":7065,"name":"errorName"},"right":{"type":"Literal","start":7068,"end":7078,"value":"password","raw":"\"password\""}},{"type":"AssignmentExpression","start":7082,"end":7212,"operator":"=","left":{"type":"Identifier","start":7082,"end":7087,"name":"error"},"right":{"type":"Literal","start":7094,"end":7212,"value":"The value has to contain at least 1 lowercase letter, 1 uppercase letter, 1 special character and has a length of 8.","raw":"\"The value has to contain at least 1 lowercase letter, 1 uppercase letter, 1 special character and has a length of 8.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":7560,"end":7744,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7567,"end":7744,"kind":"const","declarations":[{"type":"VariableDeclarator","start":7573,"end":7743,"id":{"type":"Identifier","start":7573,"end":7593,"name":"phoneNumberValidator"},"init":{"type":"ArrowFunctionExpression","start":7596,"end":7743,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":7597,"end":7606,"name":"errorName"},{"type":"Identifier","start":7608,"end":7613,"name":"error"}],"body":{"type":"CallExpression","start":7618,"end":7743,"optional":false,"callee":{"type":"Identifier","start":7618,"end":7638,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":7639,"end":7650,"name":"phoneNumber"},{"type":"AssignmentExpression","start":7653,"end":7678,"operator":"=","left":{"type":"Identifier","start":7653,"end":7662,"name":"errorName"},"right":{"type":"Literal","start":7665,"end":7678,"value":"phoneNumber","raw":"\"phoneNumber\""}},{"type":"AssignmentExpression","start":7682,"end":7741,"operator":"=","left":{"type":"Identifier","start":7682,"end":7687,"name":"error"},"right":{"type":"Literal","start":7690,"end":7741,"value":"Please input a value in a format: (000) 000 0000.","raw":"\"Please input a value in a format: (000) 000 0000.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":8085,"end":8264,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":8092,"end":8264,"kind":"const","declarations":[{"type":"VariableDeclarator","start":8098,"end":8263,"id":{"type":"Identifier","start":8098,"end":8118,"name":"singleSpaceValidator"},"init":{"type":"ArrowFunctionExpression","start":8121,"end":8263,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":8122,"end":8131,"name":"errorName"},{"type":"Identifier","start":8133,"end":8138,"name":"error"}],"body":{"type":"CallExpression","start":8143,"end":8263,"optional":false,"callee":{"type":"Identifier","start":8143,"end":8167,"name":"regexpNotAMatchValidator"},"arguments":[{"type":"Identifier","start":8168,"end":8179,"name":"singleSpace"},{"type":"AssignmentExpression","start":8182,"end":8207,"operator":"=","left":{"type":"Identifier","start":8182,"end":8191,"name":"errorName"},"right":{"type":"Literal","start":8194,"end":8207,"value":"singleSpace","raw":"\"singleSpace\""}},{"type":"AssignmentExpression","start":8211,"end":8261,"operator":"=","left":{"type":"Identifier","start":8211,"end":8216,"name":"error"},"right":{"type":"Literal","start":8219,"end":8261,"value":"A single space character is not allowed.","raw":"\"A single space character is not allowed.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":8606,"end":8810,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":8613,"end":8810,"kind":"const","declarations":[{"type":"VariableDeclarator","start":8619,"end":8809,"id":{"type":"Identifier","start":8619,"end":8644,"name":"spaceRestrictionValidator"},"init":{"type":"ArrowFunctionExpression","start":8647,"end":8809,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":8648,"end":8657,"name":"errorName"},{"type":"Identifier","start":8659,"end":8664,"name":"error"}],"body":{"type":"CallExpression","start":8669,"end":8809,"optional":false,"callee":{"type":"Identifier","start":8669,"end":8693,"name":"regexpNotAMatchValidator"},"arguments":[{"type":"Identifier","start":8694,"end":8710,"name":"spaceRestriction"},{"type":"AssignmentExpression","start":8713,"end":8743,"operator":"=","left":{"type":"Identifier","start":8713,"end":8722,"name":"errorName"},"right":{"type":"Literal","start":8725,"end":8743,"value":"spaceRestriction","raw":"\"spaceRestriction\""}},{"type":"AssignmentExpression","start":8747,"end":8807,"operator":"=","left":{"type":"Identifier","start":8747,"end":8752,"name":"error"},"right":{"type":"Literal","start":8755,"end":8807,"value":"Value can not start or end with a space character.","raw":"\"Value can not start or end with a space character.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":9177,"end":9370,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":9184,"end":9370,"kind":"const","declarations":[{"type":"VariableDeclarator","start":9190,"end":9369,"id":{"type":"Identifier","start":9190,"end":9202,"name":"ssnValidator"},"init":{"type":"ArrowFunctionExpression","start":9205,"end":9369,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":9206,"end":9215,"name":"errorName"},{"type":"Identifier","start":9217,"end":9222,"name":"error"}],"body":{"type":"CallExpression","start":9227,"end":9369,"optional":false,"callee":{"type":"Identifier","start":9227,"end":9247,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":9248,"end":9251,"name":"ssn"},{"type":"AssignmentExpression","start":9254,"end":9271,"operator":"=","left":{"type":"Identifier","start":9254,"end":9263,"name":"errorName"},"right":{"type":"Literal","start":9266,"end":9271,"value":"ssn","raw":"\"ssn\""}},{"type":"AssignmentExpression","start":9275,"end":9367,"operator":"=","left":{"type":"Identifier","start":9275,"end":9280,"name":"error"},"right":{"type":"Literal","start":9287,"end":9367,"value":"Please input a value one of the following formats: AAA-GGG-SSSS or AAAGGGSSSS.","raw":"\"Please input a value one of the following formats: AAA-GGG-SSSS or AAAGGGSSSS.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":9732,"end":9917,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":9739,"end":9917,"kind":"const","declarations":[{"type":"VariableDeclarator","start":9745,"end":9916,"id":{"type":"Identifier","start":9745,"end":9766,"name":"timeHH_MM_12Validator"},"init":{"type":"ArrowFunctionExpression","start":9769,"end":9916,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":9770,"end":9779,"name":"errorName"},{"type":"Identifier","start":9781,"end":9786,"name":"error"}],"body":{"type":"CallExpression","start":9791,"end":9916,"optional":false,"callee":{"type":"Identifier","start":9791,"end":9811,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":9812,"end":9824,"name":"timeHH_MM_12"},{"type":"AssignmentExpression","start":9827,"end":9853,"operator":"=","left":{"type":"Identifier","start":9827,"end":9836,"name":"errorName"},"right":{"type":"Literal","start":9839,"end":9853,"value":"timeHH_MM_12","raw":"\"timeHH_MM_12\""}},{"type":"AssignmentExpression","start":9857,"end":9914,"operator":"=","left":{"type":"Identifier","start":9857,"end":9862,"name":"error"},"right":{"type":"Literal","start":9865,"end":9914,"value":"Please input a value in a HH:MM 12-hour format.","raw":"\"Please input a value in a HH:MM 12-hour format.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":10279,"end":10464,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":10286,"end":10464,"kind":"const","declarations":[{"type":"VariableDeclarator","start":10292,"end":10463,"id":{"type":"Identifier","start":10292,"end":10313,"name":"timeHH_MM_24Validator"},"init":{"type":"ArrowFunctionExpression","start":10316,"end":10463,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":10317,"end":10326,"name":"errorName"},{"type":"Identifier","start":10328,"end":10333,"name":"error"}],"body":{"type":"CallExpression","start":10338,"end":10463,"optional":false,"callee":{"type":"Identifier","start":10338,"end":10358,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":10359,"end":10371,"name":"timeHH_MM_24"},{"type":"AssignmentExpression","start":10374,"end":10400,"operator":"=","left":{"type":"Identifier","start":10374,"end":10383,"name":"errorName"},"right":{"type":"Literal","start":10386,"end":10400,"value":"timeHH_MM_24","raw":"\"timeHH_MM_24\""}},{"type":"AssignmentExpression","start":10404,"end":10461,"operator":"=","left":{"type":"Identifier","start":10404,"end":10409,"name":"error"},"right":{"type":"Literal","start":10412,"end":10461,"value":"Please input a value in a HH:MM 24-hour format.","raw":"\"Please input a value in a HH:MM 24-hour format.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":10805,"end":11002,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":10812,"end":11002,"kind":"const","declarations":[{"type":"VariableDeclarator","start":10818,"end":11001,"id":{"type":"Identifier","start":10818,"end":10842,"name":"timeHH_MM_SS_24Validator"},"init":{"type":"ArrowFunctionExpression","start":10845,"end":11001,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":10846,"end":10855,"name":"errorName"},{"type":"Identifier","start":10857,"end":10862,"name":"error"}],"body":{"type":"CallExpression","start":10867,"end":11001,"optional":false,"callee":{"type":"Identifier","start":10867,"end":10887,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":10888,"end":10903,"name":"timeHH_MM_SS_24"},{"type":"AssignmentExpression","start":10906,"end":10935,"operator":"=","left":{"type":"Identifier","start":10906,"end":10915,"name":"errorName"},"right":{"type":"Literal","start":10918,"end":10935,"value":"timeHH_MM_SS_24","raw":"\"timeHH_MM_SS_24\""}},{"type":"AssignmentExpression","start":10939,"end":10999,"operator":"=","left":{"type":"Identifier","start":10939,"end":10944,"name":"error"},"right":{"type":"Literal","start":10947,"end":10999,"value":"Please input a value in a HH:MM:SS 24-hour format.","raw":"\"Please input a value in a HH:MM:SS 24-hour format.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":11333,"end":11464,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":11340,"end":11464,"kind":"const","declarations":[{"type":"VariableDeclarator","start":11346,"end":11463,"id":{"type":"Identifier","start":11346,"end":11358,"name":"urlValidator"},"init":{"type":"ArrowFunctionExpression","start":11361,"end":11463,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":11362,"end":11371,"name":"errorName"},{"type":"Identifier","start":11373,"end":11378,"name":"error"}],"body":{"type":"CallExpression","start":11383,"end":11463,"optional":false,"callee":{"type":"Identifier","start":11383,"end":11403,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":11404,"end":11407,"name":"url"},{"type":"AssignmentExpression","start":11410,"end":11427,"operator":"=","left":{"type":"Identifier","start":11410,"end":11419,"name":"errorName"},"right":{"type":"Literal","start":11422,"end":11427,"value":"url","raw":"\"url\""}},{"type":"AssignmentExpression","start":11431,"end":11461,"operator":"=","left":{"type":"Identifier","start":11431,"end":11436,"name":"error"},"right":{"type":"Literal","start":11439,"end":11461,"value":"Improper URL format.","raw":"\"Improper URL format.\""}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":11824,"end":11972,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":11831,"end":11972,"kind":"const","declarations":[{"type":"VariableDeclarator","start":11837,"end":11971,"id":{"type":"Identifier","start":11837,"end":11853,"name":"zipCodeValidator"},"init":{"type":"ArrowFunctionExpression","start":11856,"end":11971,"async":false,"expression":true,"generator":false,"params":[{"type":"Identifier","start":11857,"end":11866,"name":"errorName"},{"type":"Identifier","start":11868,"end":11873,"name":"error"}],"body":{"type":"CallExpression","start":11878,"end":11971,"optional":false,"callee":{"type":"Identifier","start":11878,"end":11898,"name":"regexpMatchValidator"},"arguments":[{"type":"Identifier","start":11899,"end":11906,"name":"zipCode"},{"type":"AssignmentExpression","start":11909,"end":11930,"operator":"=","left":{"type":"Identifier","start":11909,"end":11918,"name":"errorName"},"right":{"type":"Literal","start":11921,"end":11930,"value":"zipCode","raw":"\"zipCode\""}},{"type":"AssignmentExpression","start":11934,"end":11969,"operator":"=","left":{"type":"Identifier","start":11934,"end":11939,"name":"error"},"right":{"type":"Literal","start":11942,"end":11969,"value":"Improper zip code format.","raw":"\"Improper zip code format.\""}}]},"id":null}}]}}],"_rollupRemoved":[{"end":36995,"start":11973,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { regexpMatchValidator, regexpNotAMatchValidator, } from \"./ngx-validators\";\nimport { address, dateDD_MM_YYYY, dateYYYY_MM_DD, email, IPAddressV4, IPAddressV4AndV6, IPAddressV6, lettersOnly, noSpecial, numbersOnly, passport, passwordStrength, phoneNumber, singleSpace, spaceRestriction, ssn, timeHH_MM_12, timeHH_MM_24, timeHH_MM_SS_24, url, zipCode, } from \"./constant/regex\";\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper address format\n * (Street number Street Name, City, State ZIP code)\n * Example: 3344 W Alameda Avenue, Lakewood, CO 80222\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const addressValidator = (errorName, error) => regexpMatchValidator(address, (errorName = \"address\"), (error =\n    \"Please input a value in a format of: Street number Street Name, City, State ZIP code\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only\n * alphabetic characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const alphabetOnlyValidator = (errorName, error) => regexpMatchValidator(lettersOnly, (errorName = \"alphabetOnly\"), (error = \"Only alphabetic characters are allowed.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: dd-MM-YYYY, dd.MM.YYYY or dd/MM/YYYY.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateDD_MM_YYYYValidator = (errorName, error) => regexpMatchValidator(dateDD_MM_YYYY, (errorName = \"dateDD_MM_YYYY\"), (error =\n    \"Please input a value one of the following formats: dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * YYYY-MM-dd.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateYYYY_MM_DDValidator = (errorName, error) => regexpMatchValidator(dateYYYY_MM_DD, (errorName = \"dateYYYY_MM_DD\"), (error = \"Please input a value in a format: YYYY-MM-dd.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * local-part@domain.com.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const emailValidator = (errorName, error) => regexpMatchValidator(email, (errorName = \"email\"), (error = \"Please input a value in a format: local-part@domain.com\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: x.x.x.x or y:y:y:y:y:y:y:y.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ipAddressValidator = (errorName, error) => regexpMatchValidator(IPAddressV4AndV6, (errorName = \"ipAddress\"), (error =\n    \"Please input a value one of the following formats: x.x.x.x or y:y:y:y:y:y:y:y\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * x.x.x.x.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv4Validator = (errorName, error) => regexpMatchValidator(IPAddressV4, (errorName = \"iPv4\"), (error = \"Please input a value in a format: x.x.x.x\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * y:y:y:y:y:y:y:y.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv6Validator = (errorName, error) => regexpMatchValidator(IPAddressV6, (errorName = \"iPv6\"), (error = \"Please input a value in a format: y:y:y:y:y:y:y:y\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only\n * numeric characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const numericsOnlyValidator = (errorName, error) => regexpMatchValidator(numbersOnly, (errorName = \"numericsOnly\"), (error = \"Only numeric characters are allowed.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl has any special characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const noSpecialsValidator = (errorName, error) => regexpMatchValidator(noSpecial, (errorName = \"noSpecials\"), (error = \"No special characters are allowed.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper passport format\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passportValidator = (errorName, error) => regexpMatchValidator(passport, (errorName = \"passport\"), (error = \"Incorrect passport format.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a strong password format\n * (Has at least 1 lowercase letter, 1 uppercase letter, 1 number, 1 special character and has\n * length of at least 8 characters).\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passwordValidator = (errorName, error) => regexpMatchValidator(passwordStrength, (errorName = \"password\"), (error =\n    \"The value has to contain at least 1 lowercase letter, 1 uppercase letter, 1 special character and has a length of 8.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * (000) 000 0000.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const phoneNumberValidator = (errorName, error) => regexpMatchValidator(phoneNumber, (errorName = \"phoneNumber\"), (error = \"Please input a value in a format: (000) 000 0000.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of a single space\n * character.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const singleSpaceValidator = (errorName, error) => regexpNotAMatchValidator(singleSpace, (errorName = \"singleSpace\"), (error = \"A single space character is not allowed.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl starts or ends with a\n * space character.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const spaceRestrictionValidator = (errorName, error) => regexpNotAMatchValidator(spaceRestriction, (errorName = \"spaceRestriction\"), (error = \"Value can not start or end with a space character.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: AAA-GGG-SSSS or AAAGGGSSSS.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ssnValidator = (errorName, error) => regexpMatchValidator(ssn, (errorName = \"ssn\"), (error =\n    \"Please input a value one of the following formats: AAA-GGG-SSSS or AAAGGGSSSS.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM 12-hour with optional leading 0.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_12Validator = (errorName, error) => regexpMatchValidator(timeHH_MM_12, (errorName = \"timeHH_MM_12\"), (error = \"Please input a value in a HH:MM 12-hour format.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM 24-hour with optional leading 0.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_24Validator = (errorName, error) => regexpMatchValidator(timeHH_MM_24, (errorName = \"timeHH_MM_24\"), (error = \"Please input a value in a HH:MM 24-hour format.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM:SS 24-hour.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_SS_24Validator = (errorName, error) => regexpMatchValidator(timeHH_MM_SS_24, (errorName = \"timeHH_MM_SS_24\"), (error = \"Please input a value in a HH:MM:SS 24-hour format.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * correct url format.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const urlValidator = (errorName, error) => regexpMatchValidator(url, (errorName = \"url\"), (error = \"Improper URL format.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: 00000 or 00000-0000.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const zipCodeValidator = (errorName, error) => regexpMatchValidator(zipCode, (errorName = \"zipCode\"), (error = \"Improper zip code format.\"));\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/constant/regex.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-prebuilt-validators.mjs","meta":{},"moduleSideEffects":false,"originalCode":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { regexpMatchValidator, regexpNotAMatchValidator, } from \"./ngx-validators\";\nimport { address, dateDD_MM_YYYY, dateYYYY_MM_DD, email, IPAddressV4, IPAddressV4AndV6, IPAddressV6, lettersOnly, noSpecial, numbersOnly, passport, passwordStrength, phoneNumber, singleSpace, spaceRestriction, ssn, timeHH_MM_12, timeHH_MM_24, timeHH_MM_SS_24, url, zipCode, } from \"./constant/regex\";\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper address format\n * (Street number Street Name, City, State ZIP code)\n * Example: 3344 W Alameda Avenue, Lakewood, CO 80222\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const addressValidator = (errorName, error) => regexpMatchValidator(address, (errorName = \"address\"), (error =\n    \"Please input a value in a format of: Street number Street Name, City, State ZIP code\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only\n * alphabetic characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const alphabetOnlyValidator = (errorName, error) => regexpMatchValidator(lettersOnly, (errorName = \"alphabetOnly\"), (error = \"Only alphabetic characters are allowed.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: dd-MM-YYYY, dd.MM.YYYY or dd/MM/YYYY.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateDD_MM_YYYYValidator = (errorName, error) => regexpMatchValidator(dateDD_MM_YYYY, (errorName = \"dateDD_MM_YYYY\"), (error =\n    \"Please input a value one of the following formats: dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * YYYY-MM-dd.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateYYYY_MM_DDValidator = (errorName, error) => regexpMatchValidator(dateYYYY_MM_DD, (errorName = \"dateYYYY_MM_DD\"), (error = \"Please input a value in a format: YYYY-MM-dd.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * local-part@domain.com.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const emailValidator = (errorName, error) => regexpMatchValidator(email, (errorName = \"email\"), (error = \"Please input a value in a format: local-part@domain.com\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: x.x.x.x or y:y:y:y:y:y:y:y.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ipAddressValidator = (errorName, error) => regexpMatchValidator(IPAddressV4AndV6, (errorName = \"ipAddress\"), (error =\n    \"Please input a value one of the following formats: x.x.x.x or y:y:y:y:y:y:y:y\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * x.x.x.x.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv4Validator = (errorName, error) => regexpMatchValidator(IPAddressV4, (errorName = \"iPv4\"), (error = \"Please input a value in a format: x.x.x.x\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * y:y:y:y:y:y:y:y.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv6Validator = (errorName, error) => regexpMatchValidator(IPAddressV6, (errorName = \"iPv6\"), (error = \"Please input a value in a format: y:y:y:y:y:y:y:y\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only\n * numeric characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const numericsOnlyValidator = (errorName, error) => regexpMatchValidator(numbersOnly, (errorName = \"numericsOnly\"), (error = \"Only numeric characters are allowed.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl has any special characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const noSpecialsValidator = (errorName, error) => regexpMatchValidator(noSpecial, (errorName = \"noSpecials\"), (error = \"No special characters are allowed.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper passport format\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passportValidator = (errorName, error) => regexpMatchValidator(passport, (errorName = \"passport\"), (error = \"Incorrect passport format.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a strong password format\n * (Has at least 1 lowercase letter, 1 uppercase letter, 1 number, 1 special character and has\n * length of at least 8 characters).\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passwordValidator = (errorName, error) => regexpMatchValidator(passwordStrength, (errorName = \"password\"), (error =\n    \"The value has to contain at least 1 lowercase letter, 1 uppercase letter, 1 special character and has a length of 8.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * (000) 000 0000.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const phoneNumberValidator = (errorName, error) => regexpMatchValidator(phoneNumber, (errorName = \"phoneNumber\"), (error = \"Please input a value in a format: (000) 000 0000.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of a single space\n * character.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const singleSpaceValidator = (errorName, error) => regexpNotAMatchValidator(singleSpace, (errorName = \"singleSpace\"), (error = \"A single space character is not allowed.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl starts or ends with a\n * space character.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const spaceRestrictionValidator = (errorName, error) => regexpNotAMatchValidator(spaceRestriction, (errorName = \"spaceRestriction\"), (error = \"Value can not start or end with a space character.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: AAA-GGG-SSSS or AAAGGGSSSS.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ssnValidator = (errorName, error) => regexpMatchValidator(ssn, (errorName = \"ssn\"), (error =\n    \"Please input a value one of the following formats: AAA-GGG-SSSS or AAAGGGSSSS.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM 12-hour with optional leading 0.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_12Validator = (errorName, error) => regexpMatchValidator(timeHH_MM_12, (errorName = \"timeHH_MM_12\"), (error = \"Please input a value in a HH:MM 12-hour format.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM 24-hour with optional leading 0.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_24Validator = (errorName, error) => regexpMatchValidator(timeHH_MM_24, (errorName = \"timeHH_MM_24\"), (error = \"Please input a value in a HH:MM 24-hour format.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM:SS 24-hour.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_SS_24Validator = (errorName, error) => regexpMatchValidator(timeHH_MM_SS_24, (errorName = \"timeHH_MM_SS_24\"), (error = \"Please input a value in a HH:MM:SS 24-hour format.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * correct url format.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const urlValidator = (errorName, error) => regexpMatchValidator(url, (errorName = \"url\"), (error = \"Improper URL format.\"));\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: 00000 or 00000-0000.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const zipCodeValidator = (errorName, error) => regexpMatchValidator(zipCode, (errorName = \"zipCode\"), (error = \"Improper zip code format.\"));\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"ngx-prebuilt-validators.js","sourceRoot":"","sources":["../../../../projects/ngx-validator-pack/src/lib/ngx-prebuilt-validators.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,9,0],[7,0,9,7],[9,0,10,2],[29,0,10,22],[31,0,11,2],[55,0,11,26],[58,0,12,1],[64,0,12,7],[82,0,12,25],[83,0,12,26]],[[0,0,13,0],[7,0,13,7],[9,0,14,2],[16,0,14,9],[18,0,15,2],[32,0,15,16],[34,0,16,2],[48,0,16,16],[50,0,17,2],[55,0,17,7],[57,0,18,2],[68,0,18,13],[70,0,19,2],[86,0,19,18],[88,0,20,2],[99,0,20,13],[101,0,21,2],[112,0,21,13],[114,0,22,2],[123,0,22,11],[125,0,23,2],[136,0,23,13],[138,0,24,2],[146,0,24,10],[148,0,25,2],[164,0,25,18],[166,0,26,2],[177,0,26,13],[179,0,27,2],[190,0,27,13],[192,0,28,2],[208,0,28,18],[210,0,29,2],[213,0,29,5],[215,0,30,2],[227,0,30,14],[229,0,31,2],[241,0,31,14],[243,0,32,2],[258,0,32,17],[260,0,33,2],[263,0,33,5],[265,0,34,2],[272,0,34,9],[275,0,35,1],[281,0,35,7],[299,0,35,25],[300,0,35,26]],[[0,0,37,0]],[],[],[],[],[],[],[[3,0,44,3]],[[0,0,45,0],[6,0,45,6],[7,0,45,7],[13,0,45,13],[29,0,45,29],[32,0,45,32],[33,0,46,2],[42,0,46,20],[44,0,47,2],[49,0,47,35],[51,0,48,27],[53,0,48,29],[54,0,49,2],[74,0,49,22],[75,0,50,4],[82,0,50,11],[84,0,51,4],[85,0,51,5],[94,0,51,14],[97,0,51,17],[106,0,51,26],[107,0,51,27],[109,0,52,4],[110,0,52,5],[115,0,52,10]],[[4,0,53,6],[90,0,53,92],[91,0,53,93],[92,0,54,3],[93,0,54,4]],[[0,0,56,0]],[],[],[],[],[],[],[[3,0,63,3]],[[0,0,64,0],[6,0,64,6],[7,0,64,7],[13,0,64,13],[34,0,64,34],[37,0,64,37],[38,0,65,2],[47,0,65,20],[49,0,66,2],[54,0,66,35],[56,0,67,27],[58,0,67,29],[59,0,68,2],[79,0,68,22],[80,0,69,4],[91,0,69,15],[93,0,70,4],[94,0,70,5],[103,0,70,14],[106,0,70,17],[120,0,70,31],[121,0,70,32],[123,0,71,4],[124,0,71,5],[129,0,71,10],[132,0,71,13],[173,0,71,54],[174,0,71,55],[175,0,72,3],[176,0,72,4]],[[0,0,74,0]],[],[],[],[],[],[],[[3,0,81,3]],[[0,0,82,0],[6,0,82,6],[7,0,82,7],[13,0,82,13],[36,0,82,36],[39,0,82,39],[40,0,83,2],[49,0,83,20],[51,0,84,2],[56,0,84,35],[58,0,85,27],[60,0,85,29],[61,0,86,2],[81,0,86,22],[82,0,87,4],[96,0,87,18],[98,0,88,4],[99,0,88,5],[108,0,88,14],[111,0,88,17],[127,0,88,33],[128,0,88,34],[130,0,89,4],[131,0,89,5],[136,0,89,10]],[[4,0,90,6],[96,0,90,98],[97,0,90,99],[98,0,91,3],[99,0,91,4]],[[0,0,93,0]],[],[],[],[],[],[],[[3,0,100,3]],[[0,0,101,0],[6,0,101,6],[7,0,101,7],[13,0,101,13],[36,0,101,36],[39,0,101,39],[40,0,102,2],[49,0,102,20],[51,0,103,2],[56,0,103,35],[58,0,104,27],[60,0,104,29],[61,0,105,2],[81,0,105,22],[82,0,106,4],[96,0,106,18],[98,0,107,4],[99,0,107,5],[108,0,107,14],[111,0,107,17],[127,0,107,33],[128,0,107,34],[130,0,108,4],[131,0,108,5],[136,0,108,10],[139,0,108,13],[186,0,108,60],[187,0,108,61],[188,0,109,3],[189,0,109,4]],[[0,0,111,0]],[],[],[],[],[],[],[[3,0,118,3]],[[0,0,119,0],[6,0,119,6],[7,0,119,7],[13,0,119,13],[27,0,119,27],[30,0,119,30],[31,0,120,2],[40,0,120,20],[42,0,121,2],[47,0,121,35],[49,0,122,27],[51,0,122,29],[52,0,123,2],[72,0,123,22],[73,0,124,4],[78,0,124,9],[80,0,125,4],[81,0,125,5],[90,0,125,14],[93,0,125,17],[100,0,125,24],[101,0,125,25],[103,0,126,4],[104,0,126,5],[109,0,126,10],[112,0,126,13],[169,0,126,70],[170,0,126,71],[171,0,127,3],[172,0,127,4]],[[0,0,129,0]],[],[],[],[],[],[],[[3,0,136,3]],[[0,0,137,0],[6,0,137,6],[7,0,137,7],[13,0,137,13],[31,0,137,31],[34,0,137,34],[35,0,138,2],[44,0,138,20],[46,0,139,2],[51,0,139,35],[53,0,140,27],[55,0,140,29],[56,0,141,2],[76,0,141,22],[77,0,142,4],[93,0,142,20],[95,0,143,4],[96,0,143,5],[105,0,143,14],[108,0,143,17],[119,0,143,28],[120,0,143,29],[122,0,144,4],[123,0,144,5],[128,0,144,10]],[[4,0,145,6],[83,0,145,85],[84,0,145,86],[85,0,146,3],[86,0,146,4]],[[0,0,148,0]],[],[],[],[],[],[],[[3,0,155,3]],[[0,0,156,0],[6,0,156,6],[7,0,156,7],[13,0,156,13],[26,0,156,26],[29,0,156,29],[30,0,157,2],[39,0,157,20],[41,0,158,2],[46,0,158,35],[48,0,159,27],[50,0,159,29],[51,0,160,2],[71,0,160,22],[72,0,161,4],[83,0,161,15],[85,0,162,4],[86,0,162,5],[95,0,162,14],[98,0,162,17],[104,0,162,23],[105,0,162,24],[107,0,163,4],[108,0,163,5],[113,0,163,10],[116,0,163,13],[159,0,163,56],[160,0,163,57],[161,0,164,3],[162,0,164,4]],[[0,0,166,0]],[],[],[],[],[],[],[[3,0,173,3]],[[0,0,174,0],[6,0,174,6],[7,0,174,7],[13,0,174,13],[26,0,174,26],[29,0,174,29],[30,0,175,2],[39,0,175,20],[41,0,176,2],[46,0,176,35],[48,0,177,27],[50,0,177,29],[51,0,178,2],[71,0,178,22],[72,0,179,4],[83,0,179,15],[85,0,180,4],[86,0,180,5],[95,0,180,14],[98,0,180,17],[104,0,180,23],[105,0,180,24],[107,0,181,4],[108,0,181,5],[113,0,181,10],[116,0,181,13],[167,0,181,64],[168,0,181,65],[169,0,182,3],[170,0,182,4]],[[0,0,184,0]],[],[],[],[],[],[],[[3,0,191,3]],[[0,0,192,0],[6,0,192,6],[7,0,192,7],[13,0,192,13],[34,0,192,34],[37,0,192,37],[38,0,193,2],[47,0,193,20],[49,0,194,2],[54,0,194,35],[56,0,195,27],[58,0,195,29],[59,0,196,2],[79,0,196,22],[80,0,197,4],[91,0,197,15],[93,0,198,4],[94,0,198,5],[103,0,198,14],[106,0,198,17],[120,0,198,31],[121,0,198,32],[123,0,199,4],[124,0,199,5],[129,0,199,10],[132,0,199,13],[170,0,199,51],[171,0,199,52],[172,0,200,3],[173,0,200,4]],[[0,0,202,0]],[],[],[],[],[],[[3,0,208,3]],[[0,0,209,0],[6,0,209,6],[7,0,209,7],[13,0,209,13],[32,0,209,32],[35,0,209,35],[36,0,210,2],[45,0,210,20],[47,0,211,2],[52,0,211,35],[54,0,212,27],[56,0,212,29],[57,0,213,2],[77,0,213,22],[78,0,214,4],[87,0,214,13],[89,0,215,4],[90,0,215,5],[99,0,215,14],[102,0,215,17],[114,0,215,29],[115,0,215,30],[117,0,216,4],[118,0,216,5],[123,0,216,10],[126,0,216,13],[162,0,216,49],[163,0,216,50],[164,0,217,3],[165,0,217,4]],[[0,0,219,0]],[],[],[],[],[],[[3,0,225,3]],[[0,0,226,0],[6,0,226,6],[7,0,226,7],[13,0,226,13],[30,0,226,30],[33,0,226,33],[34,0,227,2],[43,0,227,20],[45,0,228,2],[50,0,228,35],[52,0,229,27],[54,0,229,29],[55,0,230,2],[75,0,230,22],[76,0,231,4],[84,0,231,12],[86,0,232,4],[87,0,232,5],[96,0,232,14],[99,0,232,17],[109,0,232,27],[110,0,232,28],[112,0,233,4],[113,0,233,5],[118,0,233,10],[121,0,233,13],[149,0,233,41],[150,0,233,42],[151,0,234,3],[152,0,234,4]],[[0,0,236,0]],[],[],[],[],[],[],[],[[3,0,244,3]],[[0,0,245,0],[6,0,245,6],[7,0,245,7],[13,0,245,13],[30,0,245,30],[33,0,245,33],[34,0,246,2],[43,0,246,20],[45,0,247,2],[50,0,247,35],[52,0,248,27],[54,0,248,29],[55,0,249,2],[75,0,249,22],[76,0,250,4],[92,0,250,20],[94,0,251,4],[95,0,251,5],[104,0,251,14],[107,0,251,17],[117,0,251,27],[118,0,251,28],[120,0,252,4],[121,0,252,5],[126,0,252,10]],[[4,0,253,6],[122,0,253,124],[123,0,253,125],[124,0,254,3],[125,0,254,4]],[[0,0,256,0]],[],[],[],[],[],[],[[3,0,263,3]],[[0,0,264,0],[6,0,264,6],[7,0,264,7],[13,0,264,13],[33,0,264,33],[36,0,264,36],[37,0,265,2],[46,0,265,20],[48,0,266,2],[53,0,266,35],[55,0,267,27],[57,0,267,29],[58,0,268,2],[78,0,268,22],[79,0,269,4],[90,0,269,15],[92,0,270,4],[93,0,270,5],[102,0,270,14],[105,0,270,17],[118,0,270,30],[119,0,270,31],[121,0,271,4],[122,0,271,5],[127,0,271,10],[130,0,271,13],[181,0,271,64],[182,0,271,65],[183,0,272,3],[184,0,272,4]],[[0,0,274,0]],[],[],[],[],[],[],[[3,0,281,3]],[[0,0,282,0],[6,0,282,6],[7,0,282,7],[13,0,282,13],[33,0,282,33],[36,0,282,36],[37,0,283,2],[46,0,283,20],[48,0,284,2],[53,0,284,35],[55,0,285,27],[57,0,285,29],[58,0,286,2],[82,0,286,26],[83,0,287,4],[94,0,287,15],[96,0,288,4],[97,0,288,5],[106,0,288,14],[109,0,288,17],[122,0,288,30],[123,0,288,31],[125,0,289,4],[126,0,289,5],[131,0,289,10],[134,0,289,13],[176,0,289,55],[177,0,289,56],[178,0,290,3],[179,0,290,4]],[[0,0,292,0]],[],[],[],[],[],[],[[3,0,299,3]],[[0,0,300,0],[6,0,300,6],[7,0,300,7],[13,0,300,13],[38,0,300,38],[41,0,300,41],[42,0,301,2],[51,0,301,20],[53,0,302,2],[58,0,302,35],[60,0,303,27],[62,0,303,29],[63,0,304,2],[87,0,304,26],[88,0,305,4],[104,0,305,20],[106,0,306,4],[107,0,306,5],[116,0,306,14],[119,0,306,17],[137,0,306,35],[138,0,306,36],[140,0,307,4],[141,0,307,5],[146,0,307,10],[149,0,307,13],[201,0,307,65],[202,0,307,66],[203,0,308,3],[204,0,308,4]],[[0,0,310,0]],[],[],[],[],[],[],[[3,0,317,3]],[[0,0,318,0],[6,0,318,6],[7,0,318,7],[13,0,318,13],[25,0,318,25],[28,0,318,28],[29,0,319,2],[38,0,319,20],[40,0,320,2],[45,0,320,35],[47,0,321,27],[49,0,321,29],[50,0,322,2],[70,0,322,22],[71,0,323,4],[74,0,323,7],[76,0,324,4],[77,0,324,5],[86,0,324,14],[89,0,324,17],[94,0,324,22],[95,0,324,23],[97,0,325,4],[98,0,325,5],[103,0,325,10]],[[4,0,326,6],[84,0,326,86],[85,0,326,87],[86,0,327,3],[87,0,327,4]],[[0,0,329,0]],[],[],[],[],[],[],[[3,0,336,3]],[[0,0,337,0],[6,0,337,6],[7,0,337,7],[13,0,337,13],[34,0,337,34],[37,0,337,37],[38,0,338,2],[47,0,338,20],[49,0,339,2],[54,0,339,35],[56,0,340,27],[58,0,340,29],[59,0,341,2],[79,0,341,22],[80,0,342,4],[92,0,342,16],[94,0,343,4],[95,0,343,5],[104,0,343,14],[107,0,343,17],[121,0,343,31],[122,0,343,32],[124,0,344,4],[125,0,344,5],[130,0,344,10],[133,0,344,13],[182,0,344,62],[183,0,344,63],[184,0,345,3],[185,0,345,4]],[[0,0,347,0]],[],[],[],[],[],[],[[3,0,354,3]],[[0,0,355,0],[6,0,355,6],[7,0,355,7],[13,0,355,13],[34,0,355,34],[37,0,355,37],[38,0,356,2],[47,0,356,20],[49,0,357,2],[54,0,357,35],[56,0,358,27],[58,0,358,29],[59,0,359,2],[79,0,359,22],[80,0,360,4],[92,0,360,16],[94,0,361,4],[95,0,361,5],[104,0,361,14],[107,0,361,17],[121,0,361,31],[122,0,361,32],[124,0,362,4],[125,0,362,5],[130,0,362,10],[133,0,362,13],[182,0,362,62],[183,0,362,63],[184,0,363,3],[185,0,363,4]],[[0,0,365,0]],[],[],[],[],[],[],[[3,0,372,3]],[[0,0,373,0],[6,0,373,6],[7,0,373,7],[13,0,373,13],[37,0,373,37],[40,0,373,40],[41,0,374,2],[50,0,374,20],[52,0,375,2],[57,0,375,35],[59,0,376,27],[61,0,376,29],[62,0,377,2],[82,0,377,22],[83,0,378,4],[98,0,378,19],[100,0,379,4],[101,0,379,5],[110,0,379,14],[113,0,379,17],[130,0,379,34],[131,0,379,35],[133,0,380,4],[134,0,380,5],[139,0,380,10],[142,0,380,13],[194,0,380,65],[195,0,380,66],[196,0,381,3],[197,0,381,4]],[[0,0,383,0]],[],[],[],[],[],[],[[3,0,390,3]],[[0,0,391,0],[6,0,391,6],[7,0,391,7],[13,0,391,13],[25,0,391,25],[28,0,391,28],[29,0,392,2],[38,0,392,20],[40,0,393,2],[45,0,393,35],[47,0,394,27],[49,0,394,29],[50,0,395,2],[70,0,395,22],[71,0,396,4],[74,0,396,7],[76,0,397,4],[77,0,397,5],[86,0,397,14],[89,0,397,17],[94,0,397,22],[95,0,397,23],[97,0,398,4],[98,0,398,5],[103,0,398,10],[106,0,398,13],[128,0,398,35],[129,0,398,36],[130,0,399,3],[131,0,399,4]],[[0,0,401,0]],[],[],[],[],[],[],[[3,0,408,3]],[[0,0,409,0],[6,0,409,6],[7,0,409,7],[13,0,409,13],[29,0,409,29],[32,0,409,32],[33,0,410,2],[42,0,410,20],[44,0,411,2],[49,0,411,35],[51,0,412,27],[53,0,412,29],[54,0,413,2],[74,0,413,22],[75,0,414,4],[82,0,414,11],[84,0,415,4],[85,0,415,5],[94,0,415,14],[97,0,415,17],[106,0,415,26],[107,0,415,27],[109,0,416,4],[110,0,416,5],[115,0,416,10],[118,0,416,13],[145,0,416,40],[146,0,416,41],[147,0,417,3],[148,0,417,4]]],"sourcesContent":["/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\n\nimport { ValidationErrors } from \"@angular/forms\";\nimport {\n  regexpMatchValidator,\n  regexpNotAMatchValidator,\n} from \"./ngx-validators\";\nimport {\n  address,\n  dateDD_MM_YYYY,\n  dateYYYY_MM_DD,\n  email,\n  IPAddressV4,\n  IPAddressV4AndV6,\n  IPAddressV6,\n  lettersOnly,\n  noSpecial,\n  numbersOnly,\n  passport,\n  passwordStrength,\n  phoneNumber,\n  singleSpace,\n  spaceRestriction,\n  ssn,\n  timeHH_MM_12,\n  timeHH_MM_24,\n  timeHH_MM_SS_24,\n  url,\n  zipCode,\n} from \"./constant/regex\";\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper address format\n * (Street number Street Name, City, State ZIP code)\n * Example: 3344 W Alameda Avenue, Lakewood, CO 80222\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const addressValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    address,\n    (errorName = \"address\"),\n    (error =\n      \"Please input a value in a format of: Street number Street Name, City, State ZIP code\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only\n * alphabetic characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const alphabetOnlyValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    lettersOnly,\n    (errorName = \"alphabetOnly\"),\n    (error = \"Only alphabetic characters are allowed.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: dd-MM-YYYY, dd.MM.YYYY or dd/MM/YYYY.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateDD_MM_YYYYValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    dateDD_MM_YYYY,\n    (errorName = \"dateDD_MM_YYYY\"),\n    (error =\n      \"Please input a value one of the following formats: dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * YYYY-MM-dd.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const dateYYYY_MM_DDValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    dateYYYY_MM_DD,\n    (errorName = \"dateYYYY_MM_DD\"),\n    (error = \"Please input a value in a format: YYYY-MM-dd.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * local-part@domain.com.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const emailValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    email,\n    (errorName = \"email\"),\n    (error = \"Please input a value in a format: local-part@domain.com\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: x.x.x.x or y:y:y:y:y:y:y:y.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ipAddressValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    IPAddressV4AndV6,\n    (errorName = \"ipAddress\"),\n    (error =\n      \"Please input a value one of the following formats: x.x.x.x or y:y:y:y:y:y:y:y\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * x.x.x.x.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv4Validator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    IPAddressV4,\n    (errorName = \"iPv4\"),\n    (error = \"Please input a value in a format: x.x.x.x\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * y:y:y:y:y:y:y:y.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const iPv6Validator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    IPAddressV6,\n    (errorName = \"iPv6\"),\n    (error = \"Please input a value in a format: y:y:y:y:y:y:y:y\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of only\n * numeric characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const numericsOnlyValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    numbersOnly,\n    (errorName = \"numericsOnly\"),\n    (error = \"Only numeric characters are allowed.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl has any special characters.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const noSpecialsValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    noSpecial,\n    (errorName = \"noSpecials\"),\n    (error = \"No special characters are allowed.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a proper passport format\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passportValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    passport,\n    (errorName = \"passport\"),\n    (error = \"Incorrect passport format.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a strong password format\n * (Has at least 1 lowercase letter, 1 uppercase letter, 1 number, 1 special character and has\n * length of at least 8 characters).\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const passwordValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    passwordStrength,\n    (errorName = \"password\"),\n    (error =\n      \"The value has to contain at least 1 lowercase letter, 1 uppercase letter, 1 special character and has a length of 8.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a following format:\n * (000) 000 0000.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const phoneNumberValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    phoneNumber,\n    (errorName = \"phoneNumber\"),\n    (error = \"Please input a value in a format: (000) 000 0000.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl consists of a single space\n * character.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const singleSpaceValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpNotAMatchValidator(\n    singleSpace,\n    (errorName = \"singleSpace\"),\n    (error = \"A single space character is not allowed.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl starts or ends with a\n * space character.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const spaceRestrictionValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpNotAMatchValidator(\n    spaceRestriction,\n    (errorName = \"spaceRestriction\"),\n    (error = \"Value can not start or end with a space character.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: AAA-GGG-SSSS or AAAGGGSSSS.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const ssnValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    ssn,\n    (errorName = \"ssn\"),\n    (error =\n      \"Please input a value one of the following formats: AAA-GGG-SSSS or AAAGGGSSSS.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM 12-hour with optional leading 0.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_12Validator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    timeHH_MM_12,\n    (errorName = \"timeHH_MM_12\"),\n    (error = \"Please input a value in a HH:MM 12-hour format.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM 24-hour with optional leading 0.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_24Validator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    timeHH_MM_24,\n    (errorName = \"timeHH_MM_24\"),\n    (error = \"Please input a value in a HH:MM 24-hour format.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * Time Format HH:MM:SS 24-hour.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const timeHH_MM_SS_24Validator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    timeHH_MM_SS_24,\n    (errorName = \"timeHH_MM_SS_24\"),\n    (error = \"Please input a value in a HH:MM:SS 24-hour format.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in a\n * correct url format.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const urlValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    url,\n    (errorName = \"url\"),\n    (error = \"Improper URL format.\")\n  );\n\n/**\n * Checks if a value in the given FromControl / AbstractControl is in one of the\n * following formats: 00000 or 00000-0000.\n *\n * @param {string}                    - optional parameter representing error name\n * @param {ValidationErrors | string} - optional parameter representing error value\n * @returns {ValidationErrors | null} - Validation error\n */\nexport const zipCodeValidator = (\n  errorName?: string,\n  error?: ValidationErrors | string\n): ValidationErrors | null =>\n  regexpMatchValidator(\n    zipCode,\n    (errorName = \"zipCode\"),\n    (error = \"Improper zip code format.\")\n  );\n"]},"resolvedIds":{"./ngx-validators":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false},"./constant/regex":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/constant/regex.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":2267,"body":[{"type":"ExportNamedDeclaration","start":0,"end":105,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":7,"end":105,"kind":"const","declarations":[{"type":"VariableDeclarator","start":13,"end":104,"id":{"type":"Identifier","start":13,"end":22,"name":"setErrors"},"init":{"type":"ArrowFunctionExpression","start":25,"end":104,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":26,"end":33,"name":"control"},{"type":"Identifier","start":35,"end":40,"name":"error"}],"body":{"type":"BlockStatement","start":45,"end":104,"body":[{"type":"ExpressionStatement","start":51,"end":102,"expression":{"type":"CallExpression","start":51,"end":101,"optional":false,"callee":{"type":"MemberExpression","start":51,"end":68,"computed":false,"optional":false,"object":{"type":"Identifier","start":51,"end":58,"name":"control"},"property":{"type":"Identifier","start":59,"end":68,"name":"setErrors"}},"arguments":[{"type":"ObjectExpression","start":69,"end":100,"properties":[{"type":"SpreadElement","start":71,"end":88,"argument":{"type":"MemberExpression","start":74,"end":88,"computed":false,"optional":false,"object":{"type":"Identifier","start":74,"end":81,"name":"control"},"property":{"type":"Identifier","start":82,"end":88,"name":"errors"}}},{"type":"SpreadElement","start":90,"end":98,"argument":{"type":"Identifier","start":93,"end":98,"name":"error"}}]}]}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":106,"end":400,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":113,"end":400,"kind":"const","declarations":[{"type":"VariableDeclarator","start":119,"end":399,"id":{"type":"Identifier","start":119,"end":131,"name":"removeErrors"},"init":{"type":"ArrowFunctionExpression","start":134,"end":399,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":135,"end":142,"name":"control"},{"type":"Identifier","start":144,"end":148,"name":"keys"}],"body":{"type":"BlockStatement","start":153,"end":399,"body":[{"type":"VariableDeclaration","start":159,"end":308,"kind":"const","declarations":[{"type":"VariableDeclarator","start":165,"end":307,"id":{"type":"Identifier","start":165,"end":180,"name":"remainingErrors"},"init":{"type":"CallExpression","start":183,"end":307,"optional":false,"callee":{"type":"MemberExpression","start":183,"end":194,"computed":false,"optional":false,"object":{"type":"Identifier","start":183,"end":187,"name":"keys"},"property":{"type":"Identifier","start":188,"end":194,"name":"reduce"}},"arguments":[{"type":"ArrowFunctionExpression","start":195,"end":270,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":196,"end":202,"name":"errors"},{"type":"Identifier","start":204,"end":207,"name":"key"}],"body":{"type":"BlockStatement","start":212,"end":270,"body":[{"type":"ExpressionStatement","start":222,"end":241,"expression":{"type":"UnaryExpression","start":222,"end":240,"operator":"delete","argument":{"type":"MemberExpression","start":229,"end":240,"computed":true,"optional":false,"object":{"type":"Identifier","start":229,"end":235,"name":"errors"},"property":{"type":"Identifier","start":236,"end":239,"name":"key"}},"prefix":true}},{"type":"ReturnStatement","start":250,"end":264,"argument":{"type":"Identifier","start":257,"end":263,"name":"errors"}}]},"id":null},{"type":"ObjectExpression","start":272,"end":306,"properties":[{"type":"SpreadElement","start":282,"end":299,"argument":{"type":"MemberExpression","start":285,"end":299,"computed":false,"optional":false,"object":{"type":"Identifier","start":285,"end":292,"name":"control"},"property":{"type":"Identifier","start":293,"end":299,"name":"errors"}}}]}]}}]},{"type":"ExpressionStatement","start":313,"end":397,"expression":{"type":"CallExpression","start":313,"end":396,"optional":false,"callee":{"type":"MemberExpression","start":313,"end":330,"computed":false,"optional":false,"object":{"type":"Identifier","start":313,"end":320,"name":"control"},"property":{"type":"Identifier","start":321,"end":330,"name":"setErrors"}},"arguments":[{"type":"ConditionalExpression","start":331,"end":395,"test":{"type":"BinaryExpression","start":331,"end":370,"operator":">","left":{"type":"MemberExpression","start":331,"end":366,"computed":false,"optional":false,"object":{"type":"CallExpression","start":331,"end":359,"optional":false,"callee":{"type":"MemberExpression","start":331,"end":342,"computed":false,"optional":false,"object":{"type":"Identifier","start":331,"end":337,"name":"Object"},"property":{"type":"Identifier","start":338,"end":342,"name":"keys"}},"arguments":[{"type":"Identifier","start":343,"end":358,"name":"remainingErrors"}]},"property":{"type":"Identifier","start":360,"end":366,"name":"length"}},"right":{"type":"Literal","start":369,"end":370,"raw":"0","value":0}},"consequent":{"type":"Identifier","start":373,"end":388,"name":"remainingErrors"},"alternate":{"type":"Literal","start":391,"end":395,"raw":"null","value":null}}]}}]},"id":null}}]}}],"_rollupRemoved":[{"end":2267,"start":401,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"export const setErrors = (control, error) => {\n    control.setErrors({ ...control.errors, ...error });\n};\nexport const removeErrors = (control, keys) => {\n    const remainingErrors = keys.reduce((errors, key) => {\n        delete errors[key];\n        return errors;\n    }, {\n        ...control.errors,\n    });\n    control.setErrors(Object.keys(remainingErrors).length > 0 ? remainingErrors : null);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXZhbGlkYXRvci1wYWNrL3NyYy9saWIvaGVscGVycy9lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQ3JCLE9BQXdCLEVBQ3hCLEtBQWlDLEVBQzNCLEVBQUU7SUFDUixPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsS0FBSyxFQUFFLENBQUMsQ0FBQztBQUNyRCxDQUFDLENBQUE7QUFFSCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxPQUF3QixFQUFFLElBQWMsRUFBUSxFQUFFO0lBQzNFLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQ2pDLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBNEIsRUFBRTtRQUN4QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDLEVBQ0Q7UUFDRSxHQUFHLE9BQU8sQ0FBQyxNQUFNO0tBQ2xCLENBQ0YsQ0FBQztJQUNGLE9BQU8sQ0FBQyxTQUFTLENBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDakUsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q29udHJvbCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuZXhwb3J0IGNvbnN0IHNldEVycm9ycyA9IChcbiAgICBjb250cm9sOiBBYnN0cmFjdENvbnRyb2wsXG4gICAgZXJyb3I6IHsgW2tleTogc3RyaW5nXTogdW5rbm93biB9XG4gICk6IHZvaWQgPT4ge1xuICAgIGNvbnRyb2wuc2V0RXJyb3JzKHsgLi4uY29udHJvbC5lcnJvcnMsIC4uLmVycm9yIH0pO1xuICB9XG4gIFxuZXhwb3J0IGNvbnN0IHJlbW92ZUVycm9ycyA9IChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wsIGtleXM6IHN0cmluZ1tdKTogdm9pZCA9PiB7XG4gICAgY29uc3QgcmVtYWluaW5nRXJyb3JzID0ga2V5cy5yZWR1Y2UoXG4gICAgICAoZXJyb3JzLCBrZXkpOiB7IFt4OiBzdHJpbmddOiB1bmtub3duIH0gPT4ge1xuICAgICAgICBkZWxldGUgZXJyb3JzW2tleV07XG4gICAgICAgIHJldHVybiBlcnJvcnM7XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAuLi5jb250cm9sLmVycm9ycyxcbiAgICAgIH1cbiAgICApO1xuICAgIGNvbnRyb2wuc2V0RXJyb3JzKFxuICAgICAgT2JqZWN0LmtleXMocmVtYWluaW5nRXJyb3JzKS5sZW5ndGggPiAwID8gcmVtYWluaW5nRXJyb3JzIDogbnVsbFxuICAgICk7XG4gIH0iXX0=","customTransformCache":false,"dependencies":[],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/errors.mjs","meta":{},"moduleSideEffects":false,"originalCode":"export const setErrors = (control, error) => {\n    control.setErrors({ ...control.errors, ...error });\n};\nexport const removeErrors = (control, keys) => {\n    const remainingErrors = keys.reduce((errors, key) => {\n        delete errors[key];\n        return errors;\n    }, {\n        ...control.errors,\n    });\n    control.setErrors(Object.keys(remainingErrors).length > 0 ? remainingErrors : null);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXZhbGlkYXRvci1wYWNrL3NyYy9saWIvaGVscGVycy9lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQ3JCLE9BQXdCLEVBQ3hCLEtBQWlDLEVBQzNCLEVBQUU7SUFDUixPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUUsR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsS0FBSyxFQUFFLENBQUMsQ0FBQztBQUNyRCxDQUFDLENBQUE7QUFFSCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxPQUF3QixFQUFFLElBQWMsRUFBUSxFQUFFO0lBQzNFLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQ2pDLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBNEIsRUFBRTtRQUN4QyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuQixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDLEVBQ0Q7UUFDRSxHQUFHLE9BQU8sQ0FBQyxNQUFNO0tBQ2xCLENBQ0YsQ0FBQztJQUNGLE9BQU8sQ0FBQyxTQUFTLENBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FDakUsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFic3RyYWN0Q29udHJvbCB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xuZXhwb3J0IGNvbnN0IHNldEVycm9ycyA9IChcbiAgICBjb250cm9sOiBBYnN0cmFjdENvbnRyb2wsXG4gICAgZXJyb3I6IHsgW2tleTogc3RyaW5nXTogdW5rbm93biB9XG4gICk6IHZvaWQgPT4ge1xuICAgIGNvbnRyb2wuc2V0RXJyb3JzKHsgLi4uY29udHJvbC5lcnJvcnMsIC4uLmVycm9yIH0pO1xuICB9XG4gIFxuZXhwb3J0IGNvbnN0IHJlbW92ZUVycm9ycyA9IChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wsIGtleXM6IHN0cmluZ1tdKTogdm9pZCA9PiB7XG4gICAgY29uc3QgcmVtYWluaW5nRXJyb3JzID0ga2V5cy5yZWR1Y2UoXG4gICAgICAoZXJyb3JzLCBrZXkpOiB7IFt4OiBzdHJpbmddOiB1bmtub3duIH0gPT4ge1xuICAgICAgICBkZWxldGUgZXJyb3JzW2tleV07XG4gICAgICAgIHJldHVybiBlcnJvcnM7XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAuLi5jb250cm9sLmVycm9ycyxcbiAgICAgIH1cbiAgICApO1xuICAgIGNvbnRyb2wuc2V0RXJyb3JzKFxuICAgICAgT2JqZWN0LmtleXMocmVtYWluaW5nRXJyb3JzKS5sZW5ndGggPiAwID8gcmVtYWluaW5nRXJyb3JzIDogbnVsbFxuICAgICk7XG4gIH0iXX0=","originalSourcemap":{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../../../../projects/ngx-validator-pack/src/lib/helpers/errors.ts"],"names":[],"mappings":[[[0,0,1,0],[6,0,1,6],[7,0,1,7],[13,0,1,13],[22,0,1,22],[25,0,1,25],[26,0,2,4],[33,0,2,28],[35,0,3,4],[40,0,3,37],[42,0,4,10],[44,0,4,12]],[[4,0,5,4],[11,0,5,11],[12,0,5,12],[21,0,5,21],[22,0,5,22],[24,0,5,24],[27,0,5,27],[34,0,5,34],[35,0,5,35],[41,0,5,41],[43,0,5,43],[46,0,5,46],[51,0,5,51],[53,0,5,53],[54,0,5,54],[55,0,5,55]],[[0,0,6,2],[1,0,6,3],[2,0,6,3]],[[0,0,8,0],[6,0,8,6],[7,0,8,7],[13,0,8,13],[25,0,8,25],[28,0,8,28],[29,0,8,29],[36,0,8,53],[38,0,8,55],[42,0,8,69],[44,0,8,77],[46,0,8,79]],[[4,0,9,4],[10,0,9,10],[25,0,9,25],[28,0,9,28],[32,0,9,32],[33,0,9,33],[39,0,9,39],[40,0,10,6],[41,0,10,7],[47,0,10,13],[49,0,10,15],[52,0,10,18],[54,0,10,46],[56,0,10,48]],[[8,0,11,8],[15,0,11,15],[21,0,11,21],[22,0,11,22],[25,0,11,25],[26,0,11,26],[27,0,11,27]],[[8,0,12,8],[15,0,12,15],[21,0,12,21],[22,0,12,22]],[[4,0,13,6],[5,0,13,7],[7,0,14,6]],[[8,0,15,8],[11,0,15,11],[18,0,15,18],[19,0,15,19],[25,0,15,25]],[[5,0,16,7],[6,0,17,5],[7,0,17,6]],[[4,0,18,4],[11,0,18,11],[12,0,18,12],[21,0,18,21],[22,0,19,6],[28,0,19,12],[29,0,19,13],[33,0,19,17],[34,0,19,18],[49,0,19,33],[50,0,19,34],[51,0,19,35],[57,0,19,41],[60,0,19,44],[61,0,19,45],[62,0,19,46],[63,0,19,47],[64,0,19,48],[79,0,19,63],[80,0,19,64],[81,0,19,65],[82,0,19,66],[86,0,19,70],[87,0,20,5],[88,0,20,6]],[[0,0,21,2],[1,0,21,3],[2,0,21,3]]],"sourcesContent":["import { AbstractControl } from \"@angular/forms\";\nexport const setErrors = (\n    control: AbstractControl,\n    error: { [key: string]: unknown }\n  ): void => {\n    control.setErrors({ ...control.errors, ...error });\n  }\n  \nexport const removeErrors = (control: AbstractControl, keys: string[]): void => {\n    const remainingErrors = keys.reduce(\n      (errors, key): { [x: string]: unknown } => {\n        delete errors[key];\n        return errors;\n      },\n      {\n        ...control.errors,\n      }\n    );\n    control.setErrors(\n      Object.keys(remainingErrors).length > 0 ? remainingErrors : null\n    );\n  }"]},"resolvedIds":{},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":8119,"body":[{"type":"ImportDeclaration","start":192,"end":251,"specifiers":[{"type":"ImportSpecifier","start":201,"end":213,"imported":{"type":"Identifier","start":201,"end":213,"name":"removeErrors"},"local":{"type":"Identifier","start":201,"end":213,"name":"removeErrors"}},{"type":"ImportSpecifier","start":215,"end":224,"imported":{"type":"Identifier","start":215,"end":224,"name":"setErrors"},"local":{"type":"Identifier","start":215,"end":224,"name":"setErrors"}}],"source":{"type":"Literal","start":232,"end":250,"value":"./helpers/errors","raw":"\"./helpers/errors\""},"attributes":[]},{"type":"ExportNamedDeclaration","start":252,"end":833,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":259,"end":833,"kind":"const","declarations":[{"type":"VariableDeclarator","start":265,"end":832,"id":{"type":"Identifier","start":265,"end":275,"name":"requiredIf"},"init":{"type":"ArrowFunctionExpression","start":278,"end":832,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":279,"end":298,"name":"requiredControlName"},{"type":"Identifier","start":300,"end":318,"name":"controlToCheckName"}],"body":{"type":"BlockStatement","start":323,"end":832,"body":[{"type":"ReturnStatement","start":329,"end":830,"argument":{"type":"ArrowFunctionExpression","start":336,"end":829,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":337,"end":344,"name":"control"}],"body":{"type":"BlockStatement","start":349,"end":829,"body":[{"type":"VariableDeclaration","start":359,"end":409,"kind":"const","declarations":[{"type":"VariableDeclarator","start":365,"end":408,"id":{"type":"Identifier","start":365,"end":373,"name":"required"},"init":{"type":"CallExpression","start":376,"end":408,"optional":false,"callee":{"type":"MemberExpression","start":376,"end":387,"computed":false,"optional":false,"object":{"type":"Identifier","start":376,"end":383,"name":"control"},"property":{"type":"Identifier","start":384,"end":387,"name":"get"}},"arguments":[{"type":"Identifier","start":388,"end":407,"name":"requiredControlName"}]}}]},{"type":"VariableDeclaration","start":418,"end":466,"kind":"const","declarations":[{"type":"VariableDeclarator","start":424,"end":465,"id":{"type":"Identifier","start":424,"end":431,"name":"toCheck"},"init":{"type":"CallExpression","start":434,"end":465,"optional":false,"callee":{"type":"MemberExpression","start":434,"end":445,"computed":false,"optional":false,"object":{"type":"Identifier","start":434,"end":441,"name":"control"},"property":{"type":"Identifier","start":442,"end":445,"name":"get"}},"arguments":[{"type":"Identifier","start":446,"end":464,"name":"controlToCheckName"}]}}]},{"type":"IfStatement","start":475,"end":823,"test":{"type":"LogicalExpression","start":479,"end":513,"operator":"||","left":{"type":"ChainExpression","start":479,"end":494,"expression":{"type":"MemberExpression","start":479,"end":494,"computed":false,"optional":true,"object":{"type":"Identifier","start":479,"end":487,"name":"required"},"property":{"type":"Identifier","start":489,"end":494,"name":"value"}}},"right":{"type":"UnaryExpression","start":498,"end":513,"operator":"!","argument":{"type":"ChainExpression","start":499,"end":513,"expression":{"type":"MemberExpression","start":499,"end":513,"computed":false,"optional":true,"object":{"type":"Identifier","start":499,"end":506,"name":"toCheck"},"property":{"type":"Identifier","start":508,"end":513,"name":"value"}}},"prefix":true}},"consequent":{"type":"BlockStatement","start":515,"end":601,"body":[{"type":"ExpressionStatement","start":529,"end":566,"expression":{"type":"CallExpression","start":529,"end":565,"optional":false,"callee":{"type":"Identifier","start":529,"end":541,"name":"removeErrors"},"arguments":[{"type":"Identifier","start":542,"end":550,"name":"required"},{"type":"ArrayExpression","start":552,"end":564,"elements":[{"type":"Literal","start":553,"end":563,"value":"required","raw":"'required'"}]}]}},{"type":"ReturnStatement","start":579,"end":591,"argument":{"type":"Literal","start":586,"end":590,"raw":"null","value":null}}]},"alternate":{"type":"BlockStatement","start":615,"end":823,"body":[{"type":"VariableDeclaration","start":629,"end":715,"kind":"const","declarations":[{"type":"VariableDeclarator","start":635,"end":714,"id":{"type":"Identifier","start":635,"end":643,"name":"errorVal"},"init":{"type":"TemplateLiteral","start":646,"end":714,"quasis":[{"type":"TemplateElement","start":647,"end":656,"tail":false,"value":{"cooked":"Required ","raw":"Required "}},{"type":"TemplateElement","start":678,"end":691,"tail":false,"value":{"cooked":" when having ","raw":" when having "}},{"type":"TemplateElement","start":712,"end":713,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":658,"end":677,"name":"requiredControlName"},{"type":"Identifier","start":693,"end":711,"name":"controlToCheckName"}]}}]},{"type":"ExpressionStatement","start":728,"end":772,"expression":{"type":"CallExpression","start":728,"end":771,"optional":false,"callee":{"type":"Identifier","start":728,"end":737,"name":"setErrors"},"arguments":[{"type":"Identifier","start":738,"end":746,"name":"required"},{"type":"ObjectExpression","start":748,"end":770,"properties":[{"type":"Property","start":750,"end":768,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":750,"end":758,"name":"required"},"value":{"type":"Identifier","start":760,"end":768,"name":"errorVal"},"kind":"init"}]}]}},{"type":"ReturnStatement","start":785,"end":813,"argument":{"type":"ObjectExpression","start":792,"end":812,"properties":[{"type":"Property","start":794,"end":810,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":795,"end":803,"name":"errorVal"},"value":{"type":"Literal","start":806,"end":810,"value":true,"raw":"true"},"kind":"init"}]}}]}}]},"id":null}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":834,"end":1421,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":841,"end":1421,"kind":"const","declarations":[{"type":"VariableDeclarator","start":847,"end":1420,"id":{"type":"Identifier","start":847,"end":860,"name":"requiredIfNot"},"init":{"type":"ArrowFunctionExpression","start":863,"end":1420,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":864,"end":883,"name":"requiredControlName"},{"type":"Identifier","start":885,"end":903,"name":"controlToCheckName"}],"body":{"type":"BlockStatement","start":908,"end":1420,"body":[{"type":"ReturnStatement","start":914,"end":1418,"argument":{"type":"ArrowFunctionExpression","start":921,"end":1417,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":922,"end":929,"name":"control"}],"body":{"type":"BlockStatement","start":934,"end":1417,"body":[{"type":"VariableDeclaration","start":944,"end":994,"kind":"const","declarations":[{"type":"VariableDeclarator","start":950,"end":993,"id":{"type":"Identifier","start":950,"end":958,"name":"required"},"init":{"type":"CallExpression","start":961,"end":993,"optional":false,"callee":{"type":"MemberExpression","start":961,"end":972,"computed":false,"optional":false,"object":{"type":"Identifier","start":961,"end":968,"name":"control"},"property":{"type":"Identifier","start":969,"end":972,"name":"get"}},"arguments":[{"type":"Identifier","start":973,"end":992,"name":"requiredControlName"}]}}]},{"type":"VariableDeclaration","start":1003,"end":1051,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1009,"end":1050,"id":{"type":"Identifier","start":1009,"end":1016,"name":"toCheck"},"init":{"type":"CallExpression","start":1019,"end":1050,"optional":false,"callee":{"type":"MemberExpression","start":1019,"end":1030,"computed":false,"optional":false,"object":{"type":"Identifier","start":1019,"end":1026,"name":"control"},"property":{"type":"Identifier","start":1027,"end":1030,"name":"get"}},"arguments":[{"type":"Identifier","start":1031,"end":1049,"name":"controlToCheckName"}]}}]},{"type":"IfStatement","start":1060,"end":1411,"test":{"type":"LogicalExpression","start":1064,"end":1097,"operator":"||","left":{"type":"ChainExpression","start":1064,"end":1079,"expression":{"type":"MemberExpression","start":1064,"end":1079,"computed":false,"optional":true,"object":{"type":"Identifier","start":1064,"end":1072,"name":"required"},"property":{"type":"Identifier","start":1074,"end":1079,"name":"value"}}},"right":{"type":"ChainExpression","start":1083,"end":1097,"expression":{"type":"MemberExpression","start":1083,"end":1097,"computed":false,"optional":true,"object":{"type":"Identifier","start":1083,"end":1090,"name":"toCheck"},"property":{"type":"Identifier","start":1092,"end":1097,"name":"value"}}}},"consequent":{"type":"BlockStatement","start":1099,"end":1185,"body":[{"type":"ExpressionStatement","start":1113,"end":1150,"expression":{"type":"CallExpression","start":1113,"end":1149,"optional":false,"callee":{"type":"Identifier","start":1113,"end":1125,"name":"removeErrors"},"arguments":[{"type":"Identifier","start":1126,"end":1134,"name":"required"},{"type":"ArrayExpression","start":1136,"end":1148,"elements":[{"type":"Literal","start":1137,"end":1147,"value":"required","raw":"'required'"}]}]}},{"type":"ReturnStatement","start":1163,"end":1175,"argument":{"type":"Literal","start":1170,"end":1174,"raw":"null","value":null}}]},"alternate":{"type":"BlockStatement","start":1199,"end":1411,"body":[{"type":"VariableDeclaration","start":1213,"end":1303,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1219,"end":1302,"id":{"type":"Identifier","start":1219,"end":1227,"name":"errorVal"},"init":{"type":"TemplateLiteral","start":1230,"end":1302,"quasis":[{"type":"TemplateElement","start":1231,"end":1240,"tail":false,"value":{"cooked":"Required ","raw":"Required "}},{"type":"TemplateElement","start":1262,"end":1279,"tail":false,"value":{"cooked":" when not having ","raw":" when not having "}},{"type":"TemplateElement","start":1300,"end":1301,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":1242,"end":1261,"name":"requiredControlName"},{"type":"Identifier","start":1281,"end":1299,"name":"controlToCheckName"}]}}]},{"type":"ExpressionStatement","start":1316,"end":1360,"expression":{"type":"CallExpression","start":1316,"end":1359,"optional":false,"callee":{"type":"Identifier","start":1316,"end":1325,"name":"setErrors"},"arguments":[{"type":"Identifier","start":1326,"end":1334,"name":"required"},{"type":"ObjectExpression","start":1336,"end":1358,"properties":[{"type":"Property","start":1338,"end":1356,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1338,"end":1346,"name":"required"},"value":{"type":"Identifier","start":1348,"end":1356,"name":"errorVal"},"kind":"init"}]}]}},{"type":"ReturnStatement","start":1373,"end":1401,"argument":{"type":"ObjectExpression","start":1380,"end":1400,"properties":[{"type":"Property","start":1382,"end":1398,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":1383,"end":1391,"name":"errorVal"},"value":{"type":"Literal","start":1394,"end":1398,"value":true,"raw":"true"},"kind":"init"}]}}]}}]},"id":null}}]},"id":null}}]}},{"type":"ExportNamedDeclaration","start":1422,"end":2108,"specifiers":[],"source":null,"attributes":[],"declaration":{"type":"VariableDeclaration","start":1429,"end":2108,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1435,"end":2107,"id":{"type":"Identifier","start":1435,"end":1448,"name":"requiredEther"},"init":{"type":"ArrowFunctionExpression","start":1451,"end":2107,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":1452,"end":1471,"name":"requiredControlName"},{"type":"Identifier","start":1473,"end":1491,"name":"controlToCheckName"}],"body":{"type":"BlockStatement","start":1496,"end":2107,"body":[{"type":"ReturnStatement","start":1502,"end":2105,"argument":{"type":"ArrowFunctionExpression","start":1509,"end":2104,"async":false,"expression":false,"generator":false,"params":[{"type":"Identifier","start":1510,"end":1517,"name":"control"}],"body":{"type":"BlockStatement","start":1522,"end":2104,"body":[{"type":"VariableDeclaration","start":1532,"end":1582,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1538,"end":1581,"id":{"type":"Identifier","start":1538,"end":1546,"name":"required"},"init":{"type":"CallExpression","start":1549,"end":1581,"optional":false,"callee":{"type":"MemberExpression","start":1549,"end":1560,"computed":false,"optional":false,"object":{"type":"Identifier","start":1549,"end":1556,"name":"control"},"property":{"type":"Identifier","start":1557,"end":1560,"name":"get"}},"arguments":[{"type":"Identifier","start":1561,"end":1580,"name":"requiredControlName"}]}}]},{"type":"VariableDeclaration","start":1591,"end":1639,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1597,"end":1638,"id":{"type":"Identifier","start":1597,"end":1604,"name":"toCheck"},"init":{"type":"CallExpression","start":1607,"end":1638,"optional":false,"callee":{"type":"MemberExpression","start":1607,"end":1618,"computed":false,"optional":false,"object":{"type":"Identifier","start":1607,"end":1614,"name":"control"},"property":{"type":"Identifier","start":1615,"end":1618,"name":"get"}},"arguments":[{"type":"Identifier","start":1619,"end":1637,"name":"controlToCheckName"}]}}]},{"type":"IfStatement","start":1648,"end":2098,"test":{"type":"LogicalExpression","start":1652,"end":1685,"operator":"||","left":{"type":"ChainExpression","start":1652,"end":1667,"expression":{"type":"MemberExpression","start":1652,"end":1667,"computed":false,"optional":true,"object":{"type":"Identifier","start":1652,"end":1660,"name":"required"},"property":{"type":"Identifier","start":1662,"end":1667,"name":"value"}}},"right":{"type":"ChainExpression","start":1671,"end":1685,"expression":{"type":"MemberExpression","start":1671,"end":1685,"computed":false,"optional":true,"object":{"type":"Identifier","start":1671,"end":1678,"name":"toCheck"},"property":{"type":"Identifier","start":1680,"end":1685,"name":"value"}}}},"consequent":{"type":"BlockStatement","start":1687,"end":1822,"body":[{"type":"ExpressionStatement","start":1701,"end":1738,"expression":{"type":"CallExpression","start":1701,"end":1737,"optional":false,"callee":{"type":"Identifier","start":1701,"end":1713,"name":"removeErrors"},"arguments":[{"type":"Identifier","start":1714,"end":1722,"name":"required"},{"type":"ArrayExpression","start":1724,"end":1736,"elements":[{"type":"Literal","start":1725,"end":1735,"value":"required","raw":"'required'"}]}]}},{"type":"ExpressionStatement","start":1751,"end":1787,"expression":{"type":"CallExpression","start":1751,"end":1786,"optional":false,"callee":{"type":"Identifier","start":1751,"end":1763,"name":"removeErrors"},"arguments":[{"type":"Identifier","start":1764,"end":1771,"name":"toCheck"},{"type":"ArrayExpression","start":1773,"end":1785,"elements":[{"type":"Literal","start":1774,"end":1784,"value":"required","raw":"'required'"}]}]}},{"type":"ReturnStatement","start":1800,"end":1812,"argument":{"type":"Literal","start":1807,"end":1811,"raw":"null","value":null}}]},"alternate":{"type":"BlockStatement","start":1836,"end":2098,"body":[{"type":"VariableDeclaration","start":1850,"end":1934,"kind":"const","declarations":[{"type":"VariableDeclarator","start":1856,"end":1933,"id":{"type":"Identifier","start":1856,"end":1864,"name":"errorVal"},"init":{"type":"TemplateLiteral","start":1867,"end":1933,"quasis":[{"type":"TemplateElement","start":1868,"end":1884,"tail":false,"value":{"cooked":"Required either ","raw":"Required either "}},{"type":"TemplateElement","start":1906,"end":1910,"tail":false,"value":{"cooked":" or ","raw":" or "}},{"type":"TemplateElement","start":1931,"end":1932,"tail":true,"value":{"cooked":".","raw":"."}}],"expressions":[{"type":"Identifier","start":1886,"end":1905,"name":"requiredControlName"},{"type":"Identifier","start":1912,"end":1930,"name":"controlToCheckName"}]}}]},{"type":"ExpressionStatement","start":1947,"end":1991,"expression":{"type":"CallExpression","start":1947,"end":1990,"optional":false,"callee":{"type":"Identifier","start":1947,"end":1956,"name":"setErrors"},"arguments":[{"type":"Identifier","start":1957,"end":1965,"name":"required"},{"type":"ObjectExpression","start":1967,"end":1989,"properties":[{"type":"Property","start":1969,"end":1987,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":1969,"end":1977,"name":"required"},"value":{"type":"Identifier","start":1979,"end":1987,"name":"errorVal"},"kind":"init"}]}]}},{"type":"ExpressionStatement","start":2004,"end":2047,"expression":{"type":"CallExpression","start":2004,"end":2046,"optional":false,"callee":{"type":"Identifier","start":2004,"end":2013,"name":"setErrors"},"arguments":[{"type":"Identifier","start":2014,"end":2021,"name":"toCheck"},{"type":"ObjectExpression","start":2023,"end":2045,"properties":[{"type":"Property","start":2025,"end":2043,"method":false,"shorthand":false,"computed":false,"key":{"type":"Identifier","start":2025,"end":2033,"name":"required"},"value":{"type":"Identifier","start":2035,"end":2043,"name":"errorVal"},"kind":"init"}]}]}},{"type":"ReturnStatement","start":2060,"end":2088,"argument":{"type":"ObjectExpression","start":2067,"end":2087,"properties":[{"type":"Property","start":2069,"end":2085,"method":false,"shorthand":false,"computed":true,"key":{"type":"Identifier","start":2070,"end":2078,"name":"errorVal"},"value":{"type":"Literal","start":2081,"end":2085,"value":true,"raw":"true"},"kind":"init"}]}}]}}]},"id":null}}]},"id":null}}]}}],"_rollupRemoved":[{"end":8119,"start":2109,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { removeErrors, setErrors } from \"./helpers/errors\";\nexport const requiredIf = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || !toCheck?.value) {\n            removeErrors(required, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required ${requiredControlName} when having ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\nexport const requiredIfNot = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || toCheck?.value) {\n            removeErrors(required, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required ${requiredControlName} when not having ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\nexport const requiredEther = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || toCheck?.value) {\n            removeErrors(required, ['required']);\n            removeErrors(toCheck, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required either ${requiredControlName} or ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            setErrors(toCheck, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZvcm0tZ3JvdXAtdmFsaWRhdG9ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL25neC1mb3JtLWdyb3VwLXZhbGlkYXRvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBR0gsT0FBTyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUUzRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FDeEIsbUJBQTJCLEVBQzNCLGtCQUEwQixFQUMxQixFQUFFO0lBQ0YsT0FBTyxDQUFDLE9BQXdCLEVBQTJCLEVBQUU7UUFDM0QsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBb0IsQ0FBQztRQUNyRSxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFvQixDQUFDO1FBQ25FLElBQUksUUFBUSxFQUFFLEtBQUssSUFBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQztZQUN2QyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNyQyxPQUFPLElBQUksQ0FBQztRQUNkLENBQUM7YUFBTSxDQUFDO1lBQ04sTUFBTSxRQUFRLEdBQUcsWUFBWSxtQkFBbUIsZ0JBQWdCLGtCQUFrQixHQUFHLENBQUM7WUFDdEYsU0FBUyxDQUFDLFFBQVEsRUFBRSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQzVDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDO1FBQzlCLENBQUM7SUFDSCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsQ0FDM0IsbUJBQTJCLEVBQzNCLGtCQUEwQixFQUMxQixFQUFFO0lBQ0YsT0FBTyxDQUFDLE9BQXdCLEVBQTJCLEVBQUU7UUFDM0QsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBb0IsQ0FBQztRQUNyRSxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFvQixDQUFDO1FBQ25FLElBQUksUUFBUSxFQUFFLEtBQUssSUFBSSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7WUFDdEMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDckMsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDO2FBQU0sQ0FBQztZQUNOLE1BQU0sUUFBUSxHQUFHLFlBQVksbUJBQW1CLG9CQUFvQixrQkFBa0IsR0FBRyxDQUFDO1lBQzFGLFNBQVMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUM1QyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUM5QixDQUFDO0lBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQzNCLG1CQUEyQixFQUMzQixrQkFBMEIsRUFDMUIsRUFBRTtJQUNGLE9BQU8sQ0FBQyxPQUF3QixFQUEyQixFQUFFO1FBQzNELE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQW9CLENBQUM7UUFDckUsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBb0IsQ0FBQztRQUNuRSxJQUFJLFFBQVEsRUFBRSxLQUFLLElBQUksT0FBTyxFQUFFLEtBQUssRUFBRSxDQUFDO1lBQ3RDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLFlBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQzthQUFNLENBQUM7WUFDTixNQUFNLFFBQVEsR0FBRyxtQkFBbUIsbUJBQW1CLE9BQU8sa0JBQWtCLEdBQUcsQ0FBQztZQUNwRixTQUFTLENBQUMsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7WUFDNUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQzNDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDO1FBQzlCLENBQUM7SUFDSCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgU2xhdmtvIE1paGFqbG92aWMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBJU0Mtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgYXQgaHR0cHM6Ly93d3cuaXNjLm9yZy9saWNlbnNlcy9cbiAqL1xuXG5pbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIFZhbGlkYXRpb25FcnJvcnMgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IHJlbW92ZUVycm9ycywgc2V0RXJyb3JzIH0gZnJvbSBcIi4vaGVscGVycy9lcnJvcnNcIjtcblxuZXhwb3J0IGNvbnN0IHJlcXVpcmVkSWYgPSAoXG4gIHJlcXVpcmVkQ29udHJvbE5hbWU6IHN0cmluZyxcbiAgY29udHJvbFRvQ2hlY2tOYW1lOiBzdHJpbmdcbikgPT4ge1xuICByZXR1cm4gKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IFZhbGlkYXRpb25FcnJvcnMgfCBudWxsID0+IHtcbiAgICBjb25zdCByZXF1aXJlZCA9IGNvbnRyb2wuZ2V0KHJlcXVpcmVkQ29udHJvbE5hbWUpIGFzIEFic3RyYWN0Q29udHJvbDtcbiAgICBjb25zdCB0b0NoZWNrID0gY29udHJvbC5nZXQoY29udHJvbFRvQ2hlY2tOYW1lKSBhcyBBYnN0cmFjdENvbnRyb2w7XG4gICAgaWYgKHJlcXVpcmVkPy52YWx1ZSB8fCAhdG9DaGVjaz8udmFsdWUpIHtcbiAgICAgIHJlbW92ZUVycm9ycyhyZXF1aXJlZCwgWydyZXF1aXJlZCddKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBlcnJvclZhbCA9IGBSZXF1aXJlZCAke3JlcXVpcmVkQ29udHJvbE5hbWV9IHdoZW4gaGF2aW5nICR7Y29udHJvbFRvQ2hlY2tOYW1lfS5gO1xuICAgICAgc2V0RXJyb3JzKHJlcXVpcmVkLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHJldHVybiB7IFtlcnJvclZhbF06IHRydWUgfTtcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgcmVxdWlyZWRJZk5vdCA9IChcbiAgcmVxdWlyZWRDb250cm9sTmFtZTogc3RyaW5nLFxuICBjb250cm9sVG9DaGVja05hbWU6IHN0cmluZ1xuKSA9PiB7XG4gIHJldHVybiAoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogVmFsaWRhdGlvbkVycm9ycyB8IG51bGwgPT4ge1xuICAgIGNvbnN0IHJlcXVpcmVkID0gY29udHJvbC5nZXQocmVxdWlyZWRDb250cm9sTmFtZSkgYXMgQWJzdHJhY3RDb250cm9sO1xuICAgIGNvbnN0IHRvQ2hlY2sgPSBjb250cm9sLmdldChjb250cm9sVG9DaGVja05hbWUpIGFzIEFic3RyYWN0Q29udHJvbDtcbiAgICBpZiAocmVxdWlyZWQ/LnZhbHVlIHx8IHRvQ2hlY2s/LnZhbHVlKSB7XG4gICAgICByZW1vdmVFcnJvcnMocmVxdWlyZWQsIFsncmVxdWlyZWQnXSk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgZXJyb3JWYWwgPSBgUmVxdWlyZWQgJHtyZXF1aXJlZENvbnRyb2xOYW1lfSB3aGVuIG5vdCBoYXZpbmcgJHtjb250cm9sVG9DaGVja05hbWV9LmA7XG4gICAgICBzZXRFcnJvcnMocmVxdWlyZWQsIHsgcmVxdWlyZWQ6IGVycm9yVmFsIH0pO1xuICAgICAgcmV0dXJuIHsgW2Vycm9yVmFsXTogdHJ1ZSB9O1xuICAgIH1cbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCByZXF1aXJlZEV0aGVyID0gKFxuICByZXF1aXJlZENvbnRyb2xOYW1lOiBzdHJpbmcsXG4gIGNvbnRyb2xUb0NoZWNrTmFtZTogc3RyaW5nXG4pID0+IHtcbiAgcmV0dXJuIChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiBWYWxpZGF0aW9uRXJyb3JzIHwgbnVsbCA9PiB7XG4gICAgY29uc3QgcmVxdWlyZWQgPSBjb250cm9sLmdldChyZXF1aXJlZENvbnRyb2xOYW1lKSBhcyBBYnN0cmFjdENvbnRyb2w7XG4gICAgY29uc3QgdG9DaGVjayA9IGNvbnRyb2wuZ2V0KGNvbnRyb2xUb0NoZWNrTmFtZSkgYXMgQWJzdHJhY3RDb250cm9sO1xuICAgIGlmIChyZXF1aXJlZD8udmFsdWUgfHwgdG9DaGVjaz8udmFsdWUpIHtcbiAgICAgIHJlbW92ZUVycm9ycyhyZXF1aXJlZCwgWydyZXF1aXJlZCddKTtcbiAgICAgIHJlbW92ZUVycm9ycyh0b0NoZWNrLCBbJ3JlcXVpcmVkJ10pO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVycm9yVmFsID0gYFJlcXVpcmVkIGVpdGhlciAke3JlcXVpcmVkQ29udHJvbE5hbWV9IG9yICR7Y29udHJvbFRvQ2hlY2tOYW1lfS5gO1xuICAgICAgc2V0RXJyb3JzKHJlcXVpcmVkLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHNldEVycm9ycyh0b0NoZWNrLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHJldHVybiB7IFtlcnJvclZhbF06IHRydWUgfTtcbiAgICB9XG4gIH07XG59OyJdfQ==","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/errors.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-form-group-validators.mjs","meta":{},"moduleSideEffects":false,"originalCode":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\nimport { removeErrors, setErrors } from \"./helpers/errors\";\nexport const requiredIf = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || !toCheck?.value) {\n            removeErrors(required, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required ${requiredControlName} when having ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\nexport const requiredIfNot = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || toCheck?.value) {\n            removeErrors(required, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required ${requiredControlName} when not having ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\nexport const requiredEther = (requiredControlName, controlToCheckName) => {\n    return (control) => {\n        const required = control.get(requiredControlName);\n        const toCheck = control.get(controlToCheckName);\n        if (required?.value || toCheck?.value) {\n            removeErrors(required, ['required']);\n            removeErrors(toCheck, ['required']);\n            return null;\n        }\n        else {\n            const errorVal = `Required either ${requiredControlName} or ${controlToCheckName}.`;\n            setErrors(required, { required: errorVal });\n            setErrors(toCheck, { required: errorVal });\n            return { [errorVal]: true };\n        }\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZvcm0tZ3JvdXAtdmFsaWRhdG9ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL25neC1mb3JtLWdyb3VwLXZhbGlkYXRvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBR0gsT0FBTyxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUUzRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FDeEIsbUJBQTJCLEVBQzNCLGtCQUEwQixFQUMxQixFQUFFO0lBQ0YsT0FBTyxDQUFDLE9BQXdCLEVBQTJCLEVBQUU7UUFDM0QsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBb0IsQ0FBQztRQUNyRSxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFvQixDQUFDO1FBQ25FLElBQUksUUFBUSxFQUFFLEtBQUssSUFBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQztZQUN2QyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUNyQyxPQUFPLElBQUksQ0FBQztRQUNkLENBQUM7YUFBTSxDQUFDO1lBQ04sTUFBTSxRQUFRLEdBQUcsWUFBWSxtQkFBbUIsZ0JBQWdCLGtCQUFrQixHQUFHLENBQUM7WUFDdEYsU0FBUyxDQUFDLFFBQVEsRUFBRSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQzVDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDO1FBQzlCLENBQUM7SUFDSCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsQ0FDM0IsbUJBQTJCLEVBQzNCLGtCQUEwQixFQUMxQixFQUFFO0lBQ0YsT0FBTyxDQUFDLE9BQXdCLEVBQTJCLEVBQUU7UUFDM0QsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBb0IsQ0FBQztRQUNyRSxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFvQixDQUFDO1FBQ25FLElBQUksUUFBUSxFQUFFLEtBQUssSUFBSSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7WUFDdEMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7WUFDckMsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDO2FBQU0sQ0FBQztZQUNOLE1BQU0sUUFBUSxHQUFHLFlBQVksbUJBQW1CLG9CQUFvQixrQkFBa0IsR0FBRyxDQUFDO1lBQzFGLFNBQVMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUM1QyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQztRQUM5QixDQUFDO0lBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQzNCLG1CQUEyQixFQUMzQixrQkFBMEIsRUFDMUIsRUFBRTtJQUNGLE9BQU8sQ0FBQyxPQUF3QixFQUEyQixFQUFFO1FBQzNELE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQW9CLENBQUM7UUFDckUsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBb0IsQ0FBQztRQUNuRSxJQUFJLFFBQVEsRUFBRSxLQUFLLElBQUksT0FBTyxFQUFFLEtBQUssRUFBRSxDQUFDO1lBQ3RDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLFlBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQzthQUFNLENBQUM7WUFDTixNQUFNLFFBQVEsR0FBRyxtQkFBbUIsbUJBQW1CLE9BQU8sa0JBQWtCLEdBQUcsQ0FBQztZQUNwRixTQUFTLENBQUMsUUFBUSxFQUFFLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7WUFDNUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1lBQzNDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDO1FBQzlCLENBQUM7SUFDSCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgU2xhdmtvIE1paGFqbG92aWMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBJU0Mtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgYXQgaHR0cHM6Ly93d3cuaXNjLm9yZy9saWNlbnNlcy9cbiAqL1xuXG5pbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIFZhbGlkYXRpb25FcnJvcnMgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IHJlbW92ZUVycm9ycywgc2V0RXJyb3JzIH0gZnJvbSBcIi4vaGVscGVycy9lcnJvcnNcIjtcblxuZXhwb3J0IGNvbnN0IHJlcXVpcmVkSWYgPSAoXG4gIHJlcXVpcmVkQ29udHJvbE5hbWU6IHN0cmluZyxcbiAgY29udHJvbFRvQ2hlY2tOYW1lOiBzdHJpbmdcbikgPT4ge1xuICByZXR1cm4gKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IFZhbGlkYXRpb25FcnJvcnMgfCBudWxsID0+IHtcbiAgICBjb25zdCByZXF1aXJlZCA9IGNvbnRyb2wuZ2V0KHJlcXVpcmVkQ29udHJvbE5hbWUpIGFzIEFic3RyYWN0Q29udHJvbDtcbiAgICBjb25zdCB0b0NoZWNrID0gY29udHJvbC5nZXQoY29udHJvbFRvQ2hlY2tOYW1lKSBhcyBBYnN0cmFjdENvbnRyb2w7XG4gICAgaWYgKHJlcXVpcmVkPy52YWx1ZSB8fCAhdG9DaGVjaz8udmFsdWUpIHtcbiAgICAgIHJlbW92ZUVycm9ycyhyZXF1aXJlZCwgWydyZXF1aXJlZCddKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBlcnJvclZhbCA9IGBSZXF1aXJlZCAke3JlcXVpcmVkQ29udHJvbE5hbWV9IHdoZW4gaGF2aW5nICR7Y29udHJvbFRvQ2hlY2tOYW1lfS5gO1xuICAgICAgc2V0RXJyb3JzKHJlcXVpcmVkLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHJldHVybiB7IFtlcnJvclZhbF06IHRydWUgfTtcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgcmVxdWlyZWRJZk5vdCA9IChcbiAgcmVxdWlyZWRDb250cm9sTmFtZTogc3RyaW5nLFxuICBjb250cm9sVG9DaGVja05hbWU6IHN0cmluZ1xuKSA9PiB7XG4gIHJldHVybiAoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogVmFsaWRhdGlvbkVycm9ycyB8IG51bGwgPT4ge1xuICAgIGNvbnN0IHJlcXVpcmVkID0gY29udHJvbC5nZXQocmVxdWlyZWRDb250cm9sTmFtZSkgYXMgQWJzdHJhY3RDb250cm9sO1xuICAgIGNvbnN0IHRvQ2hlY2sgPSBjb250cm9sLmdldChjb250cm9sVG9DaGVja05hbWUpIGFzIEFic3RyYWN0Q29udHJvbDtcbiAgICBpZiAocmVxdWlyZWQ/LnZhbHVlIHx8IHRvQ2hlY2s/LnZhbHVlKSB7XG4gICAgICByZW1vdmVFcnJvcnMocmVxdWlyZWQsIFsncmVxdWlyZWQnXSk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgZXJyb3JWYWwgPSBgUmVxdWlyZWQgJHtyZXF1aXJlZENvbnRyb2xOYW1lfSB3aGVuIG5vdCBoYXZpbmcgJHtjb250cm9sVG9DaGVja05hbWV9LmA7XG4gICAgICBzZXRFcnJvcnMocmVxdWlyZWQsIHsgcmVxdWlyZWQ6IGVycm9yVmFsIH0pO1xuICAgICAgcmV0dXJuIHsgW2Vycm9yVmFsXTogdHJ1ZSB9O1xuICAgIH1cbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCByZXF1aXJlZEV0aGVyID0gKFxuICByZXF1aXJlZENvbnRyb2xOYW1lOiBzdHJpbmcsXG4gIGNvbnRyb2xUb0NoZWNrTmFtZTogc3RyaW5nXG4pID0+IHtcbiAgcmV0dXJuIChjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiBWYWxpZGF0aW9uRXJyb3JzIHwgbnVsbCA9PiB7XG4gICAgY29uc3QgcmVxdWlyZWQgPSBjb250cm9sLmdldChyZXF1aXJlZENvbnRyb2xOYW1lKSBhcyBBYnN0cmFjdENvbnRyb2w7XG4gICAgY29uc3QgdG9DaGVjayA9IGNvbnRyb2wuZ2V0KGNvbnRyb2xUb0NoZWNrTmFtZSkgYXMgQWJzdHJhY3RDb250cm9sO1xuICAgIGlmIChyZXF1aXJlZD8udmFsdWUgfHwgdG9DaGVjaz8udmFsdWUpIHtcbiAgICAgIHJlbW92ZUVycm9ycyhyZXF1aXJlZCwgWydyZXF1aXJlZCddKTtcbiAgICAgIHJlbW92ZUVycm9ycyh0b0NoZWNrLCBbJ3JlcXVpcmVkJ10pO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGVycm9yVmFsID0gYFJlcXVpcmVkIGVpdGhlciAke3JlcXVpcmVkQ29udHJvbE5hbWV9IG9yICR7Y29udHJvbFRvQ2hlY2tOYW1lfS5gO1xuICAgICAgc2V0RXJyb3JzKHJlcXVpcmVkLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHNldEVycm9ycyh0b0NoZWNrLCB7IHJlcXVpcmVkOiBlcnJvclZhbCB9KTtcbiAgICAgIHJldHVybiB7IFtlcnJvclZhbF06IHRydWUgfTtcbiAgICB9XG4gIH07XG59OyJdfQ==","originalSourcemap":{"version":3,"file":"ngx-form-group-validators.js","sourceRoot":"","sources":["../../../../projects/ngx-validator-pack/src/lib/ngx-form-group-validators.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[[3,0,6,3]],[[0,0,9,0],[7,0,9,7],[9,0,9,9],[21,0,9,21],[23,0,9,23],[32,0,9,32],[34,0,9,34],[40,0,9,40],[58,0,9,58],[59,0,9,59]],[[0,0,11,0],[6,0,11,6],[7,0,11,7],[13,0,11,13],[23,0,11,23],[26,0,11,26],[27,0,12,2],[46,0,12,29],[48,0,13,2],[66,0,13,28],[68,0,14,2],[70,0,14,4]],[[4,0,15,2],[11,0,15,9],[12,0,15,10],[19,0,15,34],[21,0,15,61],[23,0,15,63]],[[8,0,16,4],[14,0,16,10],[22,0,16,18],[25,0,16,21],[32,0,16,28],[33,0,16,29],[36,0,16,32],[37,0,16,33],[56,0,16,52],[57,0,16,72],[58,0,16,73]],[[8,0,17,4],[14,0,17,10],[21,0,17,17],[24,0,17,20],[31,0,17,27],[32,0,17,28],[35,0,17,31],[36,0,17,32],[54,0,17,50],[55,0,17,70],[56,0,17,71]],[[8,0,18,4],[12,0,18,8],[20,0,18,16],[22,0,18,18],[27,0,18,23],[31,0,18,27],[32,0,18,28],[39,0,18,35],[41,0,18,37],[46,0,18,42],[48,0,18,44],[49,0,18,45]],[[12,0,19,6],[24,0,19,18],[25,0,19,19],[33,0,19,27],[35,0,19,29],[36,0,19,30],[46,0,19,40],[47,0,19,41],[48,0,19,42],[49,0,19,43]],[[12,0,20,6],[19,0,20,13],[23,0,20,17],[24,0,20,18]],[[8,0,21,4],[9,0,21,5]],[[13,0,21,11],[14,0,21,12]],[[12,0,22,6],[18,0,22,12],[26,0,22,20],[29,0,22,23],[41,0,22,35],[60,0,22,54],[76,0,22,70],[94,0,22,88],[97,0,22,91],[98,0,22,92]],[[12,0,23,6],[21,0,23,15],[22,0,23,16],[30,0,23,24],[32,0,23,26],[34,0,23,28],[42,0,23,36],[44,0,23,38],[52,0,23,46],[54,0,23,48],[55,0,23,49],[56,0,23,50]],[[12,0,24,6],[19,0,24,13],[21,0,24,15],[22,0,24,16],[30,0,24,24],[31,0,24,25],[33,0,24,27],[37,0,24,31],[39,0,24,33],[40,0,24,34]],[[8,0,25,4],[9,0,25,5]],[[4,0,26,2],[5,0,26,3],[6,0,26,4]],[[0,0,27,0],[1,0,27,1],[2,0,27,2]],[[0,0,29,0],[6,0,29,6],[7,0,29,7],[13,0,29,13],[26,0,29,26],[29,0,29,29],[30,0,30,2],[49,0,30,29],[51,0,31,2],[69,0,31,28],[71,0,32,2],[73,0,32,4]],[[4,0,33,2],[11,0,33,9],[12,0,33,10],[19,0,33,34],[21,0,33,61],[23,0,33,63]],[[8,0,34,4],[14,0,34,10],[22,0,34,18],[25,0,34,21],[32,0,34,28],[33,0,34,29],[36,0,34,32],[37,0,34,33],[56,0,34,52],[57,0,34,72],[58,0,34,73]],[[8,0,35,4],[14,0,35,10],[21,0,35,17],[24,0,35,20],[31,0,35,27],[32,0,35,28],[35,0,35,31],[36,0,35,32],[54,0,35,50],[55,0,35,70],[56,0,35,71]],[[8,0,36,4],[12,0,36,8],[20,0,36,16],[22,0,36,18],[27,0,36,23],[31,0,36,27],[38,0,36,34],[40,0,36,36],[45,0,36,41],[47,0,36,43],[48,0,36,44]],[[12,0,37,6],[24,0,37,18],[25,0,37,19],[33,0,37,27],[35,0,37,29],[36,0,37,30],[46,0,37,40],[47,0,37,41],[48,0,37,42],[49,0,37,43]],[[12,0,38,6],[19,0,38,13],[23,0,38,17],[24,0,38,18]],[[8,0,39,4],[9,0,39,5]],[[13,0,39,11],[14,0,39,12]],[[12,0,40,6],[18,0,40,12],[26,0,40,20],[29,0,40,23],[41,0,40,35],[60,0,40,54],[80,0,40,74],[98,0,40,92],[101,0,40,95],[102,0,40,96]],[[12,0,41,6],[21,0,41,15],[22,0,41,16],[30,0,41,24],[32,0,41,26],[34,0,41,28],[42,0,41,36],[44,0,41,38],[52,0,41,46],[54,0,41,48],[55,0,41,49],[56,0,41,50]],[[12,0,42,6],[19,0,42,13],[21,0,42,15],[22,0,42,16],[30,0,42,24],[31,0,42,25],[33,0,42,27],[37,0,42,31],[39,0,42,33],[40,0,42,34]],[[8,0,43,4],[9,0,43,5]],[[4,0,44,2],[5,0,44,3],[6,0,44,4]],[[0,0,45,0],[1,0,45,1],[2,0,45,2]],[[0,0,47,0],[6,0,47,6],[7,0,47,7],[13,0,47,13],[26,0,47,26],[29,0,47,29],[30,0,48,2],[49,0,48,29],[51,0,49,2],[69,0,49,28],[71,0,50,2],[73,0,50,4]],[[4,0,51,2],[11,0,51,9],[12,0,51,10],[19,0,51,34],[21,0,51,61],[23,0,51,63]],[[8,0,52,4],[14,0,52,10],[22,0,52,18],[25,0,52,21],[32,0,52,28],[33,0,52,29],[36,0,52,32],[37,0,52,33],[56,0,52,52],[57,0,52,72],[58,0,52,73]],[[8,0,53,4],[14,0,53,10],[21,0,53,17],[24,0,53,20],[31,0,53,27],[32,0,53,28],[35,0,53,31],[36,0,53,32],[54,0,53,50],[55,0,53,70],[56,0,53,71]],[[8,0,54,4],[12,0,54,8],[20,0,54,16],[22,0,54,18],[27,0,54,23],[31,0,54,27],[38,0,54,34],[40,0,54,36],[45,0,54,41],[47,0,54,43],[48,0,54,44]],[[12,0,55,6],[24,0,55,18],[25,0,55,19],[33,0,55,27],[35,0,55,29],[36,0,55,30],[46,0,55,40],[47,0,55,41],[48,0,55,42],[49,0,55,43]],[[12,0,56,6],[24,0,56,18],[25,0,56,19],[32,0,56,26],[34,0,56,28],[35,0,56,29],[45,0,56,39],[46,0,56,40],[47,0,56,41],[48,0,56,42]],[[12,0,57,6],[19,0,57,13],[23,0,57,17],[24,0,57,18]],[[8,0,58,4],[9,0,58,5]],[[13,0,58,11],[14,0,58,12]],[[12,0,59,6],[18,0,59,12],[26,0,59,20],[29,0,59,23],[48,0,59,42],[67,0,59,61],[74,0,59,68],[92,0,59,86],[95,0,59,89],[96,0,59,90]],[[12,0,60,6],[21,0,60,15],[22,0,60,16],[30,0,60,24],[32,0,60,26],[34,0,60,28],[42,0,60,36],[44,0,60,38],[52,0,60,46],[54,0,60,48],[55,0,60,49],[56,0,60,50]],[[12,0,61,6],[21,0,61,15],[22,0,61,16],[29,0,61,23],[31,0,61,25],[33,0,61,27],[41,0,61,35],[43,0,61,37],[51,0,61,45],[53,0,61,47],[54,0,61,48],[55,0,61,49]],[[12,0,62,6],[19,0,62,13],[21,0,62,15],[22,0,62,16],[30,0,62,24],[31,0,62,25],[33,0,62,27],[37,0,62,31],[39,0,62,33],[40,0,62,34]],[[8,0,63,4],[9,0,63,5]],[[4,0,64,2],[5,0,64,3],[6,0,64,4]],[[0,0,65,0],[1,0,65,1],[2,0,65,2]]],"sourcesContent":["/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n */\n\nimport { AbstractControl, ValidationErrors } from \"@angular/forms\";\nimport { removeErrors, setErrors } from \"./helpers/errors\";\n\nexport const requiredIf = (\n  requiredControlName: string,\n  controlToCheckName: string\n) => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const required = control.get(requiredControlName) as AbstractControl;\n    const toCheck = control.get(controlToCheckName) as AbstractControl;\n    if (required?.value || !toCheck?.value) {\n      removeErrors(required, ['required']);\n      return null;\n    } else {\n      const errorVal = `Required ${requiredControlName} when having ${controlToCheckName}.`;\n      setErrors(required, { required: errorVal });\n      return { [errorVal]: true };\n    }\n  };\n};\n\nexport const requiredIfNot = (\n  requiredControlName: string,\n  controlToCheckName: string\n) => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const required = control.get(requiredControlName) as AbstractControl;\n    const toCheck = control.get(controlToCheckName) as AbstractControl;\n    if (required?.value || toCheck?.value) {\n      removeErrors(required, ['required']);\n      return null;\n    } else {\n      const errorVal = `Required ${requiredControlName} when not having ${controlToCheckName}.`;\n      setErrors(required, { required: errorVal });\n      return { [errorVal]: true };\n    }\n  };\n};\n\nexport const requiredEther = (\n  requiredControlName: string,\n  controlToCheckName: string\n) => {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const required = control.get(requiredControlName) as AbstractControl;\n    const toCheck = control.get(controlToCheckName) as AbstractControl;\n    if (required?.value || toCheck?.value) {\n      removeErrors(required, ['required']);\n      removeErrors(toCheck, ['required']);\n      return null;\n    } else {\n      const errorVal = `Required either ${requiredControlName} or ${controlToCheckName}.`;\n      setErrors(required, { required: errorVal });\n      setErrors(toCheck, { required: errorVal });\n      return { [errorVal]: true };\n    }\n  };\n};"]},"resolvedIds":{"./helpers/errors":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/helpers/errors.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":1279,"body":[{"type":"ExportAllDeclaration","start":239,"end":276,"exported":null,"source":{"type":"Literal","start":253,"end":275,"value":"./lib/ngx-validators","raw":"'./lib/ngx-validators'"},"attributes":[]},{"type":"ExportAllDeclaration","start":277,"end":323,"exported":null,"source":{"type":"Literal","start":291,"end":322,"value":"./lib/ngx-prebuilt-validators","raw":"'./lib/ngx-prebuilt-validators'"},"attributes":[]},{"type":"ExportAllDeclaration","start":324,"end":372,"exported":null,"source":{"type":"Literal","start":338,"end":371,"value":"./lib/ngx-form-group-validators","raw":"'./lib/ngx-form-group-validators'"},"attributes":[]}],"_rollupRemoved":[{"end":1279,"start":373,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n *\n * Public API Surface of ngx-validator-pack\n */\nexport * from './lib/ngx-validators';\nexport * from './lib/ngx-prebuilt-validators';\nexport * from './lib/ngx-form-group-validators';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7R0FRRztBQUVILGNBQWMsc0JBQXNCLENBQUM7QUFDckMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLGlDQUFpQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFNsYXZrbyBNaWhhamxvdmljIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gSVNDLXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmlzYy5vcmcvbGljZW5zZXMvXG4gKiBcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBuZ3gtdmFsaWRhdG9yLXBhY2tcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtdmFsaWRhdG9ycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtcHJlYnVpbHQtdmFsaWRhdG9ycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtZm9ybS1ncm91cC12YWxpZGF0b3JzJztcbiJdfQ==","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-prebuilt-validators.mjs","/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-form-group-validators.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/public-api.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n *\n * Public API Surface of ngx-validator-pack\n */\nexport * from './lib/ngx-validators';\nexport * from './lib/ngx-prebuilt-validators';\nexport * from './lib/ngx-form-group-validators';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvcHVibGljLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7R0FRRztBQUVILGNBQWMsc0JBQXNCLENBQUM7QUFDckMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLGlDQUFpQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IFNsYXZrbyBNaWhhamxvdmljIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gSVNDLXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmlzYy5vcmcvbGljZW5zZXMvXG4gKiBcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBuZ3gtdmFsaWRhdG9yLXBhY2tcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtdmFsaWRhdG9ycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtcHJlYnVpbHQtdmFsaWRhdG9ycyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtZm9ybS1ncm91cC12YWxpZGF0b3JzJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"public-api.js","sourceRoot":"","sources":["../../../projects/ngx-validator-pack/src/public-api.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[],[],[],[],[],[],[[3,0,8,3]],[[0,0,10,0],[14,0,10,14],[36,0,10,36],[37,0,10,37]],[[0,0,11,0],[14,0,11,14],[45,0,11,45],[46,0,11,46]],[[0,0,12,0],[14,0,12,14],[47,0,12,47],[48,0,12,48]]],"sourcesContent":["/**\n * @license\n * Copyright Slavko Mihajlovic All Rights Reserved.\n *\n * Use of this source code is governed by an ISC-style license that can be\n * found at https://www.isc.org/licenses/\n * \n * Public API Surface of ngx-validator-pack\n */\n\nexport * from './lib/ngx-validators';\nexport * from './lib/ngx-prebuilt-validators';\nexport * from './lib/ngx-form-group-validators';\n"]},"resolvedIds":{"./lib/ngx-validators":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-validators.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false},"./lib/ngx-prebuilt-validators":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-prebuilt-validators.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false},"./lib/ngx-form-group-validators":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/lib/ngx-form-group-validators.mjs","meta":{},"moduleSideEffects":false,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":528,"body":[{"type":"ExportAllDeclaration","start":48,"end":77,"exported":null,"source":{"type":"Literal","start":62,"end":76,"value":"./public-api","raw":"'./public-api'"},"attributes":[]}],"_rollupRemoved":[{"end":528,"start":78,"type":"sourcemap"}],"sourceType":"module"},"attributes":{},"code":"/**\n * Generated bundle index. Do not edit.\n */\nexport * from './public-api';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXZhbGlkYXRvci1wYWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvbmd4LXZhbGlkYXRvci1wYWNrL3NyYy9uZ3gtdmFsaWRhdG9yLXBhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","customTransformCache":false,"dependencies":["/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/public-api.mjs"],"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/ngx-validator-pack.mjs","meta":{},"moduleSideEffects":true,"originalCode":"/**\n * Generated bundle index. Do not edit.\n */\nexport * from './public-api';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXZhbGlkYXRvci1wYWNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvbmd4LXZhbGlkYXRvci1wYWNrL3NyYy9uZ3gtdmFsaWRhdG9yLXBhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWMtYXBpJztcbiJdfQ==","originalSourcemap":{"version":3,"file":"ngx-validator-pack.js","sourceRoot":"","sources":["../../../projects/ngx-validator-pack/src/ngx-validator-pack.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[28,0,4,28],[29,0,4,29]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"resolvedIds":{"./public-api":{"attributes":{},"external":false,"id":"/media/bunny/1BC96BC71CFEAECC/InDevelopment/ngx-validator-pack/dist/ngx-validator-pack/esm2022/public-api.mjs","meta":{},"moduleSideEffects":true,"resolvedBy":"node-resolve","syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"json":{},"file-loader":{}}}