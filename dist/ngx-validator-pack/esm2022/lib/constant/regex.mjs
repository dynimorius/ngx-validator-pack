/**
 * @license
 * Copyright Slavko Mihajlovic All Rights Reserved.
 *
 * Use of this source code is governed by an ISC-style license that can be
 * found at https://www.isc.org/licenses/
 */
// Checks id an input in a format of Street number Street Name, City, State ZIP code
export const address = /^(\d{1,}) [a-zA-Z0-9\s]+(\,)? [a-zA-Z]+(\,)? [A-Z]{2} [0-9]{5,6}$/;
// Checks for date format YYYY-MM-dd
export const dateYYYY_MM_DD = /([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))/;
// Checks for date format  dd-MM-YYYY or dd.MM.YYYY or dd/MM/YYYY
// with check for leap year
export const dateDD_MM_YYYY = /^(?:(?:31(\/|-|\.)(?:0?[13578]|1[02]))\1|(?:(?:29|30)(\/|-|\.)(?:0?[1,3-9]|1[0-2])\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})$|^(?:29(\/|-|\.)0?2\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\d|2[0-8])(\/|-|\.)(?:(?:0?[1-9])|(?:1[0-2]))\4(?:(?:1[6-9]|[2-9]\d)?\d{2})$/;
// Checks if input is an email
export const email = /^(([^<>()[\]\.,;:\s@\"]+(\.[^<>()[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i;
// Checks if input is in a IPv4 format
export const IPAddressV4 = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;
// Checks if input is in a IPv6 format
export const IPAddressV6 = /(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/;
// Checks if input is in a IPv4 or IPv6 format
export const IPAddressV4AndV6 = /((^\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\s*$)|(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$))/;
// Checks if an input consists of letters only
export const lettersOnly = /^[A-Za-z]+$/;
// Checks if the input consists of letters, periods, hyphens and spaces
export const lettersPeriodsHyphensAndSpaces = /^[a-zA-Z\s.-]+$/;
// Checks if input contains any special characters
export const noSpecial = /^[A-Za-z0-9 ]+$/;
// Checks if an input consists of numbers only
export const numbersOnly = /^\d+$/;
// Checks if input is in passport format
export const passport = /^[A-PR-WY][1-9]\d\s?\d{4}[1-9]$/;
// Checks if input consist of at least 1 lowercase letter, 1 uppercase letter,
// 1 number, 1 special character and has length of at least 8 characters
export const passwordStrength = /(?=(.*[0-9]))(?=.*[\!@#$%^&*()\\[\]{}\-_+=~`|:;"'<>,./?])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*)).{8,}/;
// Checks for a (000) 000 0000 phone format
export const phoneNumber = /^(\()?[2-9]{1}\d{2}(\))?(-|\s)?\d{3}(-|\s)\d{4}$/;
// Checks for a single space character
export const singleSpace = /[\s]/;
// Restrict only spaces, spaces at the beginning and end of the field
export const spaceRestriction = /^\S$|^\S[\s\S]*\S$/;
// Checks if input is in an Social Security Number format
export const ssn = /^((?!219-09-9999|078-05-1120)(?!666|000|9\d{2})\d{3}-(?!00)\d{2}-(?!0{4})\d{4})|((?!219 09 9999|078 05 1120)(?!666|000|9\d{2})\d{3} (?!00)\d{2} (?!0{4})\d{4})|((?!219099999|078051120)(?!666|000|9\d{2})\d{3}(?!00)\d{2}(?!0{4})\d{4})$/;
// Checks for Time Format HH:MM 12-hour with optional leading 0
export const timeHH_MM_12 = /((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))/;
// Checks for Time Format HH:MM 24-hour with optional leading 0
export const timeHH_MM_24 = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;
// Checks for Time Format HH:MM:SS 24-hour
export const timeHH_MM_SS_24 = /(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)/;
// Checks if input is a url
export const url = /(http|ftp|https):\/\/[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;:\/~+#-]*[\w@?^=%&amp;\/~+#-])?/;
// Checks of a zip code in formats 00000 or 00000-0000
export const zipCode = /(^\d{5}$)|(^\d{5}-\d{4}$)/;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtdmFsaWRhdG9yLXBhY2svc3JjL2xpYi9jb25zdGFudC9yZWdleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSCxvRkFBb0Y7QUFDcEYsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLG1FQUFtRSxDQUFDO0FBQzNGLG9DQUFvQztBQUNwQyxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQ3pCLG1EQUFtRCxDQUFDO0FBQ3RELGlFQUFpRTtBQUNqRSwyQkFBMkI7QUFDM0IsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUN6QixzVUFBc1UsQ0FBQztBQUN6VSw4QkFBOEI7QUFDOUIsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUNoQixzSEFBc0gsQ0FBQztBQUN6SCxzQ0FBc0M7QUFDdEMsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUN0QiwyR0FBMkcsQ0FBQztBQUM5RyxzQ0FBc0M7QUFDdEMsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUN0QixxcEJBQXFwQixDQUFDO0FBQ3hwQiw4Q0FBOEM7QUFDOUMsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQzNCLGlyQ0FBaXJDLENBQUM7QUFDcHJDLDhDQUE4QztBQUM5QyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDO0FBQ3pDLHVFQUF1RTtBQUN2RSxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBRyxpQkFBaUIsQ0FBQztBQUNoRSxrREFBa0Q7QUFDbEQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLGlCQUFpQixDQUFDO0FBQzNDLDhDQUE4QztBQUM5QyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDO0FBQ25DLHdDQUF3QztBQUN4QyxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsaUNBQWlDLENBQUM7QUFDMUQsOEVBQThFO0FBQzlFLHdFQUF3RTtBQUN4RSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FDM0IsZ0dBQWdHLENBQUM7QUFDbkcsMkNBQTJDO0FBQzNDLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxrREFBa0QsQ0FBQztBQUM5RSxzQ0FBc0M7QUFDdEMsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQztBQUNsQyxxRUFBcUU7QUFDckUsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsb0JBQW9CLENBQUM7QUFDckQseURBQXlEO0FBQ3pELE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FDZCwwT0FBME8sQ0FBQztBQUM3TywrREFBK0Q7QUFDL0QsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLCtDQUErQyxDQUFDO0FBQzVFLCtEQUErRDtBQUMvRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsMkNBQTJDLENBQUM7QUFDeEUsMENBQTBDO0FBQzFDLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FDMUIsa0RBQWtELENBQUM7QUFDckQsMkJBQTJCO0FBQzNCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FDZCx1RkFBdUYsQ0FBQztBQUMxRixzREFBc0Q7QUFDdEQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLDJCQUEyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCBTbGF2a28gTWloYWpsb3ZpYyBBbGwgUmlnaHRzIFJlc2VydmVkLlxyXG4gKlxyXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBJU0Mtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxyXG4gKiBmb3VuZCBhdCBodHRwczovL3d3dy5pc2Mub3JnL2xpY2Vuc2VzL1xyXG4gKi9cclxuXHJcbi8vIENoZWNrcyBpZCBhbiBpbnB1dCBpbiBhIGZvcm1hdCBvZiBTdHJlZXQgbnVtYmVyIFN0cmVldCBOYW1lLCBDaXR5LCBTdGF0ZSBaSVAgY29kZVxyXG5leHBvcnQgY29uc3QgYWRkcmVzcyA9IC9eKFxcZHsxLH0pIFthLXpBLVowLTlcXHNdKyhcXCwpPyBbYS16QS1aXSsoXFwsKT8gW0EtWl17Mn0gWzAtOV17NSw2fSQvO1xyXG4vLyBDaGVja3MgZm9yIGRhdGUgZm9ybWF0IFlZWVktTU0tZGRcclxuZXhwb3J0IGNvbnN0IGRhdGVZWVlZX01NX0REID1cclxuICAvKFsxMl1cXGR7M30tKDBbMS05XXwxWzAtMl0pLSgwWzEtOV18WzEyXVxcZHwzWzAxXSkpLztcclxuLy8gQ2hlY2tzIGZvciBkYXRlIGZvcm1hdCAgZGQtTU0tWVlZWSBvciBkZC5NTS5ZWVlZIG9yIGRkL01NL1lZWVlcclxuLy8gd2l0aCBjaGVjayBmb3IgbGVhcCB5ZWFyXHJcbmV4cG9ydCBjb25zdCBkYXRlRERfTU1fWVlZWSA9XHJcbiAgL14oPzooPzozMShcXC98LXxcXC4pKD86MD9bMTM1NzhdfDFbMDJdKSlcXDF8KD86KD86Mjl8MzApKFxcL3wtfFxcLikoPzowP1sxLDMtOV18MVswLTJdKVxcMikpKD86KD86MVs2LTldfFsyLTldXFxkKT9cXGR7Mn0pJHxeKD86MjkoXFwvfC18XFwuKTA/MlxcMyg/Oig/Oig/OjFbNi05XXxbMi05XVxcZCk/KD86MFs0OF18WzI0NjhdWzA0OF18WzEzNTc5XVsyNl0pfCg/Oig/OjE2fFsyNDY4XVswNDhdfFszNTc5XVsyNl0pMDApKSkpJHxeKD86MD9bMS05XXwxXFxkfDJbMC04XSkoXFwvfC18XFwuKSg/Oig/OjA/WzEtOV0pfCg/OjFbMC0yXSkpXFw0KD86KD86MVs2LTldfFsyLTldXFxkKT9cXGR7Mn0pJC87XHJcbi8vIENoZWNrcyBpZiBpbnB1dCBpcyBhbiBlbWFpbFxyXG5leHBvcnQgY29uc3QgZW1haWwgPVxyXG4gIC9eKChbXjw+KClbXFxdXFwuLDs6XFxzQFxcXCJdKyhcXC5bXjw+KClbXFxdXFwuLDs6XFxzQFxcXCJdKykqKXwoXFxcIi4rXFxcIikpQCgoW148PigpW1xcXVxcLiw7Olxcc0BcXFwiXStcXC4pK1tePD4oKVtcXF1cXC4sOzpcXHNAXFxcIl17Mix9KSQvaTtcclxuLy8gQ2hlY2tzIGlmIGlucHV0IGlzIGluIGEgSVB2NCBmb3JtYXRcclxuZXhwb3J0IGNvbnN0IElQQWRkcmVzc1Y0ID1cclxuICAvXigoWzAtOV18WzEtOV1bMC05XXwxWzAtOV17Mn18MlswLTRdWzAtOV18MjVbMC01XSlcXC4pezN9KFswLTldfFsxLTldWzAtOV18MVswLTldezJ9fDJbMC00XVswLTldfDI1WzAtNV0pJC87XHJcbi8vIENoZWNrcyBpZiBpbnB1dCBpcyBpbiBhIElQdjYgZm9ybWF0XHJcbmV4cG9ydCBjb25zdCBJUEFkZHJlc3NWNiA9XHJcbiAgLygoWzAtOWEtZkEtRl17MSw0fTopezcsN31bMC05YS1mQS1GXXsxLDR9fChbMC05YS1mQS1GXXsxLDR9Oil7MSw3fTp8KFswLTlhLWZBLUZdezEsNH06KXsxLDZ9OlswLTlhLWZBLUZdezEsNH18KFswLTlhLWZBLUZdezEsNH06KXsxLDV9KDpbMC05YS1mQS1GXXsxLDR9KXsxLDJ9fChbMC05YS1mQS1GXXsxLDR9Oil7MSw0fSg6WzAtOWEtZkEtRl17MSw0fSl7MSwzfXwoWzAtOWEtZkEtRl17MSw0fTopezEsM30oOlswLTlhLWZBLUZdezEsNH0pezEsNH18KFswLTlhLWZBLUZdezEsNH06KXsxLDJ9KDpbMC05YS1mQS1GXXsxLDR9KXsxLDV9fFswLTlhLWZBLUZdezEsNH06KCg6WzAtOWEtZkEtRl17MSw0fSl7MSw2fSl8OigoOlswLTlhLWZBLUZdezEsNH0pezEsN318Oil8ZmU4MDooOlswLTlhLWZBLUZdezAsNH0pezAsNH0lWzAtOWEtekEtWl17MSx9fDo6KGZmZmYoOjB7MSw0fSl7MCwxfTopezAsMX0oKDI1WzAtNV18KDJbMC00XXwxezAsMX1bMC05XSl7MCwxfVswLTldKVxcLil7MywzfSgyNVswLTVdfCgyWzAtNF18MXswLDF9WzAtOV0pezAsMX1bMC05XSl8KFswLTlhLWZBLUZdezEsNH06KXsxLDR9OigoMjVbMC01XXwoMlswLTRdfDF7MCwxfVswLTldKXswLDF9WzAtOV0pXFwuKXszLDN9KDI1WzAtNV18KDJbMC00XXwxezAsMX1bMC05XSl7MCwxfVswLTldKSkvO1xyXG4vLyBDaGVja3MgaWYgaW5wdXQgaXMgaW4gYSBJUHY0IG9yIElQdjYgZm9ybWF0XHJcbmV4cG9ydCBjb25zdCBJUEFkZHJlc3NWNEFuZFY2ID1cclxuICAvKCheXFxzKigoKFswLTldfFsxLTldWzAtOV18MVswLTldezJ9fDJbMC00XVswLTldfDI1WzAtNV0pXFwuKXszfShbMC05XXxbMS05XVswLTldfDFbMC05XXsyfXwyWzAtNF1bMC05XXwyNVswLTVdKSlcXHMqJCl8KF5cXHMqKCgoWzAtOUEtRmEtZl17MSw0fTopezd9KFswLTlBLUZhLWZdezEsNH18OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezZ9KDpbMC05QS1GYS1mXXsxLDR9fCgoMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKFxcLigyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkpezN9KXw6KSl8KChbMC05QS1GYS1mXXsxLDR9Oil7NX0oKCg6WzAtOUEtRmEtZl17MSw0fSl7MSwyfSl8OigoMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKFxcLigyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkpezN9KXw6KSl8KChbMC05QS1GYS1mXXsxLDR9Oil7NH0oKCg6WzAtOUEtRmEtZl17MSw0fSl7MSwzfSl8KCg6WzAtOUEtRmEtZl17MSw0fSk/OigoMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKFxcLigyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkpezN9KSl8OikpfCgoWzAtOUEtRmEtZl17MSw0fTopezN9KCgoOlswLTlBLUZhLWZdezEsNH0pezEsNH0pfCgoOlswLTlBLUZhLWZdezEsNH0pezAsMn06KCgyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkoXFwuKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKSl7M30pKXw6KSl8KChbMC05QS1GYS1mXXsxLDR9Oil7Mn0oKCg6WzAtOUEtRmEtZl17MSw0fSl7MSw1fSl8KCg6WzAtOUEtRmEtZl17MSw0fSl7MCwzfTooKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKShcXC4oMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKXszfSkpfDopKXwoKFswLTlBLUZhLWZdezEsNH06KXsxfSgoKDpbMC05QS1GYS1mXXsxLDR9KXsxLDZ9KXwoKDpbMC05QS1GYS1mXXsxLDR9KXswLDR9OigoMjVbMC01XXwyWzAtNF1cXGR8MVxcZFxcZHxbMS05XT9cXGQpKFxcLigyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkpezN9KSl8OikpfCg6KCgoOlswLTlBLUZhLWZdezEsNH0pezEsN30pfCgoOlswLTlBLUZhLWZdezEsNH0pezAsNX06KCgyNVswLTVdfDJbMC00XVxcZHwxXFxkXFxkfFsxLTldP1xcZCkoXFwuKDI1WzAtNV18MlswLTRdXFxkfDFcXGRcXGR8WzEtOV0/XFxkKSl7M30pKXw6KSkpKCUuKyk/XFxzKiQpKS87XHJcbi8vIENoZWNrcyBpZiBhbiBpbnB1dCBjb25zaXN0cyBvZiBsZXR0ZXJzIG9ubHlcclxuZXhwb3J0IGNvbnN0IGxldHRlcnNPbmx5ID0gL15bQS1aYS16XSskLztcclxuLy8gQ2hlY2tzIGlmIHRoZSBpbnB1dCBjb25zaXN0cyBvZiBsZXR0ZXJzLCBwZXJpb2RzLCBoeXBoZW5zIGFuZCBzcGFjZXNcclxuZXhwb3J0IGNvbnN0IGxldHRlcnNQZXJpb2RzSHlwaGVuc0FuZFNwYWNlcyA9IC9eW2EtekEtWlxccy4tXSskLztcclxuLy8gQ2hlY2tzIGlmIGlucHV0IGNvbnRhaW5zIGFueSBzcGVjaWFsIGNoYXJhY3RlcnNcclxuZXhwb3J0IGNvbnN0IG5vU3BlY2lhbCA9IC9eW0EtWmEtejAtOSBdKyQvO1xyXG4vLyBDaGVja3MgaWYgYW4gaW5wdXQgY29uc2lzdHMgb2YgbnVtYmVycyBvbmx5XHJcbmV4cG9ydCBjb25zdCBudW1iZXJzT25seSA9IC9eXFxkKyQvO1xyXG4vLyBDaGVja3MgaWYgaW5wdXQgaXMgaW4gcGFzc3BvcnQgZm9ybWF0XHJcbmV4cG9ydCBjb25zdCBwYXNzcG9ydCA9IC9eW0EtUFItV1ldWzEtOV1cXGRcXHM/XFxkezR9WzEtOV0kLztcclxuLy8gQ2hlY2tzIGlmIGlucHV0IGNvbnNpc3Qgb2YgYXQgbGVhc3QgMSBsb3dlcmNhc2UgbGV0dGVyLCAxIHVwcGVyY2FzZSBsZXR0ZXIsXHJcbi8vIDEgbnVtYmVyLCAxIHNwZWNpYWwgY2hhcmFjdGVyIGFuZCBoYXMgbGVuZ3RoIG9mIGF0IGxlYXN0IDggY2hhcmFjdGVyc1xyXG5leHBvcnQgY29uc3QgcGFzc3dvcmRTdHJlbmd0aCA9XHJcbiAgLyg/PSguKlswLTldKSkoPz0uKltcXCFAIyQlXiYqKClcXFxcW1xcXXt9XFwtXys9fmB8OjtcIic8PiwuLz9dKSg/PS4qW2Etel0pKD89KC4qW0EtWl0pKSg/PSguKikpLns4LH0vO1xyXG4vLyBDaGVja3MgZm9yIGEgKDAwMCkgMDAwIDAwMDAgcGhvbmUgZm9ybWF0XHJcbmV4cG9ydCBjb25zdCBwaG9uZU51bWJlciA9IC9eKFxcKCk/WzItOV17MX1cXGR7Mn0oXFwpKT8oLXxcXHMpP1xcZHszfSgtfFxccylcXGR7NH0kLztcclxuLy8gQ2hlY2tzIGZvciBhIHNpbmdsZSBzcGFjZSBjaGFyYWN0ZXJcclxuZXhwb3J0IGNvbnN0IHNpbmdsZVNwYWNlID0gL1tcXHNdLztcclxuLy8gUmVzdHJpY3Qgb25seSBzcGFjZXMsIHNwYWNlcyBhdCB0aGUgYmVnaW5uaW5nIGFuZCBlbmQgb2YgdGhlIGZpZWxkXHJcbmV4cG9ydCBjb25zdCBzcGFjZVJlc3RyaWN0aW9uID0gL15cXFMkfF5cXFNbXFxzXFxTXSpcXFMkLztcclxuLy8gQ2hlY2tzIGlmIGlucHV0IGlzIGluIGFuIFNvY2lhbCBTZWN1cml0eSBOdW1iZXIgZm9ybWF0XHJcbmV4cG9ydCBjb25zdCBzc24gPVxyXG4gIC9eKCg/ITIxOS0wOS05OTk5fDA3OC0wNS0xMTIwKSg/ITY2NnwwMDB8OVxcZHsyfSlcXGR7M30tKD8hMDApXFxkezJ9LSg/ITB7NH0pXFxkezR9KXwoKD8hMjE5IDA5IDk5OTl8MDc4IDA1IDExMjApKD8hNjY2fDAwMHw5XFxkezJ9KVxcZHszfSAoPyEwMClcXGR7Mn0gKD8hMHs0fSlcXGR7NH0pfCgoPyEyMTkwOTk5OTl8MDc4MDUxMTIwKSg/ITY2NnwwMDB8OVxcZHsyfSlcXGR7M30oPyEwMClcXGR7Mn0oPyEwezR9KVxcZHs0fSkkLztcclxuLy8gQ2hlY2tzIGZvciBUaW1lIEZvcm1hdCBISDpNTSAxMi1ob3VyIHdpdGggb3B0aW9uYWwgbGVhZGluZyAwXHJcbmV4cG9ydCBjb25zdCB0aW1lSEhfTU1fMTIgPSAvKCgxWzAtMl18MD9bMS05XSk6KFswLTVdWzAtOV0pID8oW0FhUHBdW01tXSkpLztcclxuLy8gQ2hlY2tzIGZvciBUaW1lIEZvcm1hdCBISDpNTSAyNC1ob3VyIHdpdGggb3B0aW9uYWwgbGVhZGluZyAwXHJcbmV4cG9ydCBjb25zdCB0aW1lSEhfTU1fMjQgPSAvXihbMC05XXwwWzAtOV18MVswLTldfDJbMC0zXSk6WzAtNV1bMC05XSQvO1xyXG4vLyBDaGVja3MgZm9yIFRpbWUgRm9ybWF0IEhIOk1NOlNTIDI0LWhvdXJcclxuZXhwb3J0IGNvbnN0IHRpbWVISF9NTV9TU18yNCA9XHJcbiAgLyg/OlswMV1cXGR8MlswMTIzXSk6KD86WzAxMjM0NV1cXGQpOig/OlswMTIzNDVdXFxkKS87XHJcbi8vIENoZWNrcyBpZiBpbnB1dCBpcyBhIHVybFxyXG5leHBvcnQgY29uc3QgdXJsID1cclxuICAvKGh0dHB8ZnRwfGh0dHBzKTpcXC9cXC9bXFx3LV0rKFxcLltcXHctXSspKyhbXFx3LixAP149JSZhbXA7OlxcL34rIy1dKltcXHdAP149JSZhbXA7XFwvfisjLV0pPy87XHJcbi8vIENoZWNrcyBvZiBhIHppcCBjb2RlIGluIGZvcm1hdHMgMDAwMDAgb3IgMDAwMDAtMDAwMFxyXG5leHBvcnQgY29uc3QgemlwQ29kZSA9IC8oXlxcZHs1fSQpfCheXFxkezV9LVxcZHs0fSQpLztcclxuIl19