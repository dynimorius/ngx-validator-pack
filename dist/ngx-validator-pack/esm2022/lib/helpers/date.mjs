/**
 * @license
 * Copyright Slavko Mihajlovic All Rights Reserved.
 *
 * Use of this source code is governed by an ISC-style license that can be
 * found at https://www.isc.org/licenses/
 */
import { compare } from "./numbers";
/**
 * @internal
 */
const prepareToCompare = (date, bufferYears) => {
    if (date) {
        const p_Date = new Date(date);
        const year = p_Date.getFullYear() + (bufferYears ?? 0);
        const month = p_Date.getMonth() + 1;
        const day = p_Date.getDate();
        return Number.parseInt(`${year}${month.toString().replace.length > 1 ? month : "0" + month}${day.toString().length > 1 ? day : "0" + day}`);
    }
    else {
        return 0;
    }
};
/**
 * @publicApi
 */
export const compareDates = (date1, date2, operation = "===") => {
    return compare(prepareToCompare(date1), prepareToCompare(date2), operation);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC12YWxpZGF0b3ItcGFjay9zcmMvbGliL2hlbHBlcnMvZGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFHSCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXBDOztHQUVHO0FBQ0gsTUFBTSxnQkFBZ0IsR0FBRyxDQUN2QixJQUFzQyxFQUN0QyxXQUFvQixFQUNaLEVBQUU7SUFDVixJQUFJLElBQUksRUFBRSxDQUFDO1FBQ1QsTUFBTSxNQUFNLEdBQUcsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsV0FBVyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3ZELE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDcEMsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzdCLE9BQU8sTUFBTSxDQUFDLFFBQVEsQ0FDcEIsR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLEdBQ2pFLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUMxQyxFQUFFLENBQ0gsQ0FBQztJQUNKLENBQUM7U0FBTSxDQUFDO1FBQ04sT0FBTyxDQUFDLENBQUM7SUFDWCxDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBRUY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FDMUIsS0FBVyxFQUNYLEtBQVcsRUFDWCxZQUFrQyxLQUFLLEVBQzlCLEVBQUU7SUFDWCxPQUFPLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsRUFBRSxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQztBQUM5RSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IFNsYXZrbyBNaWhhamxvdmljIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIElTQy1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXHJcbiAqIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmlzYy5vcmcvbGljZW5zZXMvXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgQ29tcGFyaXNvbk9wZXJhdGlvbnMgfSBmcm9tIFwiLi4vdHlwZXNcIjtcclxuaW1wb3J0IHsgY29tcGFyZSB9IGZyb20gXCIuL251bWJlcnNcIjtcclxuXHJcbi8qKlxyXG4gKiBAaW50ZXJuYWxcclxuICovXHJcbmNvbnN0IHByZXBhcmVUb0NvbXBhcmUgPSAoXHJcbiAgZGF0ZTogRGF0ZSB8IHN0cmluZyB8IHVuZGVmaW5lZCB8IG51bGwsXHJcbiAgYnVmZmVyWWVhcnM/OiBudW1iZXJcclxuKTogbnVtYmVyID0+IHtcclxuICBpZiAoZGF0ZSkge1xyXG4gICAgY29uc3QgcF9EYXRlID0gbmV3IERhdGUoZGF0ZSk7XHJcbiAgICBjb25zdCB5ZWFyID0gcF9EYXRlLmdldEZ1bGxZZWFyKCkgKyAoYnVmZmVyWWVhcnMgPz8gMCk7XHJcbiAgICBjb25zdCBtb250aCA9IHBfRGF0ZS5nZXRNb250aCgpICsgMTtcclxuICAgIGNvbnN0IGRheSA9IHBfRGF0ZS5nZXREYXRlKCk7XHJcbiAgICByZXR1cm4gTnVtYmVyLnBhcnNlSW50KFxyXG4gICAgICBgJHt5ZWFyfSR7bW9udGgudG9TdHJpbmcoKS5yZXBsYWNlLmxlbmd0aCA+IDEgPyBtb250aCA6IFwiMFwiICsgbW9udGh9JHtcclxuICAgICAgICBkYXkudG9TdHJpbmcoKS5sZW5ndGggPiAxID8gZGF5IDogXCIwXCIgKyBkYXlcclxuICAgICAgfWBcclxuICAgICk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiAwO1xyXG4gIH1cclxufTtcclxuXHJcbi8qKlxyXG4gKiBAcHVibGljQXBpXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgY29tcGFyZURhdGVzID0gKFxyXG4gIGRhdGUxOiBEYXRlLFxyXG4gIGRhdGUyOiBEYXRlLFxyXG4gIG9wZXJhdGlvbjogQ29tcGFyaXNvbk9wZXJhdGlvbnMgPSBcIj09PVwiXHJcbik6IGJvb2xlYW4gPT4ge1xyXG4gIHJldHVybiBjb21wYXJlKHByZXBhcmVUb0NvbXBhcmUoZGF0ZTEpLCBwcmVwYXJlVG9Db21wYXJlKGRhdGUyKSwgb3BlcmF0aW9uKTtcclxufTtcclxuIl19