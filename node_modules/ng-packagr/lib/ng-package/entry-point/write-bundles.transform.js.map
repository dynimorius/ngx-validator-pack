{"version":3,"file":"write-bundles.transform.js","sourceRoot":"","sources":["../../../../src/lib/ng-package/entry-point/write-bundles.transform.ts"],"names":[],"mappings":"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","sourcesContent":["import ora from 'ora';\nimport { join } from 'path';\nimport type { OutputAsset, OutputChunk, RollupCache } from 'rollup';\nimport { rollupBundleFile } from '../../flatten/rollup';\nimport { transformFromPromise } from '../../graph/transform';\nimport { generateKey, readCacheEntry, saveCacheEntry } from '../../utils/cache';\nimport { exists, mkdir, writeFile } from '../../utils/fs';\nimport { EntryPointNode, isEntryPointInProgress } from '../nodes';\nimport { NgPackagrOptions } from '../options.di';\n\ninterface BundlesCache {\n  hash: string;\n  fesm2022: (OutputChunk | OutputAsset)[];\n}\n\nexport const writeBundlesTransform = (options: NgPackagrOptions) =>\n  transformFromPromise(async graph => {\n    const entryPoint: EntryPointNode = graph.find(isEntryPointInProgress());\n    const { destinationFiles, entryPoint: ngEntryPoint, tsConfig } = entryPoint.data;\n    const cache = entryPoint.cache;\n    const { fesm2022Dir, esm2022 } = destinationFiles;\n\n    const spinner = ora({\n      hideCursor: false,\n      discardStdin: false,\n    });\n\n    const key = await generateKey(ngEntryPoint.moduleId, esm2022, fesm2022Dir, tsConfig.options.compilationMode);\n    const hash = await generateKey([...cache.outputCache.values()].map(({ version }) => version).join(':'));\n    const cacheDirectory = options.cacheEnabled && options.cacheDirectory;\n    if (cacheDirectory) {\n      const cacheResult: BundlesCache = await readCacheEntry(options.cacheDirectory, key);\n      let writing = false;\n\n      if (cacheResult?.hash === hash) {\n        try {\n          for (const file of cacheResult.fesm2022) {\n            const filePath = join(fesm2022Dir, file.fileName);\n            if (options.watch && await exists(filePath)) {\n              continue;\n            }\n\n            if (!writing) {\n              writing = true;\n              spinner.start('Writing FESM bundles');\n              await mkdir(fesm2022Dir, { recursive: true });\n            }\n\n            await writeFile(filePath, file.type === 'asset' ? file.source : file.code);\n          }\n\n          if (writing) {\n            spinner.succeed('Writing FESM bundles');\n          }\n        } catch (error) {\n          if (!writing) {\n            spinner.start('Writing FESM bundles');\n          }\n\n          spinner.fail();\n          throw error;\n        }\n\n        return;\n      }\n    }\n\n    async function generateFESM(\n      rollupCache: RollupCache,\n      dir: string,\n    ): Promise<{ files: (OutputChunk | OutputAsset)[]; rollupCache: RollupCache }> {\n      const { cache: rollupFESMCache, files } = await rollupBundleFile({\n        sourceRoot: tsConfig.options.sourceRoot,\n        entry: esm2022,\n        entryName: ngEntryPoint.flatModuleFile,\n        moduleName: ngEntryPoint.moduleId,\n        dir,\n        cache: rollupCache,\n        cacheDirectory,\n        fileCache: cache.outputCache,\n        cacheKey: await generateKey(esm2022, dir, ngEntryPoint.moduleId, tsConfig.options.compilationMode),\n      });\n\n      return {\n        /** The map contents are in an asset file type, which makes storing the map in the cache as redudant. */\n        files: files.map(f => {\n          if (f.type === 'chunk') {\n            f.map = null;\n          }\n\n          return f;\n        }),\n        rollupCache: options.watch ? rollupFESMCache : undefined,\n      };\n    }\n\n    const fesmCache: Partial<BundlesCache> = {\n      hash,\n    };\n\n    try {\n      const { rollupCache, files } = await generateFESM(cache.rollupFESM2022Cache, fesm2022Dir);\n\n      cache.rollupFESM2022Cache = rollupCache;\n      fesmCache.fesm2022 = files;\n\n      spinner.succeed(`Generating FESM bundles`);\n    } catch (error) {\n      spinner.fail();\n      throw error;\n    }\n\n    if (cacheDirectory) {\n      await saveCacheEntry(cacheDirectory, key, JSON.stringify(fesmCache));\n    }\n  });\n"]}