{"version":3,"file":"ng-package.schema.js","sourceRoot":"","sources":["../src/ng-package.schema.ts"],"names":[],"mappings":";AAAA,oBAAoB;AACpB;;;;GAIG","sourcesContent":["/* eslint-disable */\n/**\n * This file was automatically generated by json-schema-to-typescript.\n * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n * and run json-schema-to-typescript to regenerate this file.\n */\n\nexport type AssetPattern =\n  | {\n      /**\n       * The pattern to match.\n       */\n      glob: string;\n      /**\n       * The input directory path in which to apply 'glob'. Defaults to the project root.\n       */\n      input: string;\n      /**\n       * An array of globs to ignore.\n       */\n      ignore?: string[];\n      /**\n       * Absolute path within the output.\n       */\n      output: string;\n      /**\n       * Allow glob patterns to follow symlink directories. This allows subdirectories of the symlink to be searched.\n       */\n      followSymlinks?: boolean;\n    }\n  | string;\n\n/**\n * JSON Schema for `ng-package.json` description file\n */\nexport interface NgPackageConfig {\n  $schema?: string;\n  /**\n   * Delete output path before build.\n   */\n  deleteDestPath?: boolean;\n  /**\n   * Destination folder where distributable binaries of the Angular library are written (default: `dist`).\n   */\n  dest?: string;\n  /**\n   * Enable this to keep the 'scripts' section in package.json. Read the NPM Blog on 'Package install scripts vulnerability' â€“ http://blog.npmjs.org/post/141702881055/package-install-scripts-vulnerability\n   */\n  keepLifecycleScripts?: boolean;\n  /**\n   * A list of dependencies that are allowed in the 'dependencies' and 'devDependencies' section of package.json. Values in the list are regular expressions matched against npm package names.\n   */\n  allowedNonPeerDependencies?: string[];\n  /**\n   * A list of files which are simply copied into the package.\n   */\n  assets?: AssetPattern[];\n  /**\n   * The stylesheet language to use for the library's inline component styles.\n   */\n  inlineStyleLanguage?: \"css\" | \"less\" | \"sass\" | \"scss\";\n  /**\n   * Description of the library's entry point.\n   */\n  lib?: {\n    /**\n     * Entry file to the public API (default: `src/public_api.ts`).\n     */\n    entryFile?: string;\n    /**\n     * Filename of the auto-generated flat module file (if empty, defaults to the package name as given in `package.json`).\n     */\n    flatModuleFile?: string;\n    /**\n     * Embed assets in css file using data URIs - see https://css-tricks.com/data-uris\n     */\n    cssUrl?: \"none\" | \"inline\";\n    /**\n     * Any additional paths that should be used to resolve style imports\n     */\n    styleIncludePaths?: string[];\n  };\n}\n"]}